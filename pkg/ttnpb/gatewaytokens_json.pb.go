// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.6.0
// - protoc             v4.23.4
// source: ttn/lorawan/v3/gatewaytokens.proto

package ttnpb

import (
	golang "github.com/TheThingsIndustries/protoc-gen-go-json/golang"
	jsonplugin "github.com/TheThingsIndustries/protoc-gen-go-json/jsonplugin"
)

// MarshalProtoJSON marshals the GatewayToken_Payload message to JSON.
func (x *GatewayToken_Payload) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.GatewayIds != nil || s.HasField("gateway_ids") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("gateway_ids")
		x.GatewayIds.MarshalProtoJSON(s.WithField("gateway_ids"))
	}
	if x.Rights != nil || s.HasField("rights") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rights")
		x.Rights.MarshalProtoJSON(s.WithField("rights"))
	}
	if x.CreatedAt != nil || s.HasField("created_at") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("created_at")
		if x.CreatedAt == nil {
			s.WriteNil()
		} else {
			golang.MarshalTimestamp(s, x.CreatedAt)
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GatewayToken_Payload to JSON.
func (x *GatewayToken_Payload) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GatewayToken_Payload message from JSON.
func (x *GatewayToken_Payload) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "gateway_ids", "gatewayIds":
			if s.ReadNil() {
				x.GatewayIds = nil
				return
			}
			x.GatewayIds = &GatewayIdentifiers{}
			x.GatewayIds.UnmarshalProtoJSON(s.WithField("gateway_ids", true))
		case "rights":
			if s.ReadNil() {
				x.Rights = nil
				return
			}
			x.Rights = &Rights{}
			x.Rights.UnmarshalProtoJSON(s.WithField("rights", true))
		case "created_at", "createdAt":
			s.AddField("created_at")
			if s.ReadNil() {
				x.CreatedAt = nil
				return
			}
			v := golang.UnmarshalTimestamp(s)
			if s.Err() != nil {
				return
			}
			x.CreatedAt = v
		}
	})
}

// UnmarshalJSON unmarshals the GatewayToken_Payload from JSON.
func (x *GatewayToken_Payload) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GatewayToken message to JSON.
func (x *GatewayToken) MarshalProtoJSON(s *jsonplugin.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.KeyId != "" || s.HasField("key_id") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("key_id")
		s.WriteString(x.KeyId)
	}
	if x.Payload != nil || s.HasField("payload") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("payload")
		x.Payload.MarshalProtoJSON(s.WithField("payload"))
	}
	if len(x.Checksum) > 0 || s.HasField("checksum") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("checksum")
		s.WriteBytes(x.Checksum)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GatewayToken to JSON.
func (x *GatewayToken) MarshalJSON() ([]byte, error) {
	return jsonplugin.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GatewayToken message from JSON.
func (x *GatewayToken) UnmarshalProtoJSON(s *jsonplugin.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.ReadAny() // ignore unknown field
		case "key_id", "keyId":
			s.AddField("key_id")
			x.KeyId = s.ReadString()
		case "payload":
			if s.ReadNil() {
				x.Payload = nil
				return
			}
			x.Payload = &GatewayToken_Payload{}
			x.Payload.UnmarshalProtoJSON(s.WithField("payload", true))
		case "checksum":
			s.AddField("checksum")
			x.Checksum = s.ReadBytes()
		}
	})
}

// UnmarshalJSON unmarshals the GatewayToken from JSON.
func (x *GatewayToken) UnmarshalJSON(b []byte) error {
	return jsonplugin.DefaultUnmarshalerConfig.Unmarshal(b, x)
}
