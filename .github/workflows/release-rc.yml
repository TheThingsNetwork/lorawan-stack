name: Release-candidate release

on:
  workflow_dispatch:
    inputs:
      rc_version:
        description: RC version (integer)
        required: true

env:
  NODE_ENV: production

jobs:
  release:
    name: Release-candidate release
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Check branch
        run: echo "${{ github.ref_name }}" | grep -Pq '^release/v3\.\d+\.\d+$'
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
      - name: Install Go and Dependencies
        uses: ./.github/actions/install-go-and-deps
      - name: Build Mage
        uses: ./.github/actions/build-mage
      - name: Install Node and Dependencies
        uses: ./.github/actions/install-node-and-deps
      - name: Initialize device repository index cache
        id: dr-index-cache
        uses: actions/cache@v4
        with:
          path: data/lorawan-devices-index
          key: dr-index-cache-${{ hashFiles('data/lorawan-devices') }}
      - name: Create device repository index
        run: tools/bin/mage dev:initDeviceRepo
        if: steps.dr-index-cache.outputs.cache-hit != 'true'
      - name: Build Frontend
        uses: ./.github/actions/build-frontend
        with:
          production-sourcemaps: "true"
      - name: Check for diff
        run: tools/bin/mage git:diff
      - name: Import the signing key
        run: |
          printf '%s' '${{ secrets.SIGNATURE_PASSPHRASE }}' >/tmp/gpg_passphrase
          cat /tmp/gpg_passphrase | gpg --passphrase-fd 0 --no-tty --batch --import gpg_signing_key
      - name: Determine version
        id: version
        run: |
          export RC_VERSION=${{ format('{0}-rc{1}', github.ref_name, github.event.inputs.rc_version) }}
          export RC_VERSION=${RC_VERSION#release/v}
          echo "rc_version=$RC_VERSION" >> $GITHUB_OUTPUT
      - name: Run Goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "v1.18.2"
          args: release --config .goreleaser.snapshot.yml --snapshot --timeout 60m
        env:
          SIGN_KEY_NAME: ${{ secrets.SIGN_KEY_NAME }}
          GORELEASER_CURRENT_TAG: ${{ steps.version.outputs.rc_version }}
      - name: Tag and Push Docker images
        run: |
          docker tag lorawan-stack-dev:${{ github.sha }}-amd64 ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-amd64
          docker tag lorawan-stack-dev:${{ github.sha }}-arm64 ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-arm64
          docker push ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-amd64
          docker push ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-arm64
          docker manifest create ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION} ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-amd64 ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}-arm64
          docker manifest push ${DOCKER_PREFIX}/lorawan-stack-dev:${RC_VERSION}
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_PREFIX: thethingsnetwork
          RC_VERSION: ${{ steps.version.outputs.rc_version }}
