{
  "swagger": "2.0",
  "info": {
    "title": "The Things Stack for LoRaWAN v3 API",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApplicationRegistry",
      "description": "Manage applications."
    },
    {
      "name": "ApplicationAccess",
      "description": "Manage access to applications."
    },
    {
      "name": "As",
      "description": "Manage an Application Server."
    },
    {
      "name": "NsAs",
      "description": "The NsAs service is used by The Things Stack Network Servers to interact with The Things Stack Application Servers. This is an inter-component service and is not meant for end users."
    },
    {
      "name": "AppAs",
      "description": "Connect and manage applications or integrations to an Application Server."
    },
    {
      "name": "AsEndDeviceRegistry",
      "description": "Manage end devices on the Application Server."
    },
    {
      "name": "AsEndDeviceBatchRegistry",
      "description": "Manage batches of end devices on the Application Server."
    },
    {
      "name": "ApplicationUpStorage",
      "description": "Query application upstream messages from the storage integration."
    },
    {
      "name": "ApplicationPackageRegistry",
      "description": "Manage application packages and their associations."
    },
    {
      "name": "ApplicationPubSubRegistry",
      "description": "Manage application pubsubs."
    },
    {
      "name": "ApplicationWebhookRegistry",
      "description": "Manage application webhooks."
    },
    {
      "name": "ClientRegistry",
      "description": "Manage OAuth client registrations."
    },
    {
      "name": "ClientAccess",
      "description": "Manage access to OAuth clients."
    },
    {
      "name": "Configuration",
      "description": "Retrieve LoRaWAN network configuration options."
    },
    {
      "name": "ContactInfoRegistry",
      "description": "DEPRECATED: Validate contact information of registered entities."
    },
    {
      "name": "EndDeviceClaimingServer",
      "description": "Claim and manage end devices on external Join Servers."
    },
    {
      "name": "EndDeviceBatchClaimingServer",
      "description": "Claim and manage batches of end devices on external Join Servers."
    },
    {
      "name": "GatewayClaimingServer",
      "description": "Claim gateways and manage claims."
    },
    {
      "name": "DeviceRepository",
      "description": "Get information on LoRaWAN end device brands, models, and templates from the Device Repository."
    },
    {
      "name": "EmailValidationRegistry",
      "description": "Validate a user's primary email."
    },
    {
      "name": "EndDeviceRegistry",
      "description": "Manage end devices on The Things Stack Identity Server."
    },
    {
      "name": "EndDeviceTemplateConverter",
      "description": "Convert end device information between supported formats."
    },
    {
      "name": "EndDeviceBatchRegistry",
      "description": "Manage end devices on The Things Stack Identity Server in batches."
    },
    {
      "name": "Events",
      "description": "Read events served from a The Things Stack cluster."
    },
    {
      "name": "GatewayConfigurationService",
      "description": "Fetch configuration for gateways."
    },
    {
      "name": "ManagedGatewayConfigurationService",
      "description": "Configure managed gateways."
    },
    {
      "name": "ManagedGatewayWiFiProfileConfigurationService",
      "description": "Configure WiFi profiles for managed gateways."
    },
    {
      "name": "ManagedGatewayEthernetProfileConfigurationService",
      "description": "Configure Ethernet profiles for managed gateways."
    },
    {
      "name": "GatewayRegistry",
      "description": "Manage gateways."
    },
    {
      "name": "GatewayAccess",
      "description": "Manage access to gateways."
    },
    {
      "name": "GatewayBatchAccess",
      "description": "Manage access to batches of gateways."
    },
    {
      "name": "GatewayBatchRegistry",
      "description": "Manage batches of gateways."
    },
    {
      "name": "GtwGs",
      "description": "Connect a gRPC gateway to a The Things Stack Gateway Server."
    },
    {
      "name": "NsGs",
      "description": "The NsGs service connects a Network Server to a Gateway Server. This is an inter-component service and is not intended for end users."
    },
    {
      "name": "Gs",
      "description": "Retrieve gateway connection statistics."
    },
    {
      "name": "EntityAccess",
      "description": "Check the access rights for an entity."
    },
    {
      "name": "Is",
      "description": "Get information about The Things Stack Identity Server."
    },
    {
      "name": "NsJs",
      "description": "The NsJs service connects a Network Server to a Join Server. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "AsJs",
      "description": "The AsJs service connects an Application Server to a Join Server. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "AppJs",
      "description": "The AppJs service is used by an external AWS integration to connect to a Join Server instance."
    },
    {
      "name": "NetworkCryptoService",
      "description": "The NetworkCryptoService supports network layer cryptographic operations. This service is not intended to be used by end users."
    },
    {
      "name": "ApplicationCryptoService",
      "description": "The ApplicationCryptoService supports application layer cryptographic operations. This service is not intended to be used by end users."
    },
    {
      "name": "JsEndDeviceRegistry",
      "description": "Manage end devices on The Things Stack Join Server."
    },
    {
      "name": "JsEndDeviceBatchRegistry",
      "description": "Manage batches of end devices on The Things Stack Join Server."
    },
    {
      "name": "ApplicationActivationSettingRegistry",
      "description": "Manage application activation settings."
    },
    {
      "name": "Js",
      "description": "Fetch configuration for The Things Stack Join Server."
    },
    {
      "name": "Ns",
      "description": "Manage The Things Stack Network Server."
    },
    {
      "name": "AsNs",
      "description": "The AsNs service connects an Application Server to a Network Server. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "GsNs",
      "description": "The GsNS service connects a Gateway Server to a Network Server. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "NsEndDeviceRegistry",
      "description": "Manage end devices on The Things Stack Network Server."
    },
    {
      "name": "NsEndDeviceBatchRegistry",
      "description": "Manage batches of end devices on The Things Stack Network Server."
    },
    {
      "name": "NsRelayConfigurationService",
      "description": "Manage configuration of LoRaWANÂ® relay devices."
    },
    {
      "name": "NotificationService",
      "description": "Read and manage notifications."
    },
    {
      "name": "OAuthAuthorizationRegistry",
      "description": "Manage OAuth client authorizations for users."
    },
    {
      "name": "OrganizationRegistry",
      "description": "Manage organizations."
    },
    {
      "name": "OrganizationAccess",
      "description": "Manage access to organizations"
    },
    {
      "name": "GsPba",
      "description": "The GsPba service connects a Gateway Server to a Packet Broker Agent. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "NsPba",
      "description": "The NsPba service connects a Network Server to a Packet Broker Agent. This is an inter-component service and is not intended to be used by end users."
    },
    {
      "name": "Pba",
      "description": "Manage peering via Packet Broker."
    },
    {
      "name": "EndDeviceQRCodeGenerator",
      "description": "Generate and parse end device QR codes."
    },
    {
      "name": "EntityRegistrySearch",
      "description": "Search for entities in the Entity Registry."
    },
    {
      "name": "EndDeviceRegistrySearch",
      "description": "Search for end devices in the End Device Registry."
    },
    {
      "name": "UserRegistry",
      "description": "Manage users."
    },
    {
      "name": "UserAccess",
      "description": "Manage user access."
    },
    {
      "name": "UserInvitationRegistry",
      "description": "Manage user sessions."
    },
    {
      "name": "UserSessionRegistry"
    },
    {
      "name": "UserBookmarkRegistry"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/applications": {
      "get": {
        "summary": "List applications where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the applications the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ApplicationRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Applications"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the application fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted applications.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application.ids.application_id}": {
      "put": {
        "summary": "Update the application, changing the fields specified by the field mask to the provided values.",
        "operationId": "ApplicationRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application.ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_ids.application_id}": {
      "get": {
        "summary": "Get the application with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ApplicationRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the application fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_ids.application_id}/api-keys": {
      "get": {
        "summary": "List the API keys for this application.",
        "operationId": "ApplicationAccess_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path.\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      },
      "post": {
        "summary": "Create an API key scoped to this application.",
        "operationId": "ApplicationAccess_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationAccessCreateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/api-keys/{api_key.id}": {
      "put": {
        "summary": "Update the rights of an API key of the application.\nThis method can also be used to delete the API key, by giving it no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "ApplicationAccess_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api_key.id",
            "description": "Immutable and unique public identifier for the API key.\nGenerated by the Access Server.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationAccessUpdateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/api-keys/{key_id}": {
      "get": {
        "summary": "Get a single API key of this application.",
        "operationId": "ApplicationAccess_GetAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "description": "Unique public identifier for the API key.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      },
      "delete": {
        "summary": "Delete a single API key of this application.",
        "operationId": "ApplicationAccess_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborator/organization/{collaborator.organization_ids.organization_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the application.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "ApplicationAccess_GetCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborator/organization/{collaborator_ids.organization_ids.organization_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from an application.",
        "operationId": "ApplicationAccess_DeleteCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborator/user/{collaborator.user_ids.user_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the application.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "ApplicationAccess_GetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborator/user/{collaborator_ids.user_ids.user_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from an application.",
        "operationId": "ApplicationAccess_DeleteCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborators": {
      "get": {
        "summary": "List the collaborators on this application.",
        "operationId": "ApplicationAccess_ListCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Collaborators"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      },
      "put": {
        "summary": "Set the rights of a collaborator (member) on the application.\nThis method can also be used to delete the collaborator, by giving them no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "ApplicationAccess_SetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationAccessSetCollaboratorBody"
            }
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{application_ids.application_id}/collaborators/search": {
      "get": {
        "summary": "Search for accounts that match the conditions specified in the request.",
        "operationId": "EntityRegistrySearch_SearchAccounts2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3SearchAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "complement_collaborators",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/applications/{application_ids.application_id}/devices": {
      "get": {
        "summary": "List end devices in the given application.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "EndDeviceRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EndDeviceRegistry"
        ]
      }
    },
    "/applications/{application_ids.application_id}/devices/batch": {
      "get": {
        "summary": "Get a batch of end devices with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.\nDevices not found are skipped and no error is returned.",
        "operationId": "EndDeviceBatchRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nThis mask is applied on all the end devices in the result.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EndDeviceBatchRegistry"
        ]
      },
      "delete": {
        "summary": "Delete a batch of end devices with the given IDs.",
        "description": "This operation is atomic; either all devices are deleted or none.\nDevices not found are skipped and no error is returned.\nBefore calling this RPC, use the corresponding BatchDelete RPCs\nof NsEndDeviceRegistry, AsEndDeviceRegistry and\noptionally the JsEndDeviceRegistry to delete the end devices.\nIf the devices were claimed on a Join Server, use the BatchUnclaim RPC\nof the DeviceClaimingServer.\nThis is NOT done automatically.",
        "operationId": "EndDeviceBatchRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "EndDeviceBatchRegistry"
        ]
      }
    },
    "/applications/{application_ids.application_id}/devices/{device_id}": {
      "delete": {
        "summary": "Delete the end device with the given IDs.",
        "description": "Before deleting an end device it first needs to be deleted from the\nNsEndDeviceRegistry, the AsEndDeviceRegistry and the JsEndDeviceRegistry.\nIn addition, if the device claimed on a Join Server, it also needs to be\nunclaimed via the DeviceClaimingServer so it can be claimed in the future.\nThis is NOT done automatically.",
        "operationId": "EndDeviceRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "EndDeviceRegistry"
        ]
      }
    },
    "/applications/{application_id}": {
      "delete": {
        "summary": "Delete the application. This may not release the application ID for reuse.\nAll end devices must be deleted from the application before it can be deleted.",
        "operationId": "ApplicationRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_id}/dev-eui": {
      "post": {
        "summary": "Request DevEUI from the configured address block for a device inside the application.\nThe maximum number of DevEUI's issued per application can be configured.",
        "operationId": "ApplicationRegistry_IssueDevEUI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3IssueDevEUIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_id}/purge": {
      "delete": {
        "summary": "Purge the application. This will release the application ID for reuse.\nAll end devices must be deleted from the application before it can be deleted.\nThe application owner is responsible for clearing data from any (external) integrations\nthat may store and expose data by application ID",
        "operationId": "ApplicationRegistry_Purge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_id}/restore": {
      "post": {
        "summary": "Restore a recently deleted application.",
        "description": "Deployment configuration may specify if, and for how long after deletion,\nentities can be restored.",
        "operationId": "ApplicationRegistry_Restore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/applications/{application_id}/rights": {
      "get": {
        "summary": "List the rights the caller has on this application.",
        "operationId": "ApplicationAccess_ListRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Rights"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationAccess"
        ]
      }
    },
    "/applications/{end_device.ids.application_ids.application_id}/devices": {
      "post": {
        "summary": "Create a new end device within an application.",
        "description": "After registering an end device, it also needs to be registered in\nthe NsEndDeviceRegistry that is exposed by the Network Server,\nthe AsEndDeviceRegistry that is exposed by the Application Server,\nand the JsEndDeviceRegistry that is exposed by the Join Server.",
        "operationId": "EndDeviceRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3EndDeviceRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "EndDeviceRegistry"
        ]
      }
    },
    "/applications/{end_device.ids.application_ids.application_id}/devices/{end_device.ids.device_id}": {
      "put": {
        "summary": "Update the end device, changing the fields specified by the field mask to the provided values.",
        "operationId": "EndDeviceRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device.ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3EndDeviceRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "EndDeviceRegistry"
        ]
      }
    },
    "/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}": {
      "get": {
        "summary": "Get the end device with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "EndDeviceRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EndDeviceRegistry"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/devices/batch": {
      "delete": {
        "summary": "Delete a list of devices within the same application.\nThis operation is atomic; either all devices are deleted or none.\nDevices not found are skipped and no error is returned.",
        "operationId": "AsEndDeviceBatchRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "AsEndDeviceBatchRegistry"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/devices/{device_id}": {
      "delete": {
        "summary": "Delete deletes the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "AsEndDeviceRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "AsEndDeviceRegistry"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/devices/{device_id}/down": {
      "get": {
        "summary": "List the items currently in the downlink queue.",
        "operationId": "AppAs_DownlinkQueueList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationDownlinks"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/devices/{device_id}/packages": {
      "get": {
        "summary": "List returns the available packages for the end device.",
        "operationId": "ApplicationPackageRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/link": {
      "get": {
        "summary": "Get a link configuration from the Application Server to Network Server.\nThis only contains the configuration. Use GetLinkStats to view statistics and any link errors.",
        "operationId": "As_GetLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "As"
        ]
      },
      "put": {
        "summary": "Set a link configuration from the Application Server a Network Server.\nThis call returns immediately after setting the link configuration; it does not wait for a link to establish.\nTo get link statistics or errors, use GetLinkStats.\nNote that there can only be one Application Server instance linked to a Network Server for a given application at a time.",
        "operationId": "As_SetLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsSetLinkBody"
            }
          }
        ],
        "tags": [
          "As"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/packages/associations/{f_port}": {
      "delete": {
        "summary": "DeleteDefaultAssociation removes the default association on the FPort of the application.",
        "operationId": "ApplicationPackageRegistry_DeleteDefaultAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/packages/storage/{type}": {
      "get": {
        "summary": "Returns a stream of application messages that have been stored in the database.",
        "operationId": "ApplicationUpStorage_GetStoredApplicationUp2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3ApplicationUp"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3ApplicationUp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Query upstream messages of a specific type. If not set, then all upstream messages are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "description": "Limit number of results.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "Query upstream messages after this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "description": "Query upstream messages before this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "f_port",
            "description": "Query uplinks on a specific FPort only.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the upstream message fields that should be returned. See the API reference\nfor allowed field names for each type of upstream message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "description": "Query upstream messages that have arrived in the last minutes or hours. Cannot be used in conjunction with after and before.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "continuation_token",
            "description": "The continuation token, which is used to retrieve the next page. If provided, other fields are ignored.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationUpStorage"
        ]
      }
    },
    "/as/applications/{application_ids.application_id}/packages/storage/{type}/count": {
      "get": {
        "summary": "Returns how many application messages have been stored in the database for an application or end device.",
        "operationId": "ApplicationUpStorage_GetStoredApplicationUpCount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetStoredApplicationUpCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Count upstream messages of a specific type. If not set, then all upstream messages are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "after",
            "description": "Count upstream messages after this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "description": "Count upstream messages before this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "f_port",
            "description": "Count uplinks on a specific FPort only.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "last",
            "description": "Count upstream messages that have arrived in the last minutes or hours. Cannot be used in conjunction with after and before.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationUpStorage"
        ]
      }
    },
    "/as/applications/{application_id}/link": {
      "delete": {
        "summary": "Delete the link between the Application Server and Network Server for the specified application.",
        "operationId": "As_DeleteLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "As"
        ]
      }
    },
    "/as/applications/{application_id}/link/stats": {
      "get": {
        "summary": "GetLinkStats returns the link statistics.\nThis call returns a NotFound error code if there is no link for the given application identifiers.\nThis call returns the error code of the link error if linking to a Network Server failed.",
        "operationId": "As_GetLinkStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationLinkStats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "As"
        ]
      }
    },
    "/as/applications/{application_id}/mqtt-connection-info": {
      "get": {
        "summary": "Get connection information to connect an MQTT client.",
        "operationId": "AppAs_GetMQTTConnectionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MQTTConnectionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{association.ids.end_device_ids.application_ids.application_id}/devices/{association.ids.end_device_ids.device_id}/packages/associations/{association.ids.f_port}": {
      "put": {
        "summary": "SetAssociation updates or creates the association on the FPort of the end device.",
        "operationId": "ApplicationPackageRegistry_SetAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageAssociation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "association.ids.end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "association.ids.end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "association.ids.f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPackageRegistrySetAssociationBody"
            }
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{default.ids.application_ids.application_id}/packages/associations/{default.ids.f_port}": {
      "put": {
        "summary": "SetDefaultAssociation updates or creates the default association on the FPort of the application.",
        "operationId": "ApplicationPackageRegistry_SetDefaultAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageDefaultAssociation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "default.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "default.ids.f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPackageRegistrySetDefaultAssociationBody"
            }
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{end_device.ids.application_ids.application_id}/devices": {
      "post": {
        "summary": "Set creates or updates the device.",
        "operationId": "AsEndDeviceRegistry_Set2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3AsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "AsEndDeviceRegistry"
        ]
      }
    },
    "/as/applications/{end_device.ids.application_ids.application_id}/devices/{end_device.ids.device_id}": {
      "put": {
        "summary": "Set creates or updates the device.",
        "operationId": "AsEndDeviceRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device.ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3AsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "AsEndDeviceRegistry"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}": {
      "get": {
        "summary": "Get returns the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "AsEndDeviceRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AsEndDeviceRegistry"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/down/decode": {
      "post": {
        "operationId": "AppAs_DecodeDownlink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DecodeDownlinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppAsDecodeDownlinkBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/down/encode": {
      "post": {
        "operationId": "AppAs_EncodeDownlink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EncodeDownlinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppAsEncodeDownlinkBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/down/push": {
      "post": {
        "summary": "Push downlink messages to the end of the downlink queue.",
        "operationId": "AppAs_DownlinkQueuePush",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3AppAsDownlinkQueuePushBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/down/replace": {
      "post": {
        "summary": "Replace the entire downlink queue with the specified messages.\nThis can also be used to empty the queue by specifying no messages.",
        "operationId": "AppAs_DownlinkQueueReplace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3AppAsDownlinkQueueReplaceBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/packages/associations/{f_port}": {
      "delete": {
        "summary": "DeleteAssociation removes the association on the FPort of the end device.",
        "operationId": "ApplicationPackageRegistry_DeleteAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/packages/storage/{type}": {
      "get": {
        "summary": "Returns a stream of application messages that have been stored in the database.",
        "operationId": "ApplicationUpStorage_GetStoredApplicationUp",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3ApplicationUp"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3ApplicationUp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Query upstream messages of a specific type. If not set, then all upstream messages are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "description": "Limit number of results.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "Query upstream messages after this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "description": "Query upstream messages before this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "f_port",
            "description": "Query uplinks on a specific FPort only.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the upstream message fields that should be returned. See the API reference\nfor allowed field names for each type of upstream message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "description": "Query upstream messages that have arrived in the last minutes or hours. Cannot be used in conjunction with after and before.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "continuation_token",
            "description": "The continuation token, which is used to retrieve the next page. If provided, other fields are ignored.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationUpStorage"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/packages/storage/{type}/count": {
      "get": {
        "summary": "Returns how many application messages have been stored in the database for an application or end device.",
        "operationId": "ApplicationUpStorage_GetStoredApplicationUpCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetStoredApplicationUpCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Count upstream messages of a specific type. If not set, then all upstream messages are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "after",
            "description": "Count upstream messages after this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "description": "Count upstream messages before this timestamp only. Cannot be used in conjunction with last.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "f_port",
            "description": "Count uplinks on a specific FPort only.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "last",
            "description": "Count upstream messages that have arrived in the last minutes or hours. Cannot be used in conjunction with after and before.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationUpStorage"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/up/decode": {
      "post": {
        "operationId": "AppAs_DecodeUplink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DecodeUplinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppAsDecodeUplinkBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}/up/simulate": {
      "post": {
        "summary": "Simulate an upstream message. This can be used to test integrations.",
        "operationId": "AppAs_SimulateUplink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppAsSimulateUplinkBody"
            }
          }
        ],
        "tags": [
          "AppAs"
        ]
      }
    },
    "/as/applications/{ids.application_ids.application_id}/devices/{ids.device_id}/packages/associations": {
      "get": {
        "summary": "ListAssociations returns all of the associations of the end device.",
        "operationId": "ApplicationPackageRegistry_ListAssociations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageAssociations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.\nEach page is ordered by the FPort.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{ids.application_ids.application_id}/packages/associations/{ids.f_port}": {
      "get": {
        "summary": "GetDefaultAssociation returns the default association registered on the FPort of the application.",
        "operationId": "ApplicationPackageRegistry_GetDefaultAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageDefaultAssociation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{ids.application_id}/packages/associations": {
      "get": {
        "summary": "ListDefaultAssociations returns all of the default associations of the application.",
        "operationId": "ApplicationPackageRegistry_ListDefaultAssociations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageDefaultAssociations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.\nEach page is ordered by the FPort.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/applications/{ids.end_device_ids.application_ids.application_id}/devices/{ids.end_device_ids.device_id}/packages/associations/{ids.f_port}": {
      "get": {
        "summary": "GetAssociation returns the association registered on the FPort of the end device.",
        "operationId": "ApplicationPackageRegistry_GetAssociation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPackageAssociation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.f_port",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ids.end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "ids.end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "ids.end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPackageRegistry"
        ]
      }
    },
    "/as/configuration": {
      "get": {
        "operationId": "As_GetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetAsConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "As"
        ]
      }
    },
    "/as/pubsub-formats": {
      "get": {
        "operationId": "ApplicationPubSubRegistry_GetFormats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSubFormats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/pubsub/{application_ids.application_id}": {
      "get": {
        "operationId": "ApplicationPubSubRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSubs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/pubsub/{application_ids.application_id}/{pub_sub_id}": {
      "delete": {
        "operationId": "ApplicationPubSubRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pub_sub_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/pubsub/{ids.application_ids.application_id}/{ids.pub_sub_id}": {
      "get": {
        "operationId": "ApplicationPubSubRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.pub_sub_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/pubsub/{pubsub.ids.application_ids.application_id}": {
      "post": {
        "operationId": "ApplicationPubSubRegistry_Set2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pubsub.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSubRegistrySetBody"
            }
          }
        ],
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/pubsub/{pubsub.ids.application_ids.application_id}/{pubsub.ids.pub_sub_id}": {
      "put": {
        "operationId": "ApplicationPubSubRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pubsub.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pubsub.ids.pub_sub_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationPubSubRegistrySetBody"
            }
          }
        ],
        "tags": [
          "ApplicationPubSubRegistry"
        ]
      }
    },
    "/as/webhook-formats": {
      "get": {
        "operationId": "ApplicationWebhookRegistry_GetFormats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhookFormats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhook-templates": {
      "get": {
        "operationId": "ApplicationWebhookRegistry_ListTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhookTemplates"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhook-templates/{ids.template_id}": {
      "get": {
        "operationId": "ApplicationWebhookRegistry_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhookTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhooks/{application_ids.application_id}": {
      "get": {
        "operationId": "ApplicationWebhookRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhooks"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhooks/{application_ids.application_id}/{webhook_id}": {
      "delete": {
        "operationId": "ApplicationWebhookRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhooks/{ids.application_ids.application_id}/{ids.webhook_id}": {
      "get": {
        "operationId": "ApplicationWebhookRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids.webhook_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhooks/{webhook.ids.application_ids.application_id}": {
      "post": {
        "operationId": "ApplicationWebhookRegistry_Set2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "webhook.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhookRegistrySetBody"
            }
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/as/webhooks/{webhook.ids.application_ids.application_id}/{webhook.ids.webhook_id}": {
      "put": {
        "operationId": "ApplicationWebhookRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "webhook.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhook.ids.webhook_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationWebhookRegistrySetBody"
            }
          }
        ],
        "tags": [
          "ApplicationWebhookRegistry"
        ]
      }
    },
    "/auth_info": {
      "get": {
        "summary": "AuthInfo returns information about the authentication that is used on the request.",
        "operationId": "EntityAccess_AuthInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3AuthInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EntityAccess"
        ]
      }
    },
    "/clients": {
      "get": {
        "summary": "List OAuth clients where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the OAuth clients the caller\nhas access to.\nSimilar to Get, this selects the fields specified in the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ClientRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Clients"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the client fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted clients.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client.ids.client_id}": {
      "put": {
        "summary": "Update the OAuth client, changing the fields specified by the field mask to the provided values.",
        "operationId": "ClientRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Client"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client.ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClientRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client_ids.client_id}": {
      "get": {
        "summary": "Get the OAuth client with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ClientRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Client"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the client fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborator/organization/{collaborator.organization_ids.organization_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the client.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "ClientAccess_GetCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborator/user/{collaborator.user_ids.user_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the client.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "ClientAccess_GetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborators": {
      "get": {
        "summary": "List the collaborators on this OAuth client.",
        "operationId": "ClientAccess_ListCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Collaborators"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      },
      "put": {
        "summary": "Set the rights of a collaborator (member) on the OAuth client.\nThis method can also be used to delete the collaborator, by giving them no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "ClientAccess_SetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClientAccessSetCollaboratorBody"
            }
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborators/organization/{collaborator_ids.organization_ids.organization_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from a client.",
        "operationId": "ClientAccess_DeleteCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborators/search": {
      "get": {
        "summary": "Search for accounts that match the conditions specified in the request.",
        "operationId": "EntityRegistrySearch_SearchAccounts3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3SearchAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "complement_collaborators",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/clients/{client_ids.client_id}/collaborators/user/{collaborator_ids.user_ids.user_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from a client.",
        "operationId": "ClientAccess_DeleteCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/clients/{client_id}": {
      "delete": {
        "summary": "Delete the OAuth client. This may not release the client ID for reuse.",
        "operationId": "ClientRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client_id}/purge": {
      "delete": {
        "summary": "Purge the client. This will release the client ID for reuse.",
        "operationId": "ClientRegistry_Purge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client_id}/restore": {
      "post": {
        "summary": "Restore a recently deleted client.",
        "description": "Deployment configuration may specify if, and for how long after deletion,\nentities can be restored.",
        "operationId": "ClientRegistry_Restore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/clients/{client_id}/rights": {
      "get": {
        "summary": "List the rights the caller has on this application.",
        "operationId": "ClientAccess_ListRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Rights"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClientAccess"
        ]
      }
    },
    "/configuration/bands": {
      "get": {
        "operationId": "Configuration_ListBands",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListBandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "band_id",
            "description": "Optional Band ID to filter the results.\nIf unused, all supported Bands are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phy_version",
            "description": "Optional PHY version to filter the results.\nIf unused, all supported versions are returned.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHY_UNKNOWN",
              "PHY_V1_0",
              "TS001_V1_0",
              "PHY_V1_0_1",
              "TS001_V1_0_1",
              "PHY_V1_0_2_REV_A",
              "RP001_V1_0_2",
              "PHY_V1_0_2_REV_B",
              "RP001_V1_0_2_REV_B",
              "PHY_V1_1_REV_A",
              "RP001_V1_1_REV_A",
              "PHY_V1_1_REV_B",
              "RP001_V1_1_REV_B",
              "PHY_V1_0_3_REV_A",
              "RP001_V1_0_3_REV_A",
              "RP002_V1_0_0",
              "RP002_V1_0_1",
              "RP002_V1_0_2",
              "RP002_V1_0_3",
              "RP002_V1_0_4"
            ],
            "default": "PHY_UNKNOWN"
          }
        ],
        "tags": [
          "Configuration"
        ]
      }
    },
    "/configuration/bands/{band_id}": {
      "get": {
        "operationId": "Configuration_ListBands2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListBandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "band_id",
            "description": "Optional Band ID to filter the results.\nIf unused, all supported Bands are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phy_version",
            "description": "Optional PHY version to filter the results.\nIf unused, all supported versions are returned.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PHY_UNKNOWN",
              "PHY_V1_0",
              "TS001_V1_0",
              "PHY_V1_0_1",
              "TS001_V1_0_1",
              "PHY_V1_0_2_REV_A",
              "RP001_V1_0_2",
              "PHY_V1_0_2_REV_B",
              "RP001_V1_0_2_REV_B",
              "PHY_V1_1_REV_A",
              "RP001_V1_1_REV_A",
              "PHY_V1_1_REV_B",
              "RP001_V1_1_REV_B",
              "PHY_V1_0_3_REV_A",
              "RP001_V1_0_3_REV_A",
              "RP002_V1_0_0",
              "RP002_V1_0_1",
              "RP002_V1_0_2",
              "RP002_V1_0_3",
              "RP002_V1_0_4"
            ],
            "default": "PHY_UNKNOWN"
          }
        ],
        "tags": [
          "Configuration"
        ]
      }
    },
    "/configuration/bands/{band_id}/{phy_version}": {
      "get": {
        "operationId": "Configuration_ListBands3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListBandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "band_id",
            "description": "Optional Band ID to filter the results.\nIf unused, all supported Bands are returned.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phy_version",
            "description": "Optional PHY version to filter the results.\nIf unused, all supported versions are returned.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "PHY_UNKNOWN",
              "PHY_V1_0",
              "TS001_V1_0",
              "PHY_V1_0_1",
              "TS001_V1_0_1",
              "PHY_V1_0_2_REV_A",
              "RP001_V1_0_2",
              "PHY_V1_0_2_REV_B",
              "RP001_V1_0_2_REV_B",
              "PHY_V1_1_REV_A",
              "RP001_V1_1_REV_A",
              "PHY_V1_1_REV_B",
              "RP001_V1_1_REV_B",
              "PHY_V1_0_3_REV_A",
              "RP001_V1_0_3_REV_A",
              "RP002_V1_0_0",
              "RP002_V1_0_1",
              "RP002_V1_0_2",
              "RP002_V1_0_3",
              "RP002_V1_0_4"
            ]
          }
        ],
        "tags": [
          "Configuration"
        ]
      }
    },
    "/configuration/frequency-plans": {
      "get": {
        "operationId": "Configuration_ListFrequencyPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListFrequencyPlansResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "base_frequency",
            "description": "Optional base frequency in MHz for hardware support (433, 470, 868 or 915)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "band_id",
            "description": "Optional Band ID to filter the results.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Configuration"
        ]
      }
    },
    "/configuration/phy-versions": {
      "get": {
        "summary": "Returns a list of supported LoRaWAN PHY Versions for the given Band ID.",
        "operationId": "Configuration_GetPhyVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetPhyVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "band_id",
            "description": "Optional Band ID to filter the results.\nIf unused, all supported Bands and their versions are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Configuration"
        ]
      }
    },
    "/contact_info/validation": {
      "post": {
        "summary": "Request validation for the non-validated contact info for the given entity.",
        "operationId": "ContactInfoRegistry_RequestValidation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lorawanv3ContactInfoValidation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "EntityIdentifiers contains one of the possible entity identifiers.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3EntityIdentifiers"
            }
          }
        ],
        "tags": [
          "ContactInfoRegistry"
        ]
      },
      "patch": {
        "summary": "Validate confirms a contact info validation.",
        "operationId": "ContactInfoRegistry_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lorawanv3ContactInfoValidation"
            }
          }
        ],
        "tags": [
          "ContactInfoRegistry"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands": {
      "get": {
        "operationId": "DeviceRepository_ListBrands2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceBrandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order (for pagination)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "Search for brands matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{brand_id}": {
      "get": {
        "operationId": "DeviceRepository_GetBrand2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceBrand"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "brand_id",
            "description": "Brand identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{brand_id}/models": {
      "get": {
        "operationId": "DeviceRepository_ListModels4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "brand_id",
            "description": "List end devices from a specific brand.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order end devices",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "List end devices matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{brand_id}/models/{model_id}": {
      "get": {
        "operationId": "DeviceRepository_GetModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "brand_id",
            "description": "Brand identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model_id",
            "description": "Model identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/downlink/decoder": {
      "get": {
        "operationId": "DeviceRepository_GetDownlinkDecoder2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadDecoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/downlink/encoder": {
      "get": {
        "operationId": "DeviceRepository_GetDownlinkEncoder2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadEncoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/uplink/decoder": {
      "get": {
        "operationId": "DeviceRepository_GetUplinkDecoder2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadDecoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/template": {
      "get": {
        "operationId": "DeviceRepository_GetTemplate3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_device_profile_ids.vendor_id",
            "description": "VendorID managed by the LoRa Alliance, as defined in TR005.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_profile_ids.vendor_profile_id",
            "description": "ID of the LoRaWAN end device profile assigned by the vendor.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/models": {
      "get": {
        "operationId": "DeviceRepository_ListModels3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "brand_id",
            "description": "List end devices from a specific brand.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order end devices",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "List end devices matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/applications/{application_ids.application_id}/vendors/{end_device_profile_ids.vendor_id}/profiles/{end_device_profile_ids.vendor_profile_id}/template": {
      "get": {
        "operationId": "DeviceRepository_GetTemplate4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_profile_ids.vendor_id",
            "description": "VendorID managed by the LoRa Alliance, as defined in TR005.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_profile_ids.vendor_profile_id",
            "description": "ID of the LoRaWAN end device profile assigned by the vendor.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "version_ids.brand_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands": {
      "get": {
        "operationId": "DeviceRepository_ListBrands",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceBrandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order (for pagination)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "Search for brands matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{brand_id}": {
      "get": {
        "operationId": "DeviceRepository_GetBrand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceBrand"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "brand_id",
            "description": "Brand identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{brand_id}/models": {
      "get": {
        "operationId": "DeviceRepository_ListModels2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "brand_id",
            "description": "List end devices from a specific brand.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order end devices",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "List end devices matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{brand_id}/models/{model_id}": {
      "get": {
        "operationId": "DeviceRepository_GetModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "brand_id",
            "description": "Brand identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model_id",
            "description": "Model identifier, as defined in the Device Repository.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/downlink/decoder": {
      "get": {
        "operationId": "DeviceRepository_GetDownlinkDecoder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadDecoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/downlink/encoder": {
      "get": {
        "operationId": "DeviceRepository_GetDownlinkEncoder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadEncoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/formatters/uplink/decoder": {
      "get": {
        "operationId": "DeviceRepository_GetUplinkDecoder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MessagePayloadDecoder"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/brands/{version_ids.brand_id}/models/{version_ids.model_id}/{version_ids.firmware_version}/{version_ids.band_id}/template": {
      "get": {
        "operationId": "DeviceRepository_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "version_ids.brand_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_device_profile_ids.vendor_id",
            "description": "VendorID managed by the LoRa Alliance, as defined in TR005.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_profile_ids.vendor_profile_id",
            "description": "ID of the LoRaWAN end device profile assigned by the vendor.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/models": {
      "get": {
        "operationId": "DeviceRepository_ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListEndDeviceModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brand_id",
            "description": "List end devices from a specific brand.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order_by",
            "description": "Order end devices",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "List end devices matching a query string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask paths.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/dr/vendors/{end_device_profile_ids.vendor_id}/profiles/{end_device_profile_ids.vendor_profile_id}/template": {
      "get": {
        "operationId": "DeviceRepository_GetTemplate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_profile_ids.vendor_id",
            "description": "VendorID managed by the LoRa Alliance, as defined in TR005.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_profile_ids.vendor_profile_id",
            "description": "ID of the LoRaWAN end device profile assigned by the vendor.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.brand_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.model_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.hardware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.firmware_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_ids.band_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceRepository"
        ]
      }
    },
    "/edcs/applications/{application_ids.application_id}/authorize": {
      "post": {
        "summary": "Authorize the End Device Claiming Server to claim devices registered in the given application. The application\nidentifiers are the source application, where the devices are registered before they are claimed.\nThe API key is used to access the application, find the device, verify the claim request and delete the end device\nfrom the source application.\nDEPRECATED: Device claiming that transfers devices between applications is no longer supported and will be removed\nin a future version of The Things Stack.",
        "operationId": "EndDeviceClaimingServer_AuthorizeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndDeviceClaimingServerAuthorizeApplicationBody"
            }
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      }
    },
    "/edcs/applications/{application_id}/authorize": {
      "delete": {
        "summary": "Unauthorize the End Device Claiming Server to claim devices in the given application.\nThis reverts the authorization given with rpc AuthorizeApplication.\nDEPRECATED: Device claiming that transfers devices between applications is no longer supported and will be removed\nin a future version of The Things Stack.",
        "operationId": "EndDeviceClaimingServer_UnauthorizeApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      }
    },
    "/edcs/claim": {
      "post": {
        "summary": "Claims the end device on a Join Server by claim authentication code or QR code.",
        "operationId": "EndDeviceClaimingServer_Claim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceIdentifiers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClaimEndDeviceRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      }
    },
    "/edcs/claim/info": {
      "post": {
        "summary": "Return whether claiming is available for a given JoinEUI.",
        "operationId": "EndDeviceClaimingServer_GetInfoByJoinEUI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetInfoByJoinEUIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GetInfoByJoinEUIRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      }
    },
    "/edcs/claim/info/batch": {
      "post": {
        "summary": "Return whether claiming is supported for each Join EUI in a given list.",
        "operationId": "EndDeviceBatchClaimingServer_GetInfoByJoinEUIs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetInfoByJoinEUIsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GetInfoByJoinEUIsRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceBatchClaimingServer"
        ]
      }
    },
    "/edcs/claim/{application_ids.application_id}/devices/batch": {
      "delete": {
        "summary": "Unclaims multiple end devices on an external Join Server.\nAll devices must have the same application ID.\nCheck the response for devices that could not be unclaimed.",
        "operationId": "EndDeviceBatchClaimingServer_Unclaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3BatchUnclaimEndDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "EndDeviceBatchClaimingServer"
        ]
      }
    },
    "/edcs/claim/{application_ids.application_id}/devices/{device_id}": {
      "get": {
        "summary": "Gets the claim status of an end device.\nEUIs provided in the request are ignored and the end device is looked up by the given identifiers.",
        "operationId": "EndDeviceClaimingServer_GetClaimStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetClaimStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      },
      "delete": {
        "summary": "Unclaims the end device on a Join Server.\nEUIs provided in the request are ignored and the end device is looked up by the given identifiers.",
        "operationId": "EndDeviceClaimingServer_Unclaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "EndDeviceClaimingServer"
        ]
      }
    },
    "/edtc/convert": {
      "post": {
        "summary": "Converts the binary data to a stream of end device templates.",
        "operationId": "EndDeviceTemplateConverter_Convert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3EndDeviceTemplate"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3EndDeviceTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ConvertEndDeviceTemplateRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceTemplateConverter"
        ]
      }
    },
    "/edtc/formats": {
      "get": {
        "summary": "Returns the configured formats to convert from.",
        "operationId": "EndDeviceTemplateConverter_ListFormats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDeviceTemplateFormats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EndDeviceTemplateConverter"
        ]
      }
    },
    "/email/validation": {
      "post": {
        "summary": "Request validation for the non-validated contact info for the given entity.",
        "operationId": "EmailValidationRegistry_RequestValidation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EmailValidation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3UserIdentifiers"
            }
          }
        ],
        "tags": [
          "EmailValidationRegistry"
        ]
      },
      "patch": {
        "summary": "Validate confirms a contact info validation.",
        "operationId": "EmailValidationRegistry_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ValidateEmailRequest"
            }
          }
        ],
        "tags": [
          "EmailValidationRegistry"
        ]
      }
    },
    "/events": {
      "post": {
        "summary": "Stream live events, optionally with a tail of historical events (depending on server support and retention policy).\nEvents may arrive out-of-order.",
        "operationId": "Events_Stream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3Event"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3Event"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3StreamEventsRequest"
            }
          }
        ],
        "tags": [
          "Events"
        ]
      }
    },
    "/events/related": {
      "get": {
        "operationId": "Events_FindRelated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3FindRelatedEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "correlation_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Events"
        ]
      }
    },
    "/gateways": {
      "get": {
        "summary": "List gateways where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the gateways the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "GatewayRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateways"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted gateways.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/batch": {
      "delete": {
        "summary": "Delete a batch of gateways.\nThis operation is atomic; either all gateways are deleted or none.\nThe caller must have delete rights on all requested gateways.",
        "operationId": "GatewayBatchRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "GatewayBatchRegistry"
        ]
      }
    },
    "/gateways/rights/batch": {
      "get": {
        "summary": "Assert that the caller has the requested rights on all the requested gateways.\nThe check is successful if there are no errors.",
        "operationId": "GatewayBatchAccess_AssertRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "required.rights",
            "description": " - RIGHT_USER_INFO: The right to view user information.\n - RIGHT_USER_SETTINGS_BASIC: The right to edit basic user settings.\n - RIGHT_USER_SETTINGS_API_KEYS: The right to view and edit user API keys.\n - RIGHT_USER_DELETE: The right to delete user account.\n - RIGHT_USER_AUTHORIZED_CLIENTS: The right to view and edit authorized OAuth clients of the user.\n - RIGHT_USER_APPLICATIONS_LIST: The right to list applications the user is a collaborator of.\n - RIGHT_USER_APPLICATIONS_CREATE: The right to create an application under the user account.\n - RIGHT_USER_GATEWAYS_LIST: The right to list gateways the user is a collaborator of.\n - RIGHT_USER_GATEWAYS_CREATE: The right to create a gateway under the account of the user.\n - RIGHT_USER_CLIENTS_LIST: The right to list OAuth clients the user is a collaborator of.\n - RIGHT_USER_CLIENTS_CREATE: The right to create an OAuth client under the account of the user.\n - RIGHT_USER_ORGANIZATIONS_LIST: The right to list organizations the user is a member of.\n - RIGHT_USER_ORGANIZATIONS_CREATE: The right to create an organization under the user account.\n - RIGHT_USER_NOTIFICATIONS_READ: The right to read notifications sent to the user.\n - RIGHT_USER_ALL: The pseudo-right for all (current and future) user rights.\n - RIGHT_APPLICATION_INFO: The right to view application information.\n - RIGHT_APPLICATION_SETTINGS_BASIC: The right to edit basic application settings.\n - RIGHT_APPLICATION_SETTINGS_API_KEYS: The right to view and edit application API keys.\n - RIGHT_APPLICATION_SETTINGS_COLLABORATORS: The right to view and edit application collaborators.\n - RIGHT_APPLICATION_SETTINGS_PACKAGES: The right to view and edit application packages and associations.\n - RIGHT_APPLICATION_DELETE: The right to delete application.\n - RIGHT_APPLICATION_DEVICES_READ: The right to view devices in application.\n - RIGHT_APPLICATION_DEVICES_WRITE: The right to create devices in application.\n - RIGHT_APPLICATION_DEVICES_READ_KEYS: The right to view device keys in application.\nNote that keys may not be stored in a way that supports viewing them.\n - RIGHT_APPLICATION_DEVICES_WRITE_KEYS: The right to edit device keys in application.\n - RIGHT_APPLICATION_TRAFFIC_READ: The right to read application traffic (uplink and downlink).\n - RIGHT_APPLICATION_TRAFFIC_UP_WRITE: The right to write uplink application traffic.\n - RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE: The right to write downlink application traffic.\n - RIGHT_APPLICATION_LINK: The right to link as Application to a Network Server for traffic exchange,\ni.e. read uplink and write downlink (API keys only).\nThis right is typically only given to an Application Server.\nThis right implies RIGHT_APPLICATION_INFO, RIGHT_APPLICATION_TRAFFIC_READ,\nand RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE.\n - RIGHT_APPLICATION_ALL: The pseudo-right for all (current and future) application rights.\n - RIGHT_CLIENT_ALL: The pseudo-right for all (current and future) OAuth client rights.\n - RIGHT_CLIENT_INFO: The right to read client information.\n - RIGHT_CLIENT_SETTINGS_BASIC: The right to edit basic client settings.\n - RIGHT_CLIENT_SETTINGS_COLLABORATORS: The right to view and edit client collaborators.\n - RIGHT_CLIENT_DELETE: The right to delete a client.\n - RIGHT_GATEWAY_INFO: The right to view gateway information.\n - RIGHT_GATEWAY_SETTINGS_BASIC: The right to edit basic gateway settings.\n - RIGHT_GATEWAY_SETTINGS_API_KEYS: The right to view and edit gateway API keys.\n - RIGHT_GATEWAY_SETTINGS_COLLABORATORS: The right to view and edit gateway collaborators.\n - RIGHT_GATEWAY_DELETE: The right to delete gateway.\n - RIGHT_GATEWAY_TRAFFIC_READ: The right to read gateway traffic.\n - RIGHT_GATEWAY_TRAFFIC_DOWN_WRITE: The right to write downlink gateway traffic.\n - RIGHT_GATEWAY_LINK: The right to link as Gateway to a Gateway Server for traffic exchange,\ni.e. write uplink and read downlink (API keys only)\nThis right is typically only given to a gateway.\nThis right implies RIGHT_GATEWAY_INFO.\n - RIGHT_GATEWAY_STATUS_READ: The right to view gateway status.\n - RIGHT_GATEWAY_LOCATION_READ: The right to view view gateway location.\n - RIGHT_GATEWAY_WRITE_SECRETS: The right to store secrets associated with this gateway.\n - RIGHT_GATEWAY_READ_SECRETS: The right to retrieve secrets associated with this gateway.\n - RIGHT_GATEWAY_ALL: The pseudo-right for all (current and future) gateway rights.\n - RIGHT_ORGANIZATION_INFO: The right to view organization information.\n - RIGHT_ORGANIZATION_SETTINGS_BASIC: The right to edit basic organization settings.\n - RIGHT_ORGANIZATION_SETTINGS_API_KEYS: The right to view and edit organization API keys.\n - RIGHT_ORGANIZATION_SETTINGS_MEMBERS: The right to view and edit organization members.\n - RIGHT_ORGANIZATION_DELETE: The right to delete organization.\n - RIGHT_ORGANIZATION_APPLICATIONS_LIST: The right to list the applications the organization is a collaborator of.\n - RIGHT_ORGANIZATION_APPLICATIONS_CREATE: The right to create an application under the organization.\n - RIGHT_ORGANIZATION_GATEWAYS_LIST: The right to list the gateways the organization is a collaborator of.\n - RIGHT_ORGANIZATION_GATEWAYS_CREATE: The right to create a gateway under the organization.\n - RIGHT_ORGANIZATION_CLIENTS_LIST: The right to list the OAuth clients the organization is a collaborator of.\n - RIGHT_ORGANIZATION_CLIENTS_CREATE: The right to create an OAuth client under the organization.\n - RIGHT_ORGANIZATION_ADD_AS_COLLABORATOR: The right to add the organization as a collaborator on an existing entity.\n - RIGHT_ORGANIZATION_ALL: The pseudo-right for all (current and future) organization rights.\n - RIGHT_SEND_INVITES: The right to send invites to new users.\nNote that this is not prefixed with \"USER_\"; it is not a right on the user entity.\n - RIGHT_ALL: The pseudo-right for all (current and future) possible rights.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "right_invalid",
                "RIGHT_USER_INFO",
                "RIGHT_USER_SETTINGS_BASIC",
                "RIGHT_USER_SETTINGS_API_KEYS",
                "RIGHT_USER_DELETE",
                "RIGHT_USER_AUTHORIZED_CLIENTS",
                "RIGHT_USER_APPLICATIONS_LIST",
                "RIGHT_USER_APPLICATIONS_CREATE",
                "RIGHT_USER_GATEWAYS_LIST",
                "RIGHT_USER_GATEWAYS_CREATE",
                "RIGHT_USER_CLIENTS_LIST",
                "RIGHT_USER_CLIENTS_CREATE",
                "RIGHT_USER_ORGANIZATIONS_LIST",
                "RIGHT_USER_ORGANIZATIONS_CREATE",
                "RIGHT_USER_NOTIFICATIONS_READ",
                "RIGHT_USER_ALL",
                "RIGHT_APPLICATION_INFO",
                "RIGHT_APPLICATION_SETTINGS_BASIC",
                "RIGHT_APPLICATION_SETTINGS_API_KEYS",
                "RIGHT_APPLICATION_SETTINGS_COLLABORATORS",
                "RIGHT_APPLICATION_SETTINGS_PACKAGES",
                "RIGHT_APPLICATION_DELETE",
                "RIGHT_APPLICATION_DEVICES_READ",
                "RIGHT_APPLICATION_DEVICES_WRITE",
                "RIGHT_APPLICATION_DEVICES_READ_KEYS",
                "RIGHT_APPLICATION_DEVICES_WRITE_KEYS",
                "RIGHT_APPLICATION_TRAFFIC_READ",
                "RIGHT_APPLICATION_TRAFFIC_UP_WRITE",
                "RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE",
                "RIGHT_APPLICATION_LINK",
                "RIGHT_APPLICATION_ALL",
                "RIGHT_CLIENT_ALL",
                "RIGHT_CLIENT_INFO",
                "RIGHT_CLIENT_SETTINGS_BASIC",
                "RIGHT_CLIENT_SETTINGS_COLLABORATORS",
                "RIGHT_CLIENT_DELETE",
                "RIGHT_GATEWAY_INFO",
                "RIGHT_GATEWAY_SETTINGS_BASIC",
                "RIGHT_GATEWAY_SETTINGS_API_KEYS",
                "RIGHT_GATEWAY_SETTINGS_COLLABORATORS",
                "RIGHT_GATEWAY_DELETE",
                "RIGHT_GATEWAY_TRAFFIC_READ",
                "RIGHT_GATEWAY_TRAFFIC_DOWN_WRITE",
                "RIGHT_GATEWAY_LINK",
                "RIGHT_GATEWAY_STATUS_READ",
                "RIGHT_GATEWAY_LOCATION_READ",
                "RIGHT_GATEWAY_WRITE_SECRETS",
                "RIGHT_GATEWAY_READ_SECRETS",
                "RIGHT_GATEWAY_ALL",
                "RIGHT_ORGANIZATION_INFO",
                "RIGHT_ORGANIZATION_SETTINGS_BASIC",
                "RIGHT_ORGANIZATION_SETTINGS_API_KEYS",
                "RIGHT_ORGANIZATION_SETTINGS_MEMBERS",
                "RIGHT_ORGANIZATION_DELETE",
                "RIGHT_ORGANIZATION_APPLICATIONS_LIST",
                "RIGHT_ORGANIZATION_APPLICATIONS_CREATE",
                "RIGHT_ORGANIZATION_GATEWAYS_LIST",
                "RIGHT_ORGANIZATION_GATEWAYS_CREATE",
                "RIGHT_ORGANIZATION_CLIENTS_LIST",
                "RIGHT_ORGANIZATION_CLIENTS_CREATE",
                "RIGHT_ORGANIZATION_ADD_AS_COLLABORATOR",
                "RIGHT_ORGANIZATION_ALL",
                "RIGHT_SEND_INVITES",
                "RIGHT_ALL"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GatewayBatchAccess"
        ]
      }
    },
    "/gateways/{gateway.ids.gateway_id}": {
      "put": {
        "summary": "Update the gateway, changing the fields specified by the field mask to the provided values.",
        "operationId": "GatewayRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway.ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}": {
      "get": {
        "summary": "Get the gateway with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "GatewayRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/api-keys": {
      "get": {
        "summary": "List the API keys for this gateway.",
        "operationId": "GatewayAccess_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path.\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      },
      "post": {
        "summary": "Create an API key scoped to this gateway.",
        "operationId": "GatewayAccess_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayAccessCreateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/api-keys/{api_key.id}": {
      "put": {
        "summary": "Update the rights of an API key of the gateway.\nThis method can also be used to delete the API key, by giving it no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "GatewayAccess_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api_key.id",
            "description": "Immutable and unique public identifier for the API key.\nGenerated by the Access Server.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayAccessUpdateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/api-keys/{key_id}": {
      "get": {
        "summary": "Get a single API key of this gateway.",
        "operationId": "GatewayAccess_GetAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "description": "Unique public identifier for the API key.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      },
      "delete": {
        "summary": "Delete a single API key of this gateway.",
        "operationId": "GatewayAccess_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborator/organization/{collaborator.organization_ids.organization_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the gateway.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "GatewayAccess_GetCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborator/user/{collaborator.user_ids.user_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the gateway.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "GatewayAccess_GetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborators": {
      "get": {
        "summary": "List the collaborators on this gateway.",
        "operationId": "GatewayAccess_ListCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Collaborators"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      },
      "put": {
        "summary": "Set the rights of a collaborator (member) on the gateway.\nThis method can also be used to delete the collaborator, by giving them no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "GatewayAccess_SetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayAccessSetCollaboratorBody"
            }
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborators/organization/{collaborator_ids.organization_ids.organization_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from a gateway.",
        "operationId": "GatewayAccess_DeleteCollaborator2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborators/search": {
      "get": {
        "summary": "Search for accounts that match the conditions specified in the request.",
        "operationId": "EntityRegistrySearch_SearchAccounts4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3SearchAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "complement_collaborators",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/gateways/{gateway_ids.gateway_id}/collaborators/user/{collaborator_ids.user_ids.user_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from a gateway.",
        "operationId": "GatewayAccess_DeleteCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "collaborator_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gateways/{gateway_id}": {
      "delete": {
        "summary": "Delete the gateway. This may not release the gateway ID for reuse, but it does release the EUI.",
        "operationId": "GatewayRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/{gateway_id}/purge": {
      "delete": {
        "summary": "Purge the gateway. This will release both gateway ID and EUI for reuse.\nThe gateway owner is responsible for clearing data from any (external) integrations\nthat may store and expose data by gateway ID.",
        "operationId": "GatewayRegistry_Purge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/{gateway_id}/restore": {
      "post": {
        "summary": "Restore a recently deleted gateway. This does not restore the EUI,\nas that was released when deleting the gateway.",
        "description": "Deployment configuration may specify if, and for how long after deletion,\nentities can be restored.",
        "operationId": "GatewayRegistry_Restore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/gateways/{gateway_id}/rights": {
      "get": {
        "summary": "List the rights the caller has on this gateway.",
        "operationId": "GatewayAccess_ListRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Rights"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayAccess"
        ]
      }
    },
    "/gcls/claim": {
      "post": {
        "summary": "Claims a gateway by claim authentication code or QR code and transfers the gateway to the target user.",
        "operationId": "GatewayClaimingServer_Claim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClaimGatewayRequest"
            }
          }
        ],
        "tags": [
          "GatewayClaimingServer"
        ]
      }
    },
    "/gcls/claim/info": {
      "post": {
        "summary": "Return whether claiming is available for a given gateway EUI.",
        "operationId": "GatewayClaimingServer_GetInfoByGatewayEUI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetInfoByGatewayEUIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GetInfoByGatewayEUIRequest"
            }
          }
        ],
        "tags": [
          "GatewayClaimingServer"
        ]
      }
    },
    "/gcls/claim/{gateway_id}": {
      "delete": {
        "summary": "Unclaims the gateway.\nEUI provided in the request are ignored and the end device is looked up by the gateway ID.",
        "operationId": "GatewayClaimingServer_Unclaim",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayClaimingServer"
        ]
      }
    },
    "/gcls/gateways/{gateway_ids.gateway_id}/authorize": {
      "post": {
        "summary": "AuthorizeGateway allows a gateway to be claimed.\nDEPRECATED: Authorizing gateways for claiming is no longer supported and will be removed in a future version of The\nThings Stack.",
        "operationId": "GatewayClaimingServer_AuthorizeGateway",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayClaimingServerAuthorizeGatewayBody"
            }
          }
        ],
        "tags": [
          "GatewayClaimingServer"
        ]
      }
    },
    "/gcls/gateways/{gateway_id}/authorize": {
      "delete": {
        "summary": "UnauthorizeGateway prevents a gateway from being claimed.\nDEPRECATED: Unauthorizing (locking) gateways for claiming is no longer supported and will be removed in a future\nversion of The Things Stack.",
        "operationId": "GatewayClaimingServer_UnauthorizeGateway",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayClaimingServer"
        ]
      }
    },
    "/gcs/gateways/configuration/{gateway_ids.gateway_id}/{format}/{filename}": {
      "get": {
        "operationId": "GatewayConfigurationService_GetGatewayConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetGatewayConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/configuration/{gateway_ids.gateway_id}/{format}/{type}/{filename}": {
      "get": {
        "operationId": "GatewayConfigurationService_GetGatewayConfiguration2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetGatewayConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/managed/{gateway.ids.gateway_id}": {
      "put": {
        "operationId": "ManagedGatewayConfigurationService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway.ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayConfigurationServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/managed/{gateway_ids.gateway_id}": {
      "get": {
        "operationId": "ManagedGatewayConfigurationService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/managed/{gateway_id}/events": {
      "post": {
        "operationId": "ManagedGatewayConfigurationService_StreamEvents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3ManagedGatewayEventData"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3ManagedGatewayEventData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedGatewayConfigurationServiceStreamEventsBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/managed/{gateway_id}/wifi/scan": {
      "post": {
        "operationId": "ManagedGatewayConfigurationService_ScanWiFiAccessPoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiAccessPoints"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedGatewayConfigurationServiceScanWiFiAccessPointsBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/organizations/{collaborator.organization_ids.organization_id}": {
      "get": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfiles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      },
      "post": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfileConfigurationServiceCreateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/organizations/{collaborator.organization_ids.organization_id}/{profile.profile_id}": {
      "put": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile.profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfileConfigurationServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/organizations/{collaborator.organization_ids.organization_id}/{profile_id}": {
      "get": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      },
      "delete": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/users/{collaborator.user_ids.user_id}": {
      "get": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfiles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      },
      "post": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfileConfigurationServiceCreateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/users/{collaborator.user_ids.user_id}/{profile.profile_id}": {
      "put": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile.profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfileConfigurationServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/ethernet/users/{collaborator.user_ids.user_id}/{profile_id}": {
      "get": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Get2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      },
      "delete": {
        "operationId": "ManagedGatewayEthernetProfileConfigurationService_Delete2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayEthernetProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/organizations/{collaborator.organization_ids.organization_id}": {
      "get": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfiles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      },
      "post": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfileConfigurationServiceCreateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/organizations/{collaborator.organization_ids.organization_id}/{profile.profile_id}": {
      "put": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile.profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfileConfigurationServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/organizations/{collaborator.organization_ids.organization_id}/{profile_id}": {
      "get": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      },
      "delete": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/users/{collaborator.user_ids.user_id}": {
      "get": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfiles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      },
      "post": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfileConfigurationServiceCreateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/users/{collaborator.user_ids.user_id}/{profile.profile_id}": {
      "put": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile.profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfileConfigurationServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gcs/gateways/profiles/wifi/users/{collaborator.user_ids.user_id}/{profile_id}": {
      "get": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Get2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      },
      "delete": {
        "operationId": "ManagedGatewayWiFiProfileConfigurationService_Delete2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagedGatewayWiFiProfileConfigurationService"
        ]
      }
    },
    "/gs/gateways/connection/stats": {
      "post": {
        "summary": "Get statistics about gateway connections to the Gateway Server of a batch of gateways.\n- Statistics are not persisted between reconnects.\n- Gateways that are not connected or are part of a different cluster are ignored.\n- The client should ensure that the requested gateways are in the requested cluster.\n- The client should have the right to get the gateway connection stats on all requested gateways.",
        "operationId": "Gs_BatchGetGatewayConnectionStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3BatchGetGatewayConnectionStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3BatchGetGatewayConnectionStatsRequest"
            }
          }
        ],
        "tags": [
          "Gs"
        ]
      }
    },
    "/gs/gateways/{gateway_id}/connection/stats": {
      "get": {
        "summary": "Get statistics about the current gateway connection to the Gateway Server.\nThis is not persisted between reconnects.",
        "operationId": "Gs_GetGatewayConnectionStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GatewayConnectionStats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Gs"
        ]
      }
    },
    "/gs/gateways/{gateway_id}/mqtt-connection-info": {
      "get": {
        "summary": "Get connection information to connect an MQTT gateway.",
        "operationId": "GtwGs_GetMQTTConnectionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MQTTConnectionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GtwGs"
        ]
      }
    },
    "/gs/gateways/{gateway_id}/mqttv2-connection-info": {
      "get": {
        "summary": "Get legacy connection information to connect a The Things Network Stack V2 MQTT gateway.",
        "operationId": "GtwGs_GetMQTTV2ConnectionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MQTTConnectionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "GtwGs"
        ]
      }
    },
    "/invitations": {
      "get": {
        "summary": "List the invitations the caller has sent.",
        "operationId": "UserInvitationRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Invitations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserInvitationRegistry"
        ]
      },
      "delete": {
        "summary": "Delete (revoke) a user invitation.",
        "operationId": "UserInvitationRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserInvitationRegistry"
        ]
      },
      "post": {
        "summary": "Invite a user to join the network.",
        "operationId": "UserInvitationRegistry_Send",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lorawanv3Invitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3SendInvitationRequest"
            }
          }
        ],
        "tags": [
          "UserInvitationRegistry"
        ]
      }
    },
    "/is/configuration": {
      "get": {
        "summary": "Get the configuration of the Identity Server. The response is typically used\nto enable or disable features in a user interface.",
        "operationId": "Is_GetConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetIsConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Is"
        ]
      }
    },
    "/js/applications/{application_ids.application_id}/devices/batch": {
      "delete": {
        "summary": "Delete a list of devices within the same application.\nThis operation is atomic; either all devices are deleted or none.\nDevices not found are skipped and no error is returned.",
        "operationId": "JsEndDeviceBatchRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "JsEndDeviceBatchRegistry"
        ]
      }
    },
    "/js/applications/{application_ids.application_id}/devices/{device_id}": {
      "delete": {
        "summary": "Delete deletes the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "JsEndDeviceRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "JsEndDeviceRegistry"
        ]
      }
    },
    "/js/applications/{application_ids.application_id}/provision-devices": {
      "put": {
        "summary": "This rpc is deprecated; use EndDeviceTemplateConverter service instead.\nTODO: Remove (https://github.com/TheThingsNetwork/lorawan-stack/issues/999)",
        "operationId": "JsEndDeviceRegistry_Provision",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v3EndDevice"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsEndDeviceRegistryProvisionBody"
            }
          }
        ],
        "tags": [
          "JsEndDeviceRegistry"
        ]
      }
    },
    "/js/applications/{application_ids.application_id}/settings": {
      "get": {
        "summary": "Get returns application activation settings.",
        "operationId": "ApplicationActivationSettingRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationActivationSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationActivationSettingRegistry"
        ]
      },
      "delete": {
        "summary": "Delete deletes application activation settings.",
        "operationId": "ApplicationActivationSettingRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationActivationSettingRegistry"
        ]
      },
      "post": {
        "summary": "Set creates or updates application activation settings.",
        "operationId": "ApplicationActivationSettingRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ApplicationActivationSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationActivationSettingRegistrySetBody"
            }
          }
        ],
        "tags": [
          "ApplicationActivationSettingRegistry"
        ]
      }
    },
    "/js/applications/{end_device.ids.application_ids.application_id}/devices": {
      "post": {
        "summary": "Set creates or updates the device.",
        "operationId": "JsEndDeviceRegistry_Set2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3JsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "JsEndDeviceRegistry"
        ]
      }
    },
    "/js/applications/{end_device.ids.application_ids.application_id}/devices/{end_device.ids.device_id}": {
      "put": {
        "summary": "Set creates or updates the device.",
        "operationId": "JsEndDeviceRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device.ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3JsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "JsEndDeviceRegistry"
        ]
      }
    },
    "/js/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}": {
      "get": {
        "summary": "Get returns the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "JsEndDeviceRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "JsEndDeviceRegistry"
        ]
      }
    },
    "/js/default_join_eui": {
      "get": {
        "summary": "Request the default JoinEUI that is configured for this Join Server.",
        "operationId": "Js_GetDefaultJoinEUI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetDefaultJoinEUIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Js"
        ]
      }
    },
    "/js/join_eui_prefixes": {
      "get": {
        "summary": "Request the JoinEUI prefixes that are configured for this Join Server.",
        "operationId": "Js_GetJoinEUIPrefixes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3JoinEUIPrefixes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Js"
        ]
      }
    },
    "/ns/applications/{application_ids.application_id}/devices/batch": {
      "delete": {
        "summary": "Delete a list of devices within the same application.\nThis operation is atomic; either all devices are deleted or none.\nDevices not found are skipped and no error is returned.",
        "operationId": "NsEndDeviceBatchRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "NsEndDeviceBatchRegistry"
        ]
      }
    },
    "/ns/applications/{application_ids.application_id}/devices/{device_id}": {
      "delete": {
        "summary": "Delete deletes the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "NsEndDeviceRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "NsEndDeviceRegistry"
        ]
      }
    },
    "/ns/applications/{end_device.ids.application_ids.application_id}/devices": {
      "post": {
        "summary": "Set creates or updates the device.",
        "operationId": "NsEndDeviceRegistry_Set2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3NsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "NsEndDeviceRegistry"
        ]
      }
    },
    "/ns/applications/{end_device.ids.application_ids.application_id}/devices/{end_device.ids.device_id}": {
      "put": {
        "summary": "Set creates or updates the device.",
        "operationId": "NsEndDeviceRegistry_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device.ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device.ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3NsEndDeviceRegistrySetBody"
            }
          }
        ],
        "tags": [
          "NsEndDeviceRegistry"
        ]
      }
    },
    "/ns/applications/{end_device_ids.application_ids.application_id}/devices/{end_device_ids.device_id}": {
      "get": {
        "summary": "Get returns the device that matches the given identifiers.\nIf there are multiple matches, an error will be returned.",
        "operationId": "NsEndDeviceRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NsEndDeviceRegistry"
        ]
      },
      "patch": {
        "summary": "ResetFactoryDefaults resets device state to factory defaults.",
        "operationId": "NsEndDeviceRegistry_ResetFactoryDefaults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsEndDeviceRegistryResetFactoryDefaultsBody"
            }
          }
        ],
        "tags": [
          "NsEndDeviceRegistry"
        ]
      }
    },
    "/ns/applications/{end_device_ids.application_ids.application_id}/relays": {
      "post": {
        "summary": "Create a relay.",
        "operationId": "NsRelayConfigurationService_CreateRelay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3CreateRelayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsRelayConfigurationServiceCreateRelayBody"
            }
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      }
    },
    "/ns/applications/{end_device_ids.application_ids.application_id}/relays/{end_device_ids.device_id}": {
      "get": {
        "summary": "Get a relay.",
        "operationId": "NsRelayConfigurationService_GetRelay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetRelayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask of the fields to return.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      },
      "delete": {
        "summary": "Delete a relay.",
        "operationId": "NsRelayConfigurationService_DeleteRelay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DeleteRelayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      },
      "put": {
        "summary": "Update a relay.",
        "operationId": "NsRelayConfigurationService_UpdateRelay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3UpdateRelayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsRelayConfigurationServiceUpdateRelayBody"
            }
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      }
    },
    "/ns/applications/{end_device_ids.application_ids.application_id}/relays/{end_device_ids.device_id}/uplink-forwarding-rules": {
      "get": {
        "summary": "List uplink forwarding rules.",
        "operationId": "NsRelayConfigurationService_ListRelayUplinkForwardingRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListRelayUplinkForwardingRulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask of the fields to return.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      },
      "post": {
        "summary": "Create an uplink forwarding rule.",
        "operationId": "NsRelayConfigurationService_CreateRelayUplinkForwardingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3CreateRelayUplinkForwardingRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsRelayConfigurationServiceCreateRelayUplinkForwardingRuleBody"
            }
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      }
    },
    "/ns/applications/{end_device_ids.application_ids.application_id}/relays/{end_device_ids.device_id}/uplink-forwarding-rules/{index}": {
      "get": {
        "summary": "Get an uplink forwarding rule.",
        "operationId": "NsRelayConfigurationService_GetRelayUplinkForwardingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetRelayUplinkForwardingRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "description": "Index of the uplink forwarding rule.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "field_mask",
            "description": "Field mask of the fields to return.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      },
      "delete": {
        "summary": "Delete an uplink forwarding rule.",
        "operationId": "NsRelayConfigurationService_DeleteRelayUplinkForwardingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3DeleteRelayUplinkForwardingRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "description": "Index of the uplink forwarding rule.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "end_device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "end_device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      },
      "put": {
        "summary": "Update an uplink forwarding rule.",
        "operationId": "NsRelayConfigurationService_UpdateRelayUplinkForwardingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3UpdateRelayUplinkForwardingRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "end_device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "end_device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "description": "Index of the uplink forwarding rule.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsRelayConfigurationServiceUpdateRelayUplinkForwardingRuleBody"
            }
          }
        ],
        "tags": [
          "NsRelayConfigurationService"
        ]
      }
    },
    "/ns/default_mac_settings/{frequency_plan_id}/{lorawan_phy_version}": {
      "get": {
        "summary": "GetDefaultMACSettings retrieves the default MAC settings for a frequency plan.",
        "operationId": "Ns_GetDefaultMACSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3MACSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "frequency_plan_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lorawan_phy_version",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "PHY_UNKNOWN",
              "PHY_V1_0",
              "TS001_V1_0",
              "PHY_V1_0_1",
              "TS001_V1_0_1",
              "PHY_V1_0_2_REV_A",
              "RP001_V1_0_2",
              "PHY_V1_0_2_REV_B",
              "RP001_V1_0_2_REV_B",
              "PHY_V1_1_REV_A",
              "RP001_V1_1_REV_A",
              "PHY_V1_1_REV_B",
              "RP001_V1_1_REV_B",
              "PHY_V1_0_3_REV_A",
              "RP001_V1_0_3_REV_A",
              "RP002_V1_0_0",
              "RP002_V1_0_1",
              "RP002_V1_0_2",
              "RP002_V1_0_3",
              "RP002_V1_0_4"
            ]
          }
        ],
        "tags": [
          "Ns"
        ]
      }
    },
    "/ns/dev_addr": {
      "get": {
        "summary": "GenerateDevAddr requests a device address assignment from the Network Server.",
        "operationId": "Ns_GenerateDevAddr",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GenerateDevAddrResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Ns"
        ]
      }
    },
    "/ns/dev_addr_prefixes": {
      "get": {
        "operationId": "Ns_GetDeviceAddressPrefixes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetDeviceAdressPrefixesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Ns"
        ]
      }
    },
    "/ns/net_id": {
      "get": {
        "operationId": "Ns_GetNetID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetNetIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Ns"
        ]
      }
    },
    "/organizations": {
      "get": {
        "summary": "List organizations where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the organizations the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "OrganizationRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organizations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the organization fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted organizations.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{collaborator.organization_ids.organization_id}/applications": {
      "get": {
        "summary": "List applications where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the applications the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ApplicationRegistry_List3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Applications"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the application fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted applications.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      },
      "post": {
        "summary": "Create a new application. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "ApplicationRegistry_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/organizations/{collaborator.organization_ids.organization_id}/clients": {
      "get": {
        "summary": "List OAuth clients where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the OAuth clients the caller\nhas access to.\nSimilar to Get, this selects the fields specified in the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ClientRegistry_List3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Clients"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the client fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted clients.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      },
      "post": {
        "summary": "Create a new OAuth client. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "ClientRegistry_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Client"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClientRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/organizations/{collaborator.organization_ids.organization_id}/gateways": {
      "get": {
        "summary": "List gateways where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the gateways the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "GatewayRegistry_List3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateways"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted gateways.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      },
      "post": {
        "summary": "Create a new gateway. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "GatewayRegistry_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/organizations/{organization.ids.organization_id}": {
      "put": {
        "summary": "Update the organization, changing the fields specified by the field mask to the provided values.",
        "operationId": "OrganizationRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization.ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3OrganizationRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}": {
      "get": {
        "summary": "Get the organization with the given identifiers, selecting the fields specified\nin the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "OrganizationRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the organization fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/api-keys": {
      "get": {
        "summary": "List the API keys for this organization.",
        "operationId": "OrganizationAccess_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path.\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      },
      "post": {
        "summary": "Create an API key scoped to this organization.\nOrganization API keys can give access to the organization itself, as well as\nany application, gateway and OAuth client this organization is a collaborator of.",
        "operationId": "OrganizationAccess_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3OrganizationAccessCreateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/api-keys/{api_key.id}": {
      "put": {
        "summary": "Update the rights of an API key of the organization.\nThis method can also be used to delete the API key, by giving it no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "OrganizationAccess_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api_key.id",
            "description": "Immutable and unique public identifier for the API key.\nGenerated by the Access Server.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3OrganizationAccessUpdateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/api-keys/{key_id}": {
      "get": {
        "summary": "Get a single API key of this organization.",
        "operationId": "OrganizationAccess_GetAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "description": "Unique public identifier for the API key.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      },
      "delete": {
        "summary": "Delete a single API key of this organization.",
        "operationId": "OrganizationAccess_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/collaborator/user/{collaborator.user_ids.user_id}": {
      "get": {
        "summary": "Get the rights of a collaborator (member) of the organization.\nPseudo-rights in the response (such as the \"_ALL\" right) are not expanded.",
        "operationId": "OrganizationAccess_GetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/collaborators": {
      "get": {
        "summary": "List the collaborators on this organization.",
        "operationId": "OrganizationAccess_ListCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Collaborators"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      },
      "put": {
        "summary": "Set the rights of a collaborator (member) on the organization.\nOrganization collaborators can get access to the organization itself, as well as\nany application, gateway and OAuth client this organization is a collaborator of.\nThis method can also be used to delete the collaborator, by giving them no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "OrganizationAccess_SetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3OrganizationAccessSetCollaboratorBody"
            }
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/collaborators/search": {
      "get": {
        "summary": "Search for accounts that match the conditions specified in the request.",
        "operationId": "EntityRegistrySearch_SearchAccounts5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3SearchAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "complement_collaborators",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/organizations/{organization_ids.organization_id}/collaborators/user/{collaborator_ids.user_ids.user_id}": {
      "delete": {
        "summary": "DeleteCollaborator removes a collaborator from an organization.",
        "operationId": "OrganizationAccess_DeleteCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/organizations/{organization_id}": {
      "delete": {
        "summary": "Delete the organization. This may not release the organization ID for reuse.",
        "operationId": "OrganizationRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{organization_id}/purge": {
      "delete": {
        "summary": "Purge the organization. This will release the organization ID for reuse.\nThe user is responsible for clearing data from any (external) integrations\nthat may store and expose data by user or organization ID.",
        "operationId": "OrganizationRegistry_Purge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{organization_id}/restore": {
      "post": {
        "summary": "Restore a recently deleted organization.",
        "description": "Deployment configuration may specify if, and for how long after deletion,\nentities can be restored.",
        "operationId": "OrganizationRegistry_Restore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/organizations/{organization_id}/rights": {
      "get": {
        "summary": "List the rights the caller has on this organization.",
        "operationId": "OrganizationAccess_ListRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Rights"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationAccess"
        ]
      }
    },
    "/pba/forwarders/policies": {
      "get": {
        "summary": "List the routing policies that Forwarders configured with Packet Broker Agent as Home Network.\nListing routing policies requires administrative access.",
        "operationId": "Pba_ListForwarderRoutingPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRoutingPolicies"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "home_network_id.net_id",
            "description": "LoRa Alliance NetID.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "home_network_id.tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks": {
      "get": {
        "summary": "List the listed home networks for which routing policies can be configured.\nListing home networks requires administrative access.",
        "operationId": "Pba_ListHomeNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerNetworks"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenant_id_contains",
            "description": "Filter by tenant ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Filter by name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/gateway-visibilities/default": {
      "get": {
        "summary": "Get the default gateway visibility.\nGetting gateway visibilities requires administrative access.",
        "operationId": "Pba_GetHomeNetworkDefaultGatewayVisibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerDefaultGatewayVisibility"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      },
      "delete": {
        "summary": "Deletes the default gateway visibility.\nDeleting gateway visibilities requires administrative access.",
        "operationId": "Pba_DeleteHomeNetworkDefaultGatewayVisibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      },
      "post": {
        "summary": "Set the default gateway visibility.\nSetting gateway visibilities requires administrative access.",
        "operationId": "Pba_SetHomeNetworkDefaultGatewayVisibility2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3SetPacketBrokerDefaultGatewayVisibilityRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "put": {
        "summary": "Set the default gateway visibility.\nSetting gateway visibilities requires administrative access.",
        "operationId": "Pba_SetHomeNetworkDefaultGatewayVisibility",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3SetPacketBrokerDefaultGatewayVisibilityRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies": {
      "get": {
        "summary": "List the routing policies that Packet Broker Agent as Forwarder configured with Home Networks.\nListing routing policies requires administrative access.",
        "operationId": "Pba_ListHomeNetworkRoutingPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRoutingPolicies"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies/default": {
      "get": {
        "summary": "Get the default routing policy.\nGetting routing policies requires administrative access.",
        "operationId": "Pba_GetHomeNetworkDefaultRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerDefaultRoutingPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      },
      "delete": {
        "summary": "Deletes the default routing policy.\nDeleting routing policies requires administrative access.",
        "operationId": "Pba_DeleteHomeNetworkDefaultRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      },
      "post": {
        "summary": "Set the default routing policy.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkDefaultRoutingPolicy2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3SetPacketBrokerDefaultRoutingPolicyRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "put": {
        "summary": "Set the default routing policy.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkDefaultRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3SetPacketBrokerDefaultRoutingPolicyRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies/{home_network_id.net_id}": {
      "post": {
        "summary": "Set the routing policy for the given Home Network.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkRoutingPolicy2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "home_network_id.net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PbaSetHomeNetworkRoutingPolicyBody"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "put": {
        "summary": "Set the routing policy for the given Home Network.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "home_network_id.net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PbaSetHomeNetworkRoutingPolicyBody"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies/{home_network_id.net_id}/{home_network_id.tenant_id}": {
      "post": {
        "summary": "Set the routing policy for the given Home Network.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkRoutingPolicy4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "home_network_id.net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "home_network_id.tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PbaSetHomeNetworkRoutingPolicyBody"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "put": {
        "summary": "Set the routing policy for the given Home Network.\nSetting routing policies requires administrative access.",
        "operationId": "Pba_SetHomeNetworkRoutingPolicy3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "home_network_id.net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "home_network_id.tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PbaSetHomeNetworkRoutingPolicyBody"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies/{net_id}": {
      "get": {
        "summary": "Get the routing policy for the given Home Network.\nGetting routing policies requires administrative access.",
        "operationId": "Pba_GetHomeNetworkRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRoutingPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "delete": {
        "summary": "Delete the routing policy for the given Home Network.\nDeleting routing policies requires administrative access.",
        "operationId": "Pba_DeleteHomeNetworkRoutingPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/home-networks/policies/{net_id}/{tenant_id}": {
      "get": {
        "summary": "Get the routing policy for the given Home Network.\nGetting routing policies requires administrative access.",
        "operationId": "Pba_GetHomeNetworkRoutingPolicy2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRoutingPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "delete": {
        "summary": "Delete the routing policy for the given Home Network.\nDeleting routing policies requires administrative access.",
        "operationId": "Pba_DeleteHomeNetworkRoutingPolicy2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "net_id",
            "description": "LoRa Alliance NetID.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tenant_id",
            "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/info": {
      "get": {
        "summary": "Get information about the Packet Broker registration.\nViewing Packet Packet information requires administrative access.",
        "operationId": "Pba_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/networks": {
      "get": {
        "summary": "List all listed networks.\nListing networks requires administrative access.",
        "operationId": "Pba_ListNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerNetworks"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "with_routing_policy",
            "description": "If true, list only the Forwarders and Home Networks with whom a routing policy has been defined in either direction.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tenant_id_contains",
            "description": "Filter by tenant ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Filter by name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/pba/registration": {
      "delete": {
        "summary": "Deregister from Packet Broker.\nPacket Broker deregistration requires administrative access.\nPacket Broker deregistration is only supported for tenants and requires Packet Broker Agent to be configured with\nNetID level authentication. Use rpc GetInfo and check register_enabled to check whether this rpc is enabled.",
        "operationId": "Pba_Deregister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Pba"
        ]
      },
      "post": {
        "summary": "Register with Packet Broker. If no registration exists, it will be created. Any existing registration will be updated.\nRegistration settings not in the request message are taken from Packet Broker Agent configuration and caller context.\nPacket Broker registration requires administrative access.\nPacket Broker registration is only supported for tenants and requires Packet Broker Agent to be configured with\nNetID level authentication. Use rpc GetInfo and check register_enabled to check whether this rpc is enabled.",
        "operationId": "Pba_Register2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRegisterRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      },
      "put": {
        "summary": "Register with Packet Broker. If no registration exists, it will be created. Any existing registration will be updated.\nRegistration settings not in the request message are taken from Packet Broker Agent configuration and caller context.\nPacket Broker registration requires administrative access.\nPacket Broker registration is only supported for tenants and requires Packet Broker Agent to be configured with\nNetID level authentication. Use rpc GetInfo and check register_enabled to check whether this rpc is enabled.",
        "operationId": "Pba_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3PacketBrokerRegisterRequest"
            }
          }
        ],
        "tags": [
          "Pba"
        ]
      }
    },
    "/qr-codes/end-devices": {
      "post": {
        "summary": "Generates a QR code.",
        "operationId": "EndDeviceQRCodeGenerator_Generate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3GenerateQRCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GenerateEndDeviceQRCodeRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceQRCodeGenerator"
        ]
      }
    },
    "/qr-codes/end-devices/formats": {
      "get": {
        "summary": "Returns the supported formats.",
        "operationId": "EndDeviceQRCodeGenerator_ListFormats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3QRCodeFormats"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "EndDeviceQRCodeGenerator"
        ]
      }
    },
    "/qr-codes/end-devices/formats/{format_id}": {
      "get": {
        "summary": "Return the QR code format.",
        "operationId": "EndDeviceQRCodeGenerator_GetFormat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3QRCodeFormat"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "format_id",
            "description": "QR code format identifier. Enumerate available formats with rpc ListFormats in the EndDeviceQRCodeGenerator service.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EndDeviceQRCodeGenerator"
        ]
      }
    },
    "/qr-codes/end-devices/parse": {
      "post": {
        "summary": "Parse QR Codes of known formats and return the information contained within.",
        "operationId": "EndDeviceQRCodeGenerator_Parse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ParseEndDeviceQRCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ParseEndDeviceQRCodeRequest"
            }
          }
        ],
        "tags": [
          "EndDeviceQRCodeGenerator"
        ]
      }
    },
    "/qr-codes/end-devices/{format_id}/parse": {
      "post": {
        "summary": "Parse QR Codes of known formats and return the information contained within.",
        "operationId": "EndDeviceQRCodeGenerator_Parse2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ParseEndDeviceQRCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "format_id",
            "description": "QR code format identifier.\nEnumerate available formats with the rpc `ListFormats`.\nIf this field is not specified, the server will attempt to parse the data with each known format.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndDeviceQRCodeGeneratorParseBody"
            }
          }
        ],
        "tags": [
          "EndDeviceQRCodeGenerator"
        ]
      }
    },
    "/search/accounts": {
      "get": {
        "summary": "Search for accounts that match the conditions specified in the request.",
        "operationId": "EntityRegistrySearch_SearchAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3SearchAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_users",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "complement_collaborators",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/search/applications": {
      "get": {
        "summary": "Search for applications that match the conditions specified in the request.\nNon-admin users will only match applications that they have rights on.",
        "operationId": "EntityRegistrySearch_SearchApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Applications"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Find applications where the ID, name or description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find applications where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find applications where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find applications where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted applications.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/search/applications/{application_ids.application_id}/devices": {
      "get": {
        "summary": "Search for end devices in the given application that match the conditions specified in the request.",
        "operationId": "EndDeviceRegistrySearch_SearchEndDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3EndDevices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Find end devices where the ID, name, description or EUI contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find end devices where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find end devices where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find end devices where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dev_eui_contains",
            "description": "Find end devices where the (hexadecimal) DevEUI contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "join_eui_contains",
            "description": "Find end devices where the (hexadecimal) JoinEUI contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dev_addr_contains",
            "description": "Find end devices where the (hexadecimal) DevAddr contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "EndDeviceRegistrySearch"
        ]
      }
    },
    "/search/clients": {
      "get": {
        "summary": "Search for OAuth clients that match the conditions specified in the request.\nNon-admin users will only match OAuth clients that they have rights on.",
        "operationId": "EntityRegistrySearch_SearchClients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Clients"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Find OAuth clients where the ID, name or description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find OAuth clients where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find OAuth clients where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find OAuth clients where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "Find OAuth clients where the state is any of these states.\n\n - STATE_REQUESTED: Denotes that the entity has been requested and is pending review by an admin.\n - STATE_APPROVED: Denotes that the entity has been reviewed and approved by an admin.\n - STATE_REJECTED: Denotes that the entity has been reviewed and rejected by an admin.\n - STATE_FLAGGED: Denotes that the entity has been flagged and is pending review by an admin.\n - STATE_SUSPENDED: Denotes that the entity has been reviewed and suspended by an admin.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_REQUESTED",
                "STATE_APPROVED",
                "STATE_REJECTED",
                "STATE_FLAGGED",
                "STATE_SUSPENDED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted OAuth clients.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/search/gateways": {
      "get": {
        "summary": "Search for gateways that match the conditions specified in the request.\nNon-admin users will only match gateways that they have rights on.",
        "operationId": "EntityRegistrySearch_SearchGateways",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateways"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Find gateways where the ID, name, description or EUI contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find gateways where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find gateways where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find gateways where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eui_contains",
            "description": "Find gateways where the (hexadecimal) EUI contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted gateways.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/search/organizations": {
      "get": {
        "summary": "Search for organizations that match the conditions specified in the request.\nNon-admin users will only match organizations that they have rights on.",
        "operationId": "EntityRegistrySearch_SearchOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organizations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Find organizations where the ID, name or description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find organizations where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find organizations where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find organizations where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted organizations.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/search/users": {
      "get": {
        "summary": "Search for users that match the conditions specified in the request.\nThis is only available to admin users.",
        "operationId": "EntityRegistrySearch_SearchUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Users"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "Find users where the ID, name or description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_contains",
            "description": "Find users where the ID contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name_contains",
            "description": "Find users where the name contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description_contains",
            "description": "Find users where the description contains this substring.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes_contain[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "Find users where the state is any of these states.\n\n - STATE_REQUESTED: Denotes that the entity has been requested and is pending review by an admin.\n - STATE_APPROVED: Denotes that the entity has been reviewed and approved by an admin.\n - STATE_REJECTED: Denotes that the entity has been reviewed and rejected by an admin.\n - STATE_FLAGGED: Denotes that the entity has been flagged and is pending review by an admin.\n - STATE_SUSPENDED: Denotes that the entity has been reviewed and suspended by an admin.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATE_REQUESTED",
                "STATE_APPROVED",
                "STATE_REJECTED",
                "STATE_FLAGGED",
                "STATE_SUSPENDED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "field_mask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted users.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "EntityRegistrySearch"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "List users of the network. This method is typically restricted to admins only.",
        "operationId": "UserRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Users"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "field_mask",
            "description": "The names of the user fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted users.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      },
      "post": {
        "summary": "Register a new user. This method may be restricted by network settings.",
        "operationId": "UserRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{collaborator.user_ids.user_id}/applications": {
      "get": {
        "summary": "List applications where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the applications the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ApplicationRegistry_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Applications"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the application fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted applications.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      },
      "post": {
        "summary": "Create a new application. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "ApplicationRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ApplicationRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "ApplicationRegistry"
        ]
      }
    },
    "/users/{collaborator.user_ids.user_id}/clients": {
      "get": {
        "summary": "List OAuth clients where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the OAuth clients the caller\nhas access to.\nSimilar to Get, this selects the fields specified in the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "ClientRegistry_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Clients"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the client fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted clients.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      },
      "post": {
        "summary": "Create a new OAuth client. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "ClientRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Client"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3ClientRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "ClientRegistry"
        ]
      }
    },
    "/users/{collaborator.user_ids.user_id}/gateways": {
      "get": {
        "summary": "List gateways where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the gateways the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "GatewayRegistry_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateways"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the gateway fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted gateways.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      },
      "post": {
        "summary": "Create a new gateway. This also sets the given organization or user as\nfirst collaborator with all possible rights.",
        "operationId": "GatewayRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Gateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3GatewayRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "GatewayRegistry"
        ]
      }
    },
    "/users/{collaborator.user_ids.user_id}/organizations": {
      "get": {
        "summary": "List organizations where the given user or organization is a direct collaborator.\nIf no user or organization is given, this returns the organizations the caller\nhas access to.\nSimilar to Get, this selects the fields given by the field mask.\nMore or less fields may be returned, depending on the rights of the caller.",
        "operationId": "OrganizationRegistry_List2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organizations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collaborator.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "collaborator.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the organization fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted organizations.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      },
      "post": {
        "summary": "Create a new organization. This also sets the given user as\nfirst collaborator with all possible rights.",
        "operationId": "OrganizationRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Organization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collaborator.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3OrganizationRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "OrganizationRegistry"
        ]
      }
    },
    "/users/{receiver_ids.user_id}/notifications": {
      "get": {
        "summary": "List the notifications for a user or an organization.\nWhen called with user credentials and empty receiver_ids, this will list\nnotifications for the current user and its organizations.",
        "operationId": "NotificationService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ListNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "receiver_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "receiver_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "description": "Select notifications with these statuses.\nAn empty list is interpreted as \"all\".",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NOTIFICATION_STATUS_UNSEEN",
                "NOTIFICATION_STATUS_SEEN",
                "NOTIFICATION_STATUS_ARCHIVED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "NotificationService"
        ]
      },
      "patch": {
        "summary": "Batch-update multiple notifications to the same status.",
        "operationId": "NotificationService_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "receiver_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationServiceUpdateStatusBody"
            }
          }
        ],
        "tags": [
          "NotificationService"
        ]
      }
    },
    "/users/{user.ids.user_id}": {
      "put": {
        "summary": "Update the user, changing the fields specified by the field mask to the provided values.\nThis method can not be used to change the password, see the UpdatePassword method for that.",
        "operationId": "UserRegistry_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3UserRegistryUpdateBody"
            }
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}": {
      "get": {
        "summary": "Get the user with the given identifiers, selecting the fields given by the\nfield mask. The method may return more or less fields, depending on the rights\nof the caller.",
        "operationId": "UserRegistry_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field_mask",
            "description": "The names of the user fields that should be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/api-keys": {
      "get": {
        "summary": "List the API keys for this user.",
        "operationId": "UserAccess_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path.\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserAccess"
        ]
      },
      "post": {
        "summary": "Create an API key scoped to this user.\nUser API keys can give access to the user itself, as well as\nany organization, application, gateway and OAuth client this user is a collaborator of.",
        "operationId": "UserAccess_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3UserAccessCreateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "UserAccess"
        ]
      }
    },
    "/users/{user_ids.user_id}/api-keys/{api_key.id}": {
      "put": {
        "summary": "Update the rights of an API key of the user.\nThis method can also be used to delete the API key, by giving it no rights.\nThe caller is required to have all assigned or/and removed rights.",
        "operationId": "UserAccess_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api_key.id",
            "description": "Immutable and unique public identifier for the API key.\nGenerated by the Access Server.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3UserAccessUpdateAPIKeyBody"
            }
          }
        ],
        "tags": [
          "UserAccess"
        ]
      }
    },
    "/users/{user_ids.user_id}/api-keys/{key_id}": {
      "get": {
        "summary": "Get a single API key of this user.",
        "operationId": "UserAccess_GetAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "description": "Unique public identifier for the API key.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserAccess"
        ]
      },
      "delete": {
        "summary": "Delete a single API key of this user.",
        "operationId": "UserAccess_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserAccess"
        ]
      }
    },
    "/users/{user_ids.user_id}/authorizations": {
      "get": {
        "summary": "List OAuth clients that are authorized by the user.",
        "operationId": "OAuthAuthorizationRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3OAuthClientAuthorizations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "OAuthAuthorizationRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/authorizations/{client_ids.client_id}": {
      "delete": {
        "summary": "Delete (de-authorize) an OAuth client for the user.",
        "operationId": "OAuthAuthorizationRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuthAuthorizationRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/authorizations/{client_ids.client_id}/tokens": {
      "get": {
        "summary": "List OAuth access tokens issued to the OAuth client on behalf of the user.",
        "operationId": "OAuthAuthorizationRegistry_ListTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3OAuthAccessTokens"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "OAuthAuthorizationRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/authorizations/{client_ids.client_id}/tokens/{id}": {
      "delete": {
        "summary": "Delete (invalidate) an OAuth access token.",
        "operationId": "OAuthAuthorizationRegistry_DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OAuthAuthorizationRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks": {
      "get": {
        "summary": "List the bookmarks for the given user.",
        "operationId": "UserBookmarkRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3UserBookmarks"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "Order the results by this field path.\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted",
            "description": "Only return recently deleted bookmarks.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity_types",
            "description": "Specifies that only bookmarks that reference the given entity type should be returned. If empty the filter is not\napplied.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      },
      "post": {
        "summary": "Create a bookmark for the given user.",
        "operationId": "UserBookmarkRegistry_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3UserBookmark"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v3UserBookmarkRegistryCreateBody"
            }
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/applications/{entity_ids.application_ids.application_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/applications/{entity_ids.device_ids.application_ids.application_id}/devices/{entity_ids.device_ids.device_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete6",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.application_ids.application_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/batch": {
      "delete": {
        "summary": "Delete a list of bookmarks of the given user.\nThis operation is atomic; either all bookmarks are deleted or none.\nBookmarks not found are skipped and no error is returned.",
        "operationId": "UserBookmarkRegistry_BatchDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/clients/{entity_ids.client_ids.client_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/gateways/{entity_ids.gateway_ids.gateway_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/organizations/{entity_ids.organization_ids.organization_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/bookmarks/users/{entity_ids.user_ids.user_id}": {
      "delete": {
        "summary": "Delete the given user's bookmark.",
        "operationId": "UserBookmarkRegistry_Delete5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.client_ids.client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.device_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.application_ids.application_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_eui",
            "description": "The LoRaWAN DevEUI.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.join_eui",
            "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.device_ids.dev_addr",
            "description": "The LoRaWAN DevAddr.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.gateway_ids.gateway_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.gateway_ids.eui",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "entity_ids.organization_ids.organization_id",
            "description": "This ID shares namespace with user IDs.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_ids.user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserBookmarkRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/login-tokens": {
      "post": {
        "summary": "Create a login token that can be used for a one-time login as a user.",
        "operationId": "UserAccess_CreateLoginToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3CreateLoginTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip_email",
            "description": "Skip sending the login token to the user by email.\nThis field is only effective when the login token is created by an admin user.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserAccess"
        ]
      }
    },
    "/users/{user_ids.user_id}/password": {
      "put": {
        "summary": "Update the password of the user.",
        "operationId": "UserRegistry_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistryUpdatePasswordBody"
            }
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/sessions": {
      "get": {
        "summary": "List the active sessions for the given user.",
        "operationId": "UserSessionRegistry_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3UserSessions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "Order the results by this field path (must be present in the field mask).\nDefault ordering is by ID. Prepend with a minus (-) to reverse the order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit the number of results per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number for pagination. 0 is interpreted as 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserSessionRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/sessions/{session_id}": {
      "delete": {
        "summary": "Delete (revoke) the given user session.",
        "operationId": "UserSessionRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserSessionRegistry"
        ]
      }
    },
    "/users/{user_ids.user_id}/temporary_password": {
      "post": {
        "summary": "Create a temporary password that can be used for updating a forgotten password.\nThe generated password is sent to the user's email address.",
        "operationId": "UserRegistry_CreateTemporaryPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_ids.user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids.email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_id}": {
      "delete": {
        "summary": "Delete the user. This may not release the user ID for reuse.",
        "operationId": "UserRegistry_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_id}/purge": {
      "delete": {
        "summary": "Purge the user. This will release the user ID for reuse.\nThe user is responsible for clearing data from any (external) integrations\nthat may store and expose data by user or organization ID.",
        "operationId": "UserRegistry_Purge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_id}/restore": {
      "post": {
        "summary": "Restore a recently deleted user.",
        "description": "Deployment configuration may specify if, and for how long after deletion,\nentities can be restored.",
        "operationId": "UserRegistry_Restore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserRegistry"
        ]
      }
    },
    "/users/{user_id}/rights": {
      "get": {
        "summary": "List the rights the caller has on this user.",
        "operationId": "UserAccess_ListRights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3Rights"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "description": "This ID shares namespace with organization IDs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Secondary identifier, which can only be used in specific requests.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserAccess"
        ]
      }
    }
  },
  "definitions": {
    "ADRSettingsDynamicMode": {
      "type": "object",
      "properties": {
        "margin": {
          "type": "number",
          "format": "float",
          "description": "The ADR margin (dB) tells the network server how much margin it should add in ADR requests.\nA bigger margin is less efficient, but gives a better chance of successful reception.\nIf unset, the default value from Network Server configuration will be used."
        },
        "min_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "Minimum data rate index.\nIf unset, the default value from Network Server configuration will be used."
        },
        "max_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "Maximum data rate index.\nIf unset, the default value from Network Server configuration will be used."
        },
        "min_tx_power_index": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum transmission power index.\nIf unset, the default value from Network Server configuration will be used."
        },
        "max_tx_power_index": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum transmission power index.\nIf unset, the default value from Network Server configuration will be used."
        },
        "min_nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum number of retransmissions.\nIf unset, the default value from Network Server configuration will be used."
        },
        "max_nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of retransmissions.\nIf unset, the default value from Network Server configuration will be used."
        },
        "channel_steering": {
          "$ref": "#/definitions/DynamicModeChannelSteeringSettings"
        },
        "overrides": {
          "$ref": "#/definitions/DynamicModeOverrides"
        }
      },
      "description": "Configuration options for dynamic ADR."
    },
    "ADRSettingsStaticMode": {
      "type": "object",
      "properties": {
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "Data rate index to use."
        },
        "tx_power_index": {
          "type": "integer",
          "format": "int64",
          "description": "Transmission power index to use."
        },
        "nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "Number of retransmissions."
        }
      },
      "description": "Configuration options for static ADR."
    },
    "AWSIoTProviderAccessKey": {
      "type": "object",
      "properties": {
        "access_key_id": {
          "type": "string"
        },
        "secret_access_key": {
          "type": "string"
        },
        "session_token": {
          "type": "string"
        }
      }
    },
    "AWSIoTProviderAssumeRole": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "session_duration": {
          "type": "string"
        }
      }
    },
    "AWSIoTProviderDefaultIntegration": {
      "type": "object",
      "properties": {
        "stack_name": {
          "type": "string",
          "description": "The stack name that is associated with the CloudFormation deployment of The Things Stack Enterprise integration."
        }
      }
    },
    "AppAsDecodeDownlinkBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers"
        },
        "downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "formatter": {
          "$ref": "#/definitions/v3PayloadFormatter"
        },
        "parameter": {
          "type": "string"
        }
      }
    },
    "AppAsDecodeUplinkBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers"
        },
        "uplink": {
          "$ref": "#/definitions/v3ApplicationUplink"
        },
        "formatter": {
          "$ref": "#/definitions/v3PayloadFormatter"
        },
        "parameter": {
          "type": "string"
        }
      }
    },
    "AppAsEncodeDownlinkBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers"
        },
        "downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "formatter": {
          "$ref": "#/definitions/v3PayloadFormatter"
        },
        "parameter": {
          "type": "string"
        }
      }
    },
    "AppAsSimulateUplinkBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when the Application Server received the message."
        },
        "uplink_message": {
          "$ref": "#/definitions/v3ApplicationUplink"
        },
        "uplink_normalized": {
          "$ref": "#/definitions/v3ApplicationUplinkNormalized"
        },
        "join_accept": {
          "$ref": "#/definitions/v3ApplicationJoinAccept"
        },
        "downlink_ack": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_nack": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_sent": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_failed": {
          "$ref": "#/definitions/v3ApplicationDownlinkFailed"
        },
        "downlink_queued": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_queue_invalidated": {
          "$ref": "#/definitions/v3ApplicationInvalidatedDownlinks"
        },
        "location_solved": {
          "$ref": "#/definitions/v3ApplicationLocation"
        },
        "service_data": {
          "$ref": "#/definitions/v3ApplicationServiceData"
        },
        "simulated": {
          "type": "boolean",
          "description": "Signals if the message is coming from the Network Server or is simulated.\nThe Application Server automatically sets this field, and callers must not manually set it."
        }
      },
      "description": "Application uplink message."
    },
    "ApplicationDownlinkClassBC": {
      "type": "object",
      "properties": {
        "gateways": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ClassBCGatewayIdentifiers"
          },
          "description": "Possible gateway identifiers, antenna index, and group index to use for this downlink message.\nThe Network Server selects one of these gateways for downlink, based on connectivity, signal quality, channel utilization and an available slot.\nIf none of the gateways can be selected, the downlink message fails.\nIf empty, a gateway and antenna is selected automatically from the gateways seen in recent uplinks.\nIf group index is set, gateways will be grouped by the index for the Network Server to select one gateway per group."
        },
        "absolute_time": {
          "type": "string",
          "format": "date-time",
          "description": "Absolute time when the downlink message should be transmitted.\nThis requires the gateway to have GPS time synchronization.\nIf the time is in the past or if there is a scheduling conflict, the downlink message fails.\nIf null, the time is selected based on slot availability. This is recommended in class B mode."
        }
      }
    },
    "ApplicationDownlinkConfirmedRetry": {
      "type": "object",
      "properties": {
        "attempt": {
          "type": "integer",
          "format": "int64",
          "description": "The number of attempted confirmed downlink acknowledgements."
        },
        "max_attempts": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of confirmed downlink acknowledgement attempts.\nIf null, the Application Server configuration is used instead."
        }
      }
    },
    "ApplicationPackageRegistrySetAssociationBody": {
      "type": "object",
      "properties": {
        "association": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "end_device_ids": {
                  "type": "object",
                  "properties": {
                    "application_ids": {
                      "type": "object"
                    },
                    "dev_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN DevEUI."
                    },
                    "join_eui": {
                      "type": "string",
                      "format": "string",
                      "example": "70B3D57ED000ABCD",
                      "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                    },
                    "dev_addr": {
                      "type": "string",
                      "format": "string",
                      "example": "2600ABCD",
                      "description": "The LoRaWAN DevAddr."
                    }
                  }
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "package_name": {
              "type": "string"
            },
            "data": {
              "type": "object"
            }
          }
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "ApplicationPackageRegistrySetDefaultAssociationBody": {
      "type": "object",
      "properties": {
        "default": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "package_name": {
              "type": "string"
            },
            "data": {
              "type": "object"
            }
          }
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "ApplicationPubSubAWSIoTProvider": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "The AWS region."
        },
        "access_key": {
          "$ref": "#/definitions/AWSIoTProviderAccessKey",
          "description": "If set, the integration will use an AWS access key."
        },
        "assume_role": {
          "$ref": "#/definitions/AWSIoTProviderAssumeRole",
          "description": "If set, the integration will assume the given role during operation."
        },
        "endpoint_address": {
          "type": "string",
          "description": "The endpoint address to connect to. If the endpoint address is left empty,\nthe integration will try to discover it."
        },
        "default": {
          "$ref": "#/definitions/AWSIoTProviderDefaultIntegration",
          "description": "Enable the default integration. This overrides custom base topic and message topics of the pub/sub integration."
        }
      }
    },
    "ApplicationPubSubMQTTProvider": {
      "type": "object",
      "properties": {
        "server_url": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "subscribe_qos": {
          "$ref": "#/definitions/MQTTProviderQoS"
        },
        "publish_qos": {
          "$ref": "#/definitions/MQTTProviderQoS"
        },
        "use_tls": {
          "type": "boolean"
        },
        "tls_ca": {
          "type": "string",
          "format": "byte",
          "description": "The server Root CA certificate. PEM formatted."
        },
        "tls_client_cert": {
          "type": "string",
          "format": "byte",
          "description": "The client certificate. PEM formatted."
        },
        "tls_client_key": {
          "type": "string",
          "format": "byte",
          "description": "The client private key. PEM formatted."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "HTTP headers to use on MQTT-over-Websocket connections."
        }
      },
      "description": "The MQTT provider settings."
    },
    "ApplicationPubSubNATSProvider": {
      "type": "object",
      "properties": {
        "server_url": {
          "type": "string",
          "description": "The server connection URL."
        }
      },
      "description": "The NATS provider settings."
    },
    "ApplicationWebhookHealthWebhookHealthStatusHealthy": {
      "type": "object"
    },
    "ApplicationWebhookHealthWebhookHealthStatusUnhealthy": {
      "type": "object",
      "properties": {
        "failed_attempts": {
          "type": "string",
          "format": "uint64"
        },
        "last_failed_attempt_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_failed_attempt_details": {
          "$ref": "#/definitions/v3ErrorDetails"
        }
      }
    },
    "AsConfigurationPubSub": {
      "type": "object",
      "properties": {
        "providers": {
          "$ref": "#/definitions/PubSubProviders"
        }
      }
    },
    "AsConfigurationWebhooks": {
      "type": "object",
      "properties": {
        "unhealthy_attempts_threshold": {
          "type": "string",
          "format": "int64"
        },
        "unhealthy_retry_interval": {
          "type": "string"
        }
      }
    },
    "AsSetLinkBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "link": {
          "$ref": "#/definitions/v3ApplicationLink"
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "AuthInfoResponseAPIKeyAccess": {
      "type": "object",
      "properties": {
        "api_key": {
          "$ref": "#/definitions/v3APIKey"
        },
        "entity_ids": {
          "$ref": "#/definitions/v3EntityIdentifiers"
        }
      }
    },
    "BandDescriptionBandDataRate": {
      "type": "object",
      "properties": {
        "rate": {
          "$ref": "#/definitions/v3DataRate"
        }
      }
    },
    "BandDescriptionBeacon": {
      "type": "object",
      "properties": {
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "coding_rate": {
          "type": "string"
        },
        "frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "BandDescriptionDwellTime": {
      "type": "object",
      "properties": {
        "uplinks": {
          "type": "boolean"
        },
        "downlinks": {
          "type": "boolean"
        }
      }
    },
    "BandDescriptionRelayParametersRelayWORChannel": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64"
        },
        "ack_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "BandDescriptionRx2Parameters": {
      "type": "object",
      "properties": {
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "frequency": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "BandDescriptionSubBandParameters": {
      "type": "object",
      "properties": {
        "min_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "max_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "duty_cycle": {
          "type": "number",
          "format": "float"
        },
        "max_eirp": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "BatchUpdateEndDeviceLastSeenRequestEndDeviceLastSeenUpdate": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "last_seen_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CUPSRedirectionClientTLS": {
      "type": "object",
      "properties": {
        "cert": {
          "type": "string",
          "format": "byte",
          "description": "PEM encoded Client Certificate."
        },
        "key": {
          "type": "string",
          "format": "byte",
          "description": "PEM encoded Client Private Key."
        }
      }
    },
    "ChannelSteeringSettingsLoRaNarrowMode": {
      "type": "object",
      "description": "Configuration options for LoRa narrow channels steering.\nThe narrow mode attempts to steer the end device towards\nusing the LoRa modulated, 125kHz bandwidth channels."
    },
    "CompliancesCompliance": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "norm": {
          "type": "string"
        },
        "standard": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ConcentratorConfigFSKChannel": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz)."
        },
        "radio": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConcentratorConfigLBTConfiguration": {
      "type": "object",
      "properties": {
        "rssi_target": {
          "type": "number",
          "format": "float",
          "description": "Received signal strength (dBm)."
        },
        "rssi_offset": {
          "type": "number",
          "format": "float",
          "description": "Received signal strength offset (dBm)."
        },
        "scan_time": {
          "type": "string"
        }
      }
    },
    "ConcentratorConfigLoRaStandardChannel": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz)."
        },
        "radio": {
          "type": "integer",
          "format": "int64"
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth (Hz)."
        },
        "spreading_factor": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DownlinkMessageMessageMACPayload": {
      "type": "object",
      "properties": {
        "f_port": {
          "type": "integer",
          "format": "int64"
        },
        "full_f_cnt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DownlinkMessageMessageMHDR": {
      "type": "object",
      "properties": {
        "m_type": {
          "$ref": "#/definitions/v3MType"
        }
      }
    },
    "DynamicModeChannelSteeringSettings": {
      "type": "object",
      "properties": {
        "lora_narrow": {
          "$ref": "#/definitions/ChannelSteeringSettingsLoRaNarrowMode"
        },
        "disabled": {
          "$ref": "#/definitions/DynamicModeChannelSteeringSettingsDisabledMode"
        }
      },
      "description": "EXPERIMENTAL: Channel steering settings."
    },
    "DynamicModeChannelSteeringSettingsDisabledMode": {
      "type": "object",
      "description": "Configuration options for cases in which ADR is not supposed to steer the end device\nto another set of channels."
    },
    "DynamicModeOverrides": {
      "type": "object",
      "properties": {
        "data_rate_0": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_1": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_2": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_3": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_4": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_5": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_6": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_7": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_8": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_9": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_10": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_11": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_12": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_13": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_14": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        },
        "data_rate_15": {
          "$ref": "#/definitions/DynamicModePerDataRateIndexOverride"
        }
      },
      "description": "EXPERIMENTAL: Configuration overrides."
    },
    "DynamicModePerDataRateIndexOverride": {
      "type": "object",
      "properties": {
        "min_nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum number of retransmissions.\nIf unset, the default value from Network Server configuration will be used."
        },
        "max_nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of retransmissions.\nIf unset, the default value from Network Server configuration will be used."
        }
      },
      "description": "EXPERIMENTAL: Data rate index override settings."
    },
    "EndDeviceClaimingServerAuthorizeApplicationBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "api_key": {
          "type": "string"
        }
      },
      "description": "DEPRECATED: Device claiming that transfers devices between applications is no longer supported and will be removed\nin a future version of The Things Stack."
    },
    "EndDeviceModelBattery": {
      "type": "object",
      "properties": {
        "replaceable": {
          "type": "boolean",
          "description": "Whether the device battery can be replaced."
        },
        "type": {
          "type": "string",
          "description": "Battery type."
        }
      }
    },
    "EndDeviceModelCompliances": {
      "type": "object",
      "properties": {
        "safety": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CompliancesCompliance"
          },
          "description": "List of safety standards the device is compliant with."
        },
        "radio_equipment": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CompliancesCompliance"
          },
          "description": "List of radio equipment standards the device is compliant with."
        }
      }
    },
    "EndDeviceModelDimensions": {
      "type": "object",
      "properties": {
        "width": {
          "type": "number",
          "format": "float",
          "description": "Device width (mm)."
        },
        "height": {
          "type": "number",
          "format": "float",
          "description": "Device height (mm)."
        },
        "diameter": {
          "type": "number",
          "format": "float",
          "description": "Device diameter (mm)."
        },
        "length": {
          "type": "number",
          "format": "float",
          "description": "Device length (mm)."
        }
      }
    },
    "EndDeviceModelFirmwareVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Firmware version string."
        },
        "numeric": {
          "type": "integer",
          "format": "int64",
          "description": "Numeric firmware revision number."
        },
        "supported_hardware_versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hardware versions supported by this firmware version."
        },
        "profiles": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FirmwareVersionProfile"
          },
          "description": "Device profiles for each supported region (band)."
        }
      }
    },
    "EndDeviceModelHardwareVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Hardware version string."
        },
        "numeric": {
          "type": "integer",
          "format": "int64",
          "description": "Numberic hardware revision number."
        },
        "part_number": {
          "type": "string",
          "description": "Hardware part number."
        }
      }
    },
    "EndDeviceModelOperatingConditions": {
      "type": "object",
      "properties": {
        "temperature": {
          "$ref": "#/definitions/OperatingConditionsLimits",
          "description": "Temperature operating conditions (Celsius)."
        },
        "relative_humidity": {
          "$ref": "#/definitions/OperatingConditionsLimits",
          "description": "Relative humidity operating conditions (Fraction, in range [0, 1])."
        }
      }
    },
    "EndDeviceModelPhotos": {
      "type": "object",
      "properties": {
        "main": {
          "type": "string",
          "description": "Main device photo."
        },
        "other": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of other device photos."
        }
      }
    },
    "EndDeviceModelReseller": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Reseller name."
        },
        "region": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Reseller regions."
        },
        "url": {
          "type": "string",
          "description": "Reseller URL."
        }
      }
    },
    "EndDeviceModelVideos": {
      "type": "object",
      "properties": {
        "main": {
          "type": "string",
          "description": "Link to main device video."
        },
        "other": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Links to other device videos."
        }
      }
    },
    "EndDeviceQRCodeGeneratorParseBody": {
      "type": "object",
      "properties": {
        "qr_code": {
          "type": "string",
          "format": "byte",
          "description": "Raw QR code contents."
        }
      }
    },
    "EventAuthentication": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of authentication that was used. This is typically a bearer token."
        },
        "token_type": {
          "type": "string",
          "description": "The type of token that was used. Common types are APIKey, AccessToken and SessionToken."
        },
        "token_id": {
          "type": "string",
          "description": "The ID of the token that was used."
        }
      }
    },
    "FirmwareVersionProfile": {
      "type": "object",
      "properties": {
        "vendor_id": {
          "type": "string",
          "description": "Vendor ID of the profile, as defined in the Device Repository.\nIf this value is set, the profile is loaded from this vendor's folder.\nIf this value is not set, the profile is loaded from the current (end device's) vendor."
        },
        "profile_id": {
          "type": "string",
          "description": "Profile identifier, as defined in the Device Repository."
        },
        "lorawan_certified": {
          "type": "boolean",
          "description": "Whether the device is LoRaWAN certified."
        },
        "codec_id": {
          "type": "string",
          "description": "Payload formatter codec identifier, as defined in the Device Repository."
        }
      }
    },
    "GatewayClaimingServerAuthorizeGatewayBody": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "object",
          "properties": {
            "eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "api_key": {
          "type": "string"
        }
      }
    },
    "GatewayConnectionStatsRoundTripTimes": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string"
        },
        "max": {
          "type": "string"
        },
        "median": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GatewayConnectionStatsSubBand": {
      "type": "object",
      "properties": {
        "min_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "max_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "downlink_utilization_limit": {
          "type": "number",
          "format": "float",
          "description": "Duty-cycle limit of the sub-band as a fraction of time."
        },
        "downlink_utilization": {
          "type": "number",
          "format": "float",
          "description": "Utilization rate of the available duty-cycle. This value should not exceed downlink_utilization_limit."
        }
      }
    },
    "GatewayLRFHSS": {
      "type": "object",
      "properties": {
        "supported": {
          "type": "boolean",
          "description": "The gateway supports the LR-FHSS uplink channels."
        }
      },
      "description": "LR-FHSS gateway capabilities."
    },
    "GatewayRadioTxConfiguration": {
      "type": "object",
      "properties": {
        "min_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "max_frequency": {
          "type": "string",
          "format": "uint64"
        },
        "notch_frequency": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "GenerateEndDeviceQRCodeRequestImage": {
      "type": "object",
      "properties": {
        "image_size": {
          "type": "integer",
          "format": "int64",
          "description": "Requested QR code image dimension in pixels."
        }
      }
    },
    "GetClaimStatusResponseVendorSpecific": {
      "type": "object",
      "properties": {
        "organization_unique_identifier": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "description": "Vendor Specific data in JSON format."
        }
      }
    },
    "GetPhyVersionsResponseVersionInfo": {
      "type": "object",
      "properties": {
        "band_id": {
          "type": "string"
        },
        "phy_versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3PHYVersion"
          }
        }
      }
    },
    "GetTemplateRequestEndDeviceProfileIdentifiers": {
      "type": "object",
      "properties": {
        "vendor_id": {
          "type": "integer",
          "format": "int64",
          "description": "VendorID managed by the LoRa Alliance, as defined in TR005."
        },
        "vendor_profile_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the LoRaWAN end device profile assigned by the vendor."
        }
      },
      "description": "Identifiers to uniquely identify a LoRaWAN end device profile."
    },
    "IsConfigurationAdminRights": {
      "type": "object",
      "properties": {
        "all": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationCollaboratorRights": {
      "type": "object",
      "properties": {
        "set_others_as_contacts": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationEndDevicePicture": {
      "type": "object",
      "properties": {
        "disable_upload": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationProfilePicture": {
      "type": "object",
      "properties": {
        "disable_upload": {
          "type": "boolean"
        },
        "use_gravatar": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationUserLogin": {
      "type": "object",
      "properties": {
        "disable_credentials_login": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationUserRegistration": {
      "type": "object",
      "properties": {
        "invitation": {
          "$ref": "#/definitions/IsConfigurationUserRegistrationInvitation"
        },
        "contact_info_validation": {
          "$ref": "#/definitions/IsConfigurationUserRegistrationContactInfoValidation"
        },
        "admin_approval": {
          "$ref": "#/definitions/UserRegistrationAdminApproval"
        },
        "password_requirements": {
          "$ref": "#/definitions/UserRegistrationPasswordRequirements"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "IsConfigurationUserRegistrationContactInfoValidation": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "token_ttl": {
          "type": "string"
        },
        "retry_interval": {
          "type": "string",
          "description": "The minimum interval between validation emails."
        }
      }
    },
    "IsConfigurationUserRegistrationInvitation": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "token_ttl": {
          "type": "string"
        }
      }
    },
    "IsConfigurationUserRights": {
      "type": "object",
      "properties": {
        "create_applications": {
          "type": "boolean"
        },
        "create_clients": {
          "type": "boolean"
        },
        "create_gateways": {
          "type": "boolean"
        },
        "create_organizations": {
          "type": "boolean"
        }
      }
    },
    "JsEndDeviceRegistryProvisionBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "provisioner_id": {
          "type": "string",
          "description": "ID of the provisioner service as configured in the Join Server."
        },
        "provisioning_data": {
          "type": "string",
          "format": "byte",
          "description": "Vendor-specific provisioning data."
        },
        "list": {
          "$ref": "#/definitions/ProvisionEndDevicesRequestIdentifiersList",
          "description": "List of device identifiers that will be provisioned.\nThe device identifiers must contain device_id and dev_eui.\nIf set, the application_ids must equal the provision request's application_ids.\nThe number of entries in data must match the number of given identifiers."
        },
        "range": {
          "$ref": "#/definitions/ProvisionEndDevicesRequestIdentifiersRange",
          "description": "Provision devices in a range.\nThe device_id will be generated by the provisioner from the vendor-specific data.\nThe dev_eui will be issued from the given start_dev_eui."
        },
        "from_data": {
          "$ref": "#/definitions/ProvisionEndDevicesRequestIdentifiersFromData",
          "description": "Provision devices with identifiers from the given data.\nThe device_id and dev_eui will be generated by the provisioner from the vendor-specific data."
        }
      }
    },
    "ListBandsResponseVersionedBandDescription": {
      "type": "object",
      "properties": {
        "band": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v3BandDescription"
          }
        }
      }
    },
    "MACCommandADRParamSetupReq": {
      "type": "object",
      "properties": {
        "adr_ack_limit_exponent": {
          "$ref": "#/definitions/v3ADRAckLimitExponent",
          "description": "Exponent e that configures the ADR_ACK_LIMIT = 2^e messages."
        },
        "adr_ack_delay_exponent": {
          "$ref": "#/definitions/v3ADRAckDelayExponent",
          "description": "Exponent e that configures the ADR_ACK_DELAY = 2^e messages."
        }
      }
    },
    "MACCommandBeaconFreqAns": {
      "type": "object",
      "properties": {
        "frequency_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandBeaconFreqReq": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency of the Class B beacons (Hz)."
        }
      }
    },
    "MACCommandBeaconTimingAns": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "integer",
          "format": "int64",
          "description": "(uint16) See LoRaWAN specification."
        },
        "channel_index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MACCommandDLChannelAns": {
      "type": "object",
      "properties": {
        "channel_index_ack": {
          "type": "boolean"
        },
        "frequency_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandDLChannelReq": {
      "type": "object",
      "properties": {
        "channel_index": {
          "type": "integer",
          "format": "int64"
        },
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Downlink channel frequency (Hz)."
        }
      }
    },
    "MACCommandDevStatusAns": {
      "type": "object",
      "properties": {
        "battery": {
          "type": "integer",
          "format": "int64",
          "description": "Device battery status.\n0 indicates that the device is connected to an external power source.\n1..254 indicates a battery level.\n255 indicates that the device was not able to measure the battery level."
        },
        "margin": {
          "type": "integer",
          "format": "int32",
          "description": "SNR of the last downlink (dB; [-32, +31])."
        }
      }
    },
    "MACCommandDeviceModeConf": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/v3Class"
        }
      }
    },
    "MACCommandDeviceModeInd": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/v3Class"
        }
      }
    },
    "MACCommandDeviceTimeAns": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MACCommandDutyCycleReq": {
      "type": "object",
      "properties": {
        "max_duty_cycle": {
          "$ref": "#/definitions/v3AggregatedDutyCycle"
        }
      }
    },
    "MACCommandForceRejoinReq": {
      "type": "object",
      "properties": {
        "rejoin_type": {
          "$ref": "#/definitions/v3RejoinRequestType"
        },
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "max_retries": {
          "type": "integer",
          "format": "int64"
        },
        "period_exponent": {
          "$ref": "#/definitions/v3RejoinPeriodExponent",
          "description": "Exponent e that configures the rejoin period = 32 * 2^e + rand(0,32) seconds."
        }
      }
    },
    "MACCommandLinkADRAns": {
      "type": "object",
      "properties": {
        "channel_mask_ack": {
          "type": "boolean"
        },
        "data_rate_index_ack": {
          "type": "boolean"
        },
        "tx_power_index_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandLinkADRReq": {
      "type": "object",
      "properties": {
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "tx_power_index": {
          "type": "integer",
          "format": "int64"
        },
        "channel_mask": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "channel_mask_control": {
          "type": "integer",
          "format": "int64"
        },
        "nb_trans": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MACCommandLinkCheckAns": {
      "type": "object",
      "properties": {
        "margin": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the link margin in dB of the received LinkCheckReq, relative to the demodulation floor."
        },
        "gateway_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MACCommandNewChannelAns": {
      "type": "object",
      "properties": {
        "frequency_ack": {
          "type": "boolean"
        },
        "data_rate_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandNewChannelReq": {
      "type": "object",
      "properties": {
        "channel_index": {
          "type": "integer",
          "format": "int64"
        },
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Channel frequency (Hz)."
        },
        "min_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "max_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "MACCommandPingSlotChannelAns": {
      "type": "object",
      "properties": {
        "frequency_ack": {
          "type": "boolean"
        },
        "data_rate_index_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandPingSlotChannelReq": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Ping slot channel frequency (Hz)."
        },
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "MACCommandPingSlotInfoReq": {
      "type": "object",
      "properties": {
        "period": {
          "$ref": "#/definitions/v3PingSlotPeriod"
        }
      }
    },
    "MACCommandRejoinParamSetupAns": {
      "type": "object",
      "properties": {
        "max_time_exponent_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandRejoinParamSetupReq": {
      "type": "object",
      "properties": {
        "max_count_exponent": {
          "$ref": "#/definitions/v3RejoinCountExponent",
          "description": "Exponent e that configures the rejoin counter = 2^(e+4) messages."
        },
        "max_time_exponent": {
          "$ref": "#/definitions/v3RejoinTimeExponent",
          "description": "Exponent e that configures the rejoin timer = 2^(e+10) seconds."
        }
      }
    },
    "MACCommandRekeyConf": {
      "type": "object",
      "properties": {
        "minor_version": {
          "$ref": "#/definitions/v3Minor"
        }
      }
    },
    "MACCommandRekeyInd": {
      "type": "object",
      "properties": {
        "minor_version": {
          "$ref": "#/definitions/v3Minor"
        }
      }
    },
    "MACCommandRelayConfAns": {
      "type": "object",
      "properties": {
        "second_channel_frequency_ack": {
          "type": "boolean"
        },
        "second_channel_ack_offset_ack": {
          "type": "boolean"
        },
        "second_channel_data_rate_index_ack": {
          "type": "boolean"
        },
        "second_channel_index_ack": {
          "type": "boolean"
        },
        "default_channel_index_ack": {
          "type": "boolean"
        },
        "cad_periodicity_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandRelayConfReq": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MACCommandRelayConfReqConfiguration"
        }
      }
    },
    "MACCommandRelayConfReqConfiguration": {
      "type": "object",
      "properties": {
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel"
        },
        "default_channel_index": {
          "type": "integer",
          "format": "int64"
        },
        "cad_periodicity": {
          "$ref": "#/definitions/v3RelayCADPeriodicity"
        }
      }
    },
    "MACCommandRelayConfigureFwdLimitAns": {
      "type": "object"
    },
    "MACCommandRelayConfigureFwdLimitReq": {
      "type": "object",
      "properties": {
        "reset_limit_counter": {
          "$ref": "#/definitions/v3RelayResetLimitCounter"
        },
        "join_request_limits": {
          "$ref": "#/definitions/v3RelayForwardLimits"
        },
        "notify_limits": {
          "$ref": "#/definitions/v3RelayForwardLimits"
        },
        "global_uplink_limits": {
          "$ref": "#/definitions/v3RelayForwardLimits"
        },
        "overall_limits": {
          "$ref": "#/definitions/v3RelayForwardLimits"
        }
      }
    },
    "MACCommandRelayCtrlUplinkListAns": {
      "type": "object",
      "properties": {
        "rule_index_ack": {
          "type": "boolean"
        },
        "w_f_cnt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MACCommandRelayCtrlUplinkListReq": {
      "type": "object",
      "properties": {
        "rule_index": {
          "type": "integer",
          "format": "int64"
        },
        "action": {
          "$ref": "#/definitions/v3RelayCtrlUplinkListAction"
        }
      }
    },
    "MACCommandRelayEndDeviceConfAns": {
      "type": "object",
      "properties": {
        "second_channel_frequency_ack": {
          "type": "boolean"
        },
        "second_channel_data_rate_index_ack": {
          "type": "boolean"
        },
        "second_channel_index_ack": {
          "type": "boolean"
        },
        "backoff_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandRelayEndDeviceConfReq": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MACCommandRelayEndDeviceConfReqConfiguration"
        }
      }
    },
    "MACCommandRelayEndDeviceConfReqConfiguration": {
      "type": "object",
      "properties": {
        "always": {
          "$ref": "#/definitions/v3RelayEndDeviceAlwaysMode"
        },
        "dynamic": {
          "$ref": "#/definitions/v3RelayEndDeviceDynamicMode"
        },
        "end_device_controlled": {
          "$ref": "#/definitions/v3RelayEndDeviceControlledMode"
        },
        "backoff": {
          "type": "integer",
          "format": "int64"
        },
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel"
        },
        "serving_device_id": {
          "type": "string"
        }
      }
    },
    "MACCommandRelayNotifyNewEndDeviceReq": {
      "type": "object",
      "properties": {
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        },
        "snr": {
          "type": "integer",
          "format": "int32"
        },
        "rssi": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MACCommandRelayUpdateUplinkListAns": {
      "type": "object"
    },
    "MACCommandRelayUpdateUplinkListReq": {
      "type": "object",
      "properties": {
        "rule_index": {
          "type": "integer",
          "format": "int64"
        },
        "forward_limits": {
          "$ref": "#/definitions/v3RelayUplinkForwardLimits"
        },
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        },
        "w_f_cnt": {
          "type": "integer",
          "format": "int64"
        },
        "root_wor_s_key": {
          "type": "string",
          "format": "string",
          "example": "0123456789ABCDEF0123456789ABCDEF"
        },
        "device_id": {
          "type": "string"
        },
        "session_key_id": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "MACCommandResetConf": {
      "type": "object",
      "properties": {
        "minor_version": {
          "$ref": "#/definitions/v3Minor"
        }
      }
    },
    "MACCommandResetInd": {
      "type": "object",
      "properties": {
        "minor_version": {
          "$ref": "#/definitions/v3Minor"
        }
      }
    },
    "MACCommandRxParamSetupAns": {
      "type": "object",
      "properties": {
        "rx2_data_rate_index_ack": {
          "type": "boolean"
        },
        "rx1_data_rate_offset_ack": {
          "type": "boolean"
        },
        "rx2_frequency_ack": {
          "type": "boolean"
        }
      }
    },
    "MACCommandRxParamSetupReq": {
      "type": "object",
      "properties": {
        "rx2_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "rx1_data_rate_offset": {
          "$ref": "#/definitions/v3DataRateOffset"
        },
        "rx2_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Rx2 frequency (Hz)."
        }
      }
    },
    "MACCommandRxTimingSetupReq": {
      "type": "object",
      "properties": {
        "delay": {
          "$ref": "#/definitions/v3RxDelay"
        }
      }
    },
    "MACCommandTxParamSetupReq": {
      "type": "object",
      "properties": {
        "max_eirp_index": {
          "$ref": "#/definitions/v3DeviceEIRP",
          "title": "Indicates the maximum EIRP value in dBm, indexed by the following vector:\n[ 8 10 12 13 14 16 18 20 21 24 26 27 29 30 33 36 ]"
        },
        "uplink_dwell_time": {
          "type": "boolean"
        },
        "downlink_dwell_time": {
          "type": "boolean"
        }
      }
    },
    "MACStateDataRateRange": {
      "type": "object",
      "properties": {
        "min_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "max_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "MACStateDataRateRanges": {
      "type": "object",
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MACStateDataRateRange"
          }
        }
      }
    },
    "MACStateDownlinkMessageMessage": {
      "type": "object",
      "properties": {
        "m_hdr": {
          "$ref": "#/definitions/DownlinkMessageMessageMHDR"
        },
        "mac_payload": {
          "$ref": "#/definitions/DownlinkMessageMessageMACPayload"
        }
      }
    },
    "MACStateJoinAccept": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string",
          "format": "byte",
          "description": "Payload of the join-accept received from Join Server."
        },
        "request": {
          "$ref": "#/definitions/v3MACStateJoinRequest"
        },
        "keys": {
          "$ref": "#/definitions/v3SessionKeys",
          "description": "Network session keys associated with the join."
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        },
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        }
      }
    },
    "MACStateUplinkMessageRxMetadata": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "channel_rssi": {
          "type": "number",
          "format": "float"
        },
        "snr": {
          "type": "number",
          "format": "float"
        },
        "downlink_path_constraint": {
          "$ref": "#/definitions/v3DownlinkPathConstraint"
        },
        "uplink_token": {
          "type": "string",
          "format": "byte"
        },
        "packet_broker": {
          "$ref": "#/definitions/UplinkMessageRxMetadataPacketBrokerMetadata"
        },
        "relay": {
          "$ref": "#/definitions/UplinkMessageRxMetadataRelayMetadata"
        }
      }
    },
    "MACStateUplinkMessageTxSettings": {
      "type": "object",
      "properties": {
        "data_rate": {
          "$ref": "#/definitions/v3DataRate"
        }
      }
    },
    "MQTTProviderQoS": {
      "type": "string",
      "enum": [
        "AT_MOST_ONCE",
        "AT_LEAST_ONCE",
        "EXACTLY_ONCE"
      ],
      "default": "AT_MOST_ONCE"
    },
    "ManagedGatewayConfigurationServiceScanWiFiAccessPointsBody": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    },
    "ManagedGatewayConfigurationServiceStreamEventsBody": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    },
    "NotificationServiceUpdateStatusBody": {
      "type": "object",
      "properties": {
        "receiver_ids": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          },
          "description": "The IDs of the receiving user.",
          "title": "The IDs of the receiving user."
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the notifications to update the status of."
        },
        "status": {
          "$ref": "#/definitions/v3NotificationStatus",
          "description": "The status to set on the notifications."
        }
      }
    },
    "NsEndDeviceRegistryResetFactoryDefaultsBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the end device fields that should be returned.\nSee the API reference for which fields can be returned by the different services."
        }
      }
    },
    "NsRelayConfigurationServiceCreateRelayBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "device_id": {
              "type": "string"
            },
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          },
          "description": "End device identifiers of the relay.",
          "title": "End device identifiers of the relay."
        },
        "settings": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "Relay configuration."
        }
      }
    },
    "NsRelayConfigurationServiceCreateRelayUplinkForwardingRuleBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          },
          "description": "End device identifiers of the relay.",
          "title": "End device identifiers of the relay."
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the uplink forwarding rule."
        },
        "rule": {
          "$ref": "#/definitions/v3RelayUplinkForwardingRule",
          "description": "Uplink forwarding rule."
        }
      }
    },
    "NsRelayConfigurationServiceUpdateRelayBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          },
          "description": "End device identifiers of the relay.",
          "title": "End device identifiers of the relay."
        },
        "settings": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "Relay configuration."
        },
        "field_mask": {
          "type": "string",
          "description": "Field mask of the fields to update."
        }
      }
    },
    "NsRelayConfigurationServiceUpdateRelayUplinkForwardingRuleBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          },
          "description": "End device identifiers of the relay.",
          "title": "End device identifiers of the relay."
        },
        "rule": {
          "$ref": "#/definitions/v3RelayUplinkForwardingRule",
          "description": "Uplink forwarding rule."
        },
        "field_mask": {
          "type": "string",
          "description": "Field mask of the fields to update."
        }
      }
    },
    "OperatingConditionsLimits": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number",
          "format": "float",
          "description": "Min value of operating conditions range."
        },
        "max": {
          "type": "number",
          "format": "float",
          "description": "Max value of operating conditions range."
        }
      }
    },
    "PbaSetHomeNetworkRoutingPolicyBody": {
      "type": "object",
      "properties": {
        "home_network_id": {
          "type": "object",
          "description": "Packet Broker identifier of the Home Network.",
          "title": "Packet Broker identifier of the Home Network."
        },
        "uplink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyUplink",
          "description": "Uplink policy."
        },
        "downlink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyDownlink",
          "description": "Downlink policy."
        }
      }
    },
    "PictureEmbedded": {
      "type": "object",
      "properties": {
        "mime_type": {
          "type": "string",
          "description": "MIME type of the picture."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Picture data. A data URI can be constructed as follows:\n`data:\u003cmime_type\u003e;base64,\u003cdata\u003e`."
        }
      }
    },
    "ProvisionEndDevicesRequestIdentifiersFromData": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "ProvisionEndDevicesRequestIdentifiersList": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "end_device_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDeviceIdentifiers"
          }
        }
      }
    },
    "ProvisionEndDevicesRequestIdentifiersRange": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "start_dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "DevEUI to start issuing from."
        }
      }
    },
    "PubSubProviders": {
      "type": "object",
      "properties": {
        "mqtt": {
          "$ref": "#/definitions/PubSubProvidersStatus"
        },
        "nats": {
          "$ref": "#/definitions/PubSubProvidersStatus"
        }
      }
    },
    "PubSubProvidersStatus": {
      "type": "string",
      "enum": [
        "ENABLED",
        "WARNING",
        "DISABLED"
      ],
      "default": "ENABLED",
      "description": " - ENABLED: No restrictions are in place.\n - WARNING: Warnings are being emitted that the provider will be deprecated in the future.\n - DISABLED: New integrations cannot be set up, and old ones do not start."
    },
    "TxAcknowledgmentResult": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "UNKNOWN_ERROR",
        "TOO_LATE",
        "TOO_EARLY",
        "COLLISION_PACKET",
        "COLLISION_BEACON",
        "TX_FREQ",
        "TX_POWER",
        "GPS_UNLOCKED"
      ],
      "default": "SUCCESS"
    },
    "TxSettingsDownlink": {
      "type": "object",
      "properties": {
        "antenna_index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the antenna on which the uplink was received and/or downlink must be sent."
        },
        "tx_power": {
          "type": "number",
          "format": "float",
          "description": "Transmission power (dBm). Only on downlink."
        },
        "invert_polarization": {
          "type": "boolean",
          "description": "Invert LoRa polarization; false for LoRaWAN uplink, true for downlink."
        }
      },
      "description": "Transmission settings for downlink."
    },
    "UplinkMessageRxMetadataPacketBrokerMetadata": {
      "type": "object"
    },
    "UplinkMessageRxMetadataRelayMetadata": {
      "type": "object"
    },
    "UserConsolePreferencesDashboardLayouts": {
      "type": "object",
      "properties": {
        "api_key": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "application": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "collaborator": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "end_device": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "gateway": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "organization": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "overview": {
          "$ref": "#/definitions/v3DashboardLayout"
        },
        "user": {
          "$ref": "#/definitions/v3DashboardLayout"
        }
      }
    },
    "UserConsolePreferencesSortBy": {
      "type": "object",
      "properties": {
        "api_key": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "collaborator": {
          "type": "string"
        },
        "end_device": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "description": "SortBy defines the field to which the Console will sort the display of entities."
    },
    "UserRegistrationAdminApproval": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        }
      }
    },
    "UserRegistrationPasswordRequirements": {
      "type": "object",
      "properties": {
        "min_length": {
          "type": "integer",
          "format": "int64"
        },
        "max_length": {
          "type": "integer",
          "format": "int64"
        },
        "min_uppercase": {
          "type": "integer",
          "format": "int64"
        },
        "min_digits": {
          "type": "integer",
          "format": "int64"
        },
        "min_special": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UserRegistryUpdatePasswordBody": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "new": {
          "type": "string"
        },
        "old": {
          "type": "string"
        },
        "revoke_all_access": {
          "type": "boolean",
          "description": "Revoke active sessions and access tokens of user if true. To be used if credentials are suspected to be compromised."
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "lorawanv3BoolValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        }
      }
    },
    "lorawanv3ContactInfoValidation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/v3EntityIdentifiers"
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "lorawanv3DownlinkMessage": {
      "type": "object",
      "properties": {
        "raw_payload": {
          "type": "string",
          "format": "byte"
        },
        "payload": {
          "$ref": "#/definitions/lorawanv3Message"
        },
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "request": {
          "$ref": "#/definitions/v3TxRequest"
        },
        "scheduled": {
          "$ref": "#/definitions/lorawanv3TxSettings"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "session_key_id": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Mapping from UDP message:\n\n imme: -\n tmst: scheduled.timestamp\n tmms: scheduled.time\n freq: scheduled.frequency\n rfch: (0)\n powe: scheduled.tx_power\n modu: scheduled.modulation\n datr: scheduled.data_rate_index (derived)\n codr: scheduled.coding_rate\n fdev: (derived from bandwidth)\n ipol: scheduled.invert_polarization\n prea: [scheduled.advanced]\n size: (derived from len(raw_payload))\n data: raw_payload\n ncrc: [scheduled.advanced]",
      "title": "Downlink message from the network to the end device"
    },
    "lorawanv3GatewayIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "type": "string"
        },
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    },
    "lorawanv3Invitation": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "accepted_at": {
          "type": "string",
          "format": "date-time"
        },
        "accepted_by": {
          "$ref": "#/definitions/v3UserIdentifiers"
        }
      }
    },
    "lorawanv3Location": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The NorthâSouth position (degrees; -90 to +90), where 0 is the equator, North pole is positive, South pole is negative."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The East-West position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), East is positive , West is negative."
        },
        "altitude": {
          "type": "integer",
          "format": "int32",
          "description": "The altitude (meters), where 0 is the mean sea level."
        },
        "accuracy": {
          "type": "integer",
          "format": "int32",
          "description": "The accuracy of the location (meters)."
        },
        "source": {
          "$ref": "#/definitions/v3LocationSource",
          "description": "Source of the location information."
        }
      }
    },
    "lorawanv3MACPayload": {
      "type": "object",
      "properties": {
        "f_hdr": {
          "$ref": "#/definitions/v3FHDR"
        },
        "f_port": {
          "type": "integer",
          "format": "int64"
        },
        "frm_payload": {
          "type": "string",
          "format": "byte"
        },
        "decoded_payload": {
          "type": "object"
        },
        "full_f_cnt": {
          "type": "integer",
          "format": "int64",
          "description": "Full 32-bit FCnt value. Used internally by Network Server."
        }
      }
    },
    "lorawanv3MHDR": {
      "type": "object",
      "properties": {
        "m_type": {
          "$ref": "#/definitions/v3MType"
        },
        "major": {
          "$ref": "#/definitions/v3Major"
        }
      }
    },
    "lorawanv3Message": {
      "type": "object",
      "properties": {
        "m_hdr": {
          "$ref": "#/definitions/lorawanv3MHDR"
        },
        "mic": {
          "type": "string",
          "format": "byte"
        },
        "mac_payload": {
          "$ref": "#/definitions/lorawanv3MACPayload"
        },
        "join_request_payload": {
          "$ref": "#/definitions/v3JoinRequestPayload"
        },
        "join_accept_payload": {
          "$ref": "#/definitions/v3JoinAcceptPayload"
        },
        "rejoin_request_payload": {
          "$ref": "#/definitions/v3RejoinRequestPayload"
        }
      },
      "title": "Message represents a LoRaWAN message"
    },
    "lorawanv3PacketBrokerMetadata": {
      "type": "object",
      "properties": {
        "message_id": {
          "type": "string",
          "description": "Message identifier generated by Packet Broker Router."
        },
        "forwarder_net_id": {
          "type": "string",
          "format": "string",
          "example": "000013",
          "description": "LoRa Alliance NetID of the Packet Broker Forwarder Member."
        },
        "forwarder_tenant_id": {
          "type": "string",
          "description": "Tenant ID managed by the Packet Broker Forwarder Member."
        },
        "forwarder_cluster_id": {
          "type": "string",
          "description": "Forwarder Cluster ID of the Packet Broker Forwarder."
        },
        "forwarder_gateway_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "Forwarder gateway EUI."
        },
        "forwarder_gateway_id": {
          "type": "string",
          "description": "Forwarder gateway ID."
        },
        "home_network_net_id": {
          "type": "string",
          "format": "string",
          "example": "000013",
          "description": "LoRa Alliance NetID of the Packet Broker Home Network Member."
        },
        "home_network_tenant_id": {
          "type": "string",
          "description": "Tenant ID managed by the Packet Broker Home Network Member.\nThis value is empty if it cannot be determined by the Packet Broker Router."
        },
        "home_network_cluster_id": {
          "type": "string",
          "description": "Home Network Cluster ID of the Packet Broker Home Network."
        },
        "hops": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3PacketBrokerRouteHop"
          },
          "description": "Hops that the message passed. Each Packet Broker Router service appends an entry."
        }
      }
    },
    "lorawanv3RelayMetadata": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "description": "End device identifiers of the relay."
        },
        "wor_channel": {
          "$ref": "#/definitions/lorawanv3RelayWORChannel",
          "description": "Wake on radio channel."
        }
      }
    },
    "lorawanv3RelayParameters": {
      "type": "object",
      "properties": {
        "serving": {
          "$ref": "#/definitions/v3ServingRelayParameters",
          "description": "Parameters related to a relay which is serving end devices."
        },
        "served": {
          "$ref": "#/definitions/v3ServedRelayParameters",
          "description": "Parameters related to an end device served by a relay."
        }
      },
      "description": "RelayParameters represent the parameters of a relay.\nThis is used internally by the Network Server."
    },
    "lorawanv3RelayWORChannel": {
      "type": "string",
      "enum": [
        "RELAY_WOR_CHANNEL_DEFAULT",
        "RELAY_WOR_CHANNEL_SECONDARY"
      ],
      "default": "RELAY_WOR_CHANNEL_DEFAULT"
    },
    "lorawanv3RxMetadata": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "packet_broker": {
          "$ref": "#/definitions/lorawanv3PacketBrokerMetadata"
        },
        "relay": {
          "$ref": "#/definitions/lorawanv3RelayMetadata"
        },
        "antenna_index": {
          "type": "integer",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp at the end of the transmission, provided by the gateway. The accuracy is undefined."
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Gateway concentrator timestamp when the Rx finished (microseconds)."
        },
        "fine_timestamp": {
          "type": "string",
          "format": "uint64",
          "description": "Gateway's internal fine timestamp when the Rx finished (nanoseconds)."
        },
        "encrypted_fine_timestamp": {
          "type": "string",
          "format": "byte",
          "description": "Encrypted gateway's internal fine timestamp when the Rx finished (nanoseconds)."
        },
        "encrypted_fine_timestamp_key_id": {
          "type": "string"
        },
        "rssi": {
          "type": "number",
          "format": "float",
          "description": "Received signal strength indicator (dBm).\nThis value equals `channel_rssi`."
        },
        "signal_rssi": {
          "type": "number",
          "format": "float",
          "description": "Received signal strength indicator of the signal (dBm)."
        },
        "channel_rssi": {
          "type": "number",
          "format": "float",
          "description": "Received signal strength indicator of the channel (dBm)."
        },
        "rssi_standard_deviation": {
          "type": "number",
          "format": "float",
          "description": "Standard deviation of the RSSI during preamble."
        },
        "snr": {
          "type": "number",
          "format": "float",
          "description": "Signal-to-noise ratio (dB)."
        },
        "frequency_offset": {
          "type": "string",
          "format": "int64",
          "description": "Frequency offset (Hz)."
        },
        "location": {
          "$ref": "#/definitions/lorawanv3Location",
          "description": "Antenna location; injected by the Gateway Server."
        },
        "downlink_path_constraint": {
          "$ref": "#/definitions/v3DownlinkPathConstraint",
          "description": "Gateway downlink path constraint; injected by the Gateway Server."
        },
        "uplink_token": {
          "type": "string",
          "format": "byte",
          "description": "Uplink token to be included in the Tx request in class A downlink; injected by gateway, Gateway Server or fNS."
        },
        "channel_index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the gateway channel that received the message."
        },
        "hopping_width": {
          "type": "integer",
          "format": "int64",
          "description": "Hopping width; a number describing the number of steps of the LR-FHSS grid."
        },
        "frequency_drift": {
          "type": "integer",
          "format": "int32",
          "description": "Frequency drift in Hz between start and end of an LR-FHSS packet (signed)."
        },
        "gps_time": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp at the end of the transmission, provided by the gateway.\nGuaranteed to be based on a GPS PPS signal, with an accuracy of 1 millisecond."
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp at which the Gateway Server has received the message."
        },
        "advanced": {
          "type": "object",
          "title": "Advanced metadata fields\n- can be used for advanced information or experimental features that are not yet formally defined in the API\n- field names are written in snake_case"
        }
      },
      "description": "Contains metadata for a received message. Each antenna that receives\na message corresponds to one RxMetadata."
    },
    "lorawanv3TxSettings": {
      "type": "object",
      "properties": {
        "data_rate": {
          "$ref": "#/definitions/v3DataRate",
          "description": "Data rate."
        },
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz)."
        },
        "enable_crc": {
          "type": "boolean",
          "description": "Send a CRC in the packet; only on uplink; on downlink, CRC should not be enabled."
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp of the gateway concentrator when the uplink message was received, or when the downlink message should be transmitted (microseconds).\nOn downlink, set timestamp to 0 and time to null to use immediate scheduling."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the gateway when the uplink message was received, or when the downlink message should be transmitted.\nFor downlink, this requires the gateway to have GPS time synchronization."
        },
        "downlink": {
          "$ref": "#/definitions/TxSettingsDownlink",
          "description": "Transmission settings for downlink."
        },
        "concentrator_timestamp": {
          "type": "string",
          "format": "int64",
          "description": "Concentrator timestamp for the downlink as calculated by the Gateway Server scheduler.\nThis value takes into account necessary offsets such as the RTT (Round Trip Time) and TOA (Time Of Arrival).\nThis field is set and used only by the Gateway Server."
        }
      },
      "description": "TxSettings contains the settings for a transmission.\nThis message is used on both uplink and downlink.\nOn downlink, this is a scheduled transmission."
    },
    "lorawanv3UplinkMessage": {
      "type": "object",
      "properties": {
        "raw_payload": {
          "type": "string",
          "format": "byte"
        },
        "payload": {
          "$ref": "#/definitions/lorawanv3Message"
        },
        "settings": {
          "$ref": "#/definitions/lorawanv3TxSettings"
        },
        "rx_metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3RxMetadata"
          }
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when a component received the message.\nThe Gateway Server and Network Server set this value to their local server time of reception."
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "device_channel_index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the device channel that received the message.\nSet by Network Server."
        },
        "consumed_airtime": {
          "type": "string",
          "description": "Consumed airtime for the transmission of the uplink message. Calculated by Network Server using the RawPayload size and the transmission settings."
        },
        "crc_status": {
          "type": "boolean",
          "description": "Cyclic Redundancy Check (CRC) status of demodulating the frame.\nIf unset, the modulation does not support CRC or the gateway did not provide a CRC status.\nIf set to false, this message should not be processed."
        }
      },
      "description": "Mapping from UDP message (other fields can be set in \"advanced\"):\n\n - time: rx_metadata.time\n - tmst: rx_metadata.timestamp\n - freq: settings.frequency\n - modu: settings.modulation\n - datr: settings.data_rate_index (and derived fields)\n - codr: settings.coding_rate\n - size: len(raw_payload)\n - data: raw_payload (and derived payload)\n - rsig: rx_metadata\n  - ant: rx_metadata.antenna_index\n  - chan: rx_metadata.channel_index\n  - rssis: rx_metadata.rssi\n  - lsnr: rx_metadata.snr",
      "title": "Uplink message from the end device to the network"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v3ADRAckDelayExponent": {
      "type": "string",
      "enum": [
        "ADR_ACK_DELAY_1",
        "ADR_ACK_DELAY_2",
        "ADR_ACK_DELAY_4",
        "ADR_ACK_DELAY_8",
        "ADR_ACK_DELAY_16",
        "ADR_ACK_DELAY_32",
        "ADR_ACK_DELAY_64",
        "ADR_ACK_DELAY_128",
        "ADR_ACK_DELAY_256",
        "ADR_ACK_DELAY_512",
        "ADR_ACK_DELAY_1024",
        "ADR_ACK_DELAY_2048",
        "ADR_ACK_DELAY_4096",
        "ADR_ACK_DELAY_8192",
        "ADR_ACK_DELAY_16384",
        "ADR_ACK_DELAY_32768"
      ],
      "default": "ADR_ACK_DELAY_1"
    },
    "v3ADRAckDelayExponentValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3ADRAckDelayExponent"
        }
      }
    },
    "v3ADRAckLimitExponent": {
      "type": "string",
      "enum": [
        "ADR_ACK_LIMIT_1",
        "ADR_ACK_LIMIT_2",
        "ADR_ACK_LIMIT_4",
        "ADR_ACK_LIMIT_8",
        "ADR_ACK_LIMIT_16",
        "ADR_ACK_LIMIT_32",
        "ADR_ACK_LIMIT_64",
        "ADR_ACK_LIMIT_128",
        "ADR_ACK_LIMIT_256",
        "ADR_ACK_LIMIT_512",
        "ADR_ACK_LIMIT_1024",
        "ADR_ACK_LIMIT_2048",
        "ADR_ACK_LIMIT_4096",
        "ADR_ACK_LIMIT_8192",
        "ADR_ACK_LIMIT_16384",
        "ADR_ACK_LIMIT_32768"
      ],
      "default": "ADR_ACK_LIMIT_1"
    },
    "v3ADRAckLimitExponentValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3ADRAckLimitExponent"
        }
      }
    },
    "v3ADRSettings": {
      "type": "object",
      "properties": {
        "static": {
          "$ref": "#/definitions/ADRSettingsStaticMode"
        },
        "dynamic": {
          "$ref": "#/definitions/ADRSettingsDynamicMode"
        },
        "disabled": {
          "$ref": "#/definitions/v3ADRSettingsDisabledMode"
        }
      },
      "description": "Adaptive Data Rate settings."
    },
    "v3ADRSettingsDisabledMode": {
      "type": "object",
      "description": "Configuration options for cases in which ADR is to be disabled\ncompletely."
    },
    "v3APIKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Immutable and unique public identifier for the API key.\nGenerated by the Access Server."
        },
        "key": {
          "type": "string",
          "description": "Immutable and unique secret value of the API key.\nGenerated by the Access Server."
        },
        "name": {
          "type": "string",
          "description": "User-defined (friendly) name for the API key."
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          },
          "description": "Rights that are granted to this API key."
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3APIKeys": {
      "type": "object",
      "properties": {
        "api_keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3APIKey"
          }
        }
      }
    },
    "v3AggregatedDutyCycle": {
      "type": "string",
      "enum": [
        "DUTY_CYCLE_1",
        "DUTY_CYCLE_2",
        "DUTY_CYCLE_4",
        "DUTY_CYCLE_8",
        "DUTY_CYCLE_16",
        "DUTY_CYCLE_32",
        "DUTY_CYCLE_64",
        "DUTY_CYCLE_128",
        "DUTY_CYCLE_256",
        "DUTY_CYCLE_512",
        "DUTY_CYCLE_1024",
        "DUTY_CYCLE_2048",
        "DUTY_CYCLE_4096",
        "DUTY_CYCLE_8192",
        "DUTY_CYCLE_16384",
        "DUTY_CYCLE_32768"
      ],
      "default": "DUTY_CYCLE_1",
      "description": " - DUTY_CYCLE_1: 100%.\n - DUTY_CYCLE_2: 50%.\n - DUTY_CYCLE_4: 25%.\n - DUTY_CYCLE_8: 12.5%.\n - DUTY_CYCLE_16: 6.25%.\n - DUTY_CYCLE_32: 3.125%.\n - DUTY_CYCLE_64: 1.5625%.\n - DUTY_CYCLE_128: Roughly 0.781%.\n - DUTY_CYCLE_256: Roughly 0.390%.\n - DUTY_CYCLE_512: Roughly 0.195%.\n - DUTY_CYCLE_1024: Roughly 0.098%.\n - DUTY_CYCLE_2048: Roughly 0.049%.\n - DUTY_CYCLE_4096: Roughly 0.024%.\n - DUTY_CYCLE_8192: Roughly 0.012%.\n - DUTY_CYCLE_16384: Roughly 0.006%.\n - DUTY_CYCLE_32768: Roughly 0.003%."
    },
    "v3AggregatedDutyCycleValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3AggregatedDutyCycle"
        }
      }
    },
    "v3AppAsDownlinkQueuePushBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          }
        }
      }
    },
    "v3AppAsDownlinkQueueReplaceBody": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "type": "object",
          "properties": {
            "application_ids": {
              "type": "object"
            },
            "dev_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN DevEUI."
            },
            "join_eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
            },
            "dev_addr": {
              "type": "string",
              "format": "string",
              "example": "2600ABCD",
              "description": "The LoRaWAN DevAddr."
            }
          }
        },
        "downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          }
        }
      }
    },
    "v3AppSKeyResponse": {
      "type": "object",
      "properties": {
        "app_s_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Application Session Key."
        }
      }
    },
    "v3Application": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers",
          "description": "The identifiers of the application. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the application was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the application was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the application was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the application."
        },
        "description": {
          "type": "string",
          "description": "A description for the application."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this application. Typically used for organizing applications or for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this application. Typically used to indicate who to contact with technical/security questions about the application.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "network_server_address": {
          "type": "string",
          "description": "The address of the Network Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "application_server_address": {
          "type": "string",
          "description": "The address of the Application Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "join_server_address": {
          "type": "string",
          "description": "The address of the Join Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "dev_eui_counter": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Application is the message that defines an Application in the network."
    },
    "v3ApplicationAccessCreateAPIKeyBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3ApplicationAccessSetCollaboratorBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "collaborator": {
          "$ref": "#/definitions/v3Collaborator"
        }
      }
    },
    "v3ApplicationAccessUpdateAPIKeyBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "api_key": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Immutable and unique secret value of the API key.\nGenerated by the Access Server."
            },
            "name": {
              "type": "string",
              "description": "User-defined (friendly) name for the API key."
            },
            "rights": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3Right"
              },
              "description": "Rights that are granted to this API key."
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "expires_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the api key fields that should be updated."
        }
      }
    },
    "v3ApplicationActivationSettingRegistrySetBody": {
      "type": "object",
      "properties": {
        "application_ids": {
          "type": "object"
        },
        "settings": {
          "$ref": "#/definitions/v3ApplicationActivationSettings"
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3ApplicationActivationSettings": {
      "type": "object",
      "properties": {
        "kek_label": {
          "type": "string",
          "description": "The KEK label to use for wrapping application keys."
        },
        "kek": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Key Encryption Key."
        },
        "home_net_id": {
          "type": "string",
          "format": "string",
          "example": "000013",
          "description": "Home NetID."
        },
        "application_server_id": {
          "type": "string",
          "description": "The AS-ID of the Application Server to use."
        }
      }
    },
    "v3ApplicationDownlink": {
      "type": "object",
      "properties": {
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Join Server issued identifier for the session keys used by this downlink."
        },
        "f_port": {
          "type": "integer",
          "format": "int64"
        },
        "f_cnt": {
          "type": "integer",
          "format": "int64"
        },
        "frm_payload": {
          "type": "string",
          "format": "byte",
          "description": "The frame payload of the downlink message.\nThe payload is encrypted if the skip_payload_crypto field of the EndDevice\nis true."
        },
        "decoded_payload": {
          "type": "object",
          "description": "The decoded frame payload of the downlink message.\nWhen scheduling downlink with a message processor configured for the end device (see formatters) or application (see default_formatters),\nthis fields acts as input for the downlink encoder, and the output is set to frm_payload.\nWhen reading downlink (listing the queue, downlink message events, etc), this fields acts as output of the downlink decoder, and the input is frm_payload."
        },
        "decoded_payload_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Warnings generated by the message processor while encoding frm_payload (scheduling downlink) or decoding the frm_payload (reading downlink)."
        },
        "confirmed": {
          "type": "boolean"
        },
        "class_b_c": {
          "$ref": "#/definitions/ApplicationDownlinkClassBC",
          "description": "Optional gateway and timing information for class B and C.\nIf set, this downlink message will only be transmitted as class B or C downlink.\nIf not set, this downlink message may be transmitted in class A, B and C."
        },
        "priority": {
          "$ref": "#/definitions/v3TxSchedulePriority",
          "description": "Priority for scheduling the downlink message."
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmed_retry": {
          "$ref": "#/definitions/ApplicationDownlinkConfirmedRetry"
        }
      }
    },
    "v3ApplicationDownlinkFailed": {
      "type": "object",
      "properties": {
        "downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "error": {
          "$ref": "#/definitions/v3ErrorDetails"
        }
      }
    },
    "v3ApplicationDownlinks": {
      "type": "object",
      "properties": {
        "downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          }
        }
      }
    },
    "v3ApplicationIdentifiers": {
      "type": "object",
      "properties": {
        "application_id": {
          "type": "string"
        }
      }
    },
    "v3ApplicationInvalidatedDownlinks": {
      "type": "object",
      "properties": {
        "downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          }
        },
        "last_f_cnt_down": {
          "type": "integer",
          "format": "int64"
        },
        "session_key_id": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3ApplicationJoinAccept": {
      "type": "object",
      "properties": {
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Join Server issued identifier for the session keys negotiated in this join."
        },
        "app_s_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "Encrypted Application Session Key (if Join Server sent it to Network Server)."
        },
        "invalidated_downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          },
          "description": "Downlink messages in the queue that got invalidated because of the session change."
        },
        "pending_session": {
          "type": "boolean",
          "description": "Indicates whether the security context refers to the pending session, i.e. when this join-accept is an answer to a\nrejoin-request."
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when the Network Server received the message."
        }
      }
    },
    "v3ApplicationLink": {
      "type": "object",
      "properties": {
        "default_formatters": {
          "$ref": "#/definitions/v3MessagePayloadFormatters",
          "description": "Default message payload formatters to use when there are no formatters\ndefined on the end device level."
        },
        "skip_payload_crypto": {
          "type": "boolean",
          "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nLeave empty for the using the Application Server's default setting."
        }
      }
    },
    "v3ApplicationLinkStats": {
      "type": "object",
      "properties": {
        "linked_at": {
          "type": "string",
          "format": "date-time"
        },
        "network_server_address": {
          "type": "string"
        },
        "last_up_received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the last upstream message has been received from a Network Server.\nThis can be a join-accept, uplink message or downlink message event."
        },
        "up_count": {
          "type": "string",
          "format": "uint64",
          "description": "Number of upstream messages received."
        },
        "last_downlink_forwarded_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the last downlink message has been forwarded to a Network Server."
        },
        "downlink_count": {
          "type": "string",
          "format": "uint64",
          "description": "Number of downlink messages forwarded."
        }
      },
      "description": "Link stats as monitored by the Application Server."
    },
    "v3ApplicationLocation": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/lorawanv3Location"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v3ApplicationPackage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "default_f_port": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3ApplicationPackageAssociation": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationPackageAssociationIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "package_name": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "v3ApplicationPackageAssociationIdentifiers": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "f_port": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3ApplicationPackageAssociations": {
      "type": "object",
      "properties": {
        "associations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationPackageAssociation"
          }
        }
      }
    },
    "v3ApplicationPackageDefaultAssociation": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationPackageDefaultAssociationIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "package_name": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "v3ApplicationPackageDefaultAssociationIdentifiers": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "f_port": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3ApplicationPackageDefaultAssociations": {
      "type": "object",
      "properties": {
        "defaults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationPackageDefaultAssociation"
          }
        }
      }
    },
    "v3ApplicationPackages": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationPackage"
          }
        }
      }
    },
    "v3ApplicationPubSub": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationPubSubIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "format": {
          "type": "string",
          "description": "The format to use for the body.\nSupported values depend on the Application Server configuration."
        },
        "nats": {
          "$ref": "#/definitions/ApplicationPubSubNATSProvider"
        },
        "mqtt": {
          "$ref": "#/definitions/ApplicationPubSubMQTTProvider"
        },
        "aws_iot": {
          "$ref": "#/definitions/ApplicationPubSubAWSIoTProvider"
        },
        "base_topic": {
          "type": "string",
          "description": "Base topic name to which the messages topic is appended."
        },
        "downlink_push": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage",
          "description": "The topic to which the Application Server subscribes for downlink queue push operations."
        },
        "downlink_replace": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage",
          "description": "The topic to which the Application Server subscribes for downlink queue replace operations."
        },
        "uplink_message": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "uplink_normalized": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "join_accept": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_ack": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_nack": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_sent": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_failed": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_queued": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "downlink_queue_invalidated": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "location_solved": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        },
        "service_data": {
          "$ref": "#/definitions/v3ApplicationPubSubMessage"
        }
      }
    },
    "v3ApplicationPubSubFormats": {
      "type": "object",
      "properties": {
        "formats": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Format and description."
        }
      }
    },
    "v3ApplicationPubSubIdentifiers": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "pub_sub_id": {
          "type": "string"
        }
      }
    },
    "v3ApplicationPubSubMessage": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "The topic on which the Application Server publishes or receives the messages."
        }
      }
    },
    "v3ApplicationPubSubRegistrySetBody": {
      "type": "object",
      "properties": {
        "pubsub": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "pub_sub_id": {
                  "type": "string"
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "format": {
              "type": "string",
              "description": "The format to use for the body.\nSupported values depend on the Application Server configuration."
            },
            "nats": {
              "$ref": "#/definitions/ApplicationPubSubNATSProvider"
            },
            "mqtt": {
              "$ref": "#/definitions/ApplicationPubSubMQTTProvider"
            },
            "aws_iot": {
              "$ref": "#/definitions/ApplicationPubSubAWSIoTProvider"
            },
            "base_topic": {
              "type": "string",
              "description": "Base topic name to which the messages topic is appended."
            },
            "downlink_push": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage",
              "description": "The topic to which the Application Server subscribes for downlink queue push operations."
            },
            "downlink_replace": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage",
              "description": "The topic to which the Application Server subscribes for downlink queue replace operations."
            },
            "uplink_message": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "uplink_normalized": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "join_accept": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_ack": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_nack": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_sent": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_failed": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_queued": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "downlink_queue_invalidated": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "location_solved": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            },
            "service_data": {
              "$ref": "#/definitions/v3ApplicationPubSubMessage"
            }
          }
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3ApplicationPubSubs": {
      "type": "object",
      "properties": {
        "pubsubs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationPubSub"
          }
        }
      }
    },
    "v3ApplicationRegistryCreateBody": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/v3Application"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "type": "object"
            },
            "user_ids": {
              "$ref": "#/definitions/v3UserIdentifiers"
            }
          },
          "description": "Collaborator to grant all rights on the newly created application.",
          "title": "Collaborator to grant all rights on the newly created application."
        }
      }
    },
    "v3ApplicationRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "application": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "description": "The identifiers of the application. These are public and can be seen by any authenticated user in the network.",
              "title": "The identifiers of the application. These are public and can be seen by any authenticated user in the network."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the application was created. This information is public and can be seen by any authenticated user in the network."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the application was last updated. This information is public and can be seen by any authenticated user in the network."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the application was deleted. This information is public and can be seen by any authenticated user in the network."
            },
            "name": {
              "type": "string",
              "description": "The name of the application."
            },
            "description": {
              "type": "string",
              "description": "A description for the application."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this application. Typically used for organizing applications or for storing integration-specific data."
            },
            "contact_info": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ContactInfo"
              },
              "description": "Contact information for this application. Typically used to indicate who to contact with technical/security questions about the application.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
            },
            "administrative_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "technical_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this application is supposed to be registered.\nIf set, this fields indicates where end devices for this application should be registered.\n\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "dev_eui_counter": {
              "type": "integer",
              "format": "int64"
            }
          },
          "description": "Application is the message that defines an Application in the network."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the application fields that should be updated."
        }
      }
    },
    "v3ApplicationServiceData": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "v3ApplicationUp": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when the Application Server received the message."
        },
        "uplink_message": {
          "$ref": "#/definitions/v3ApplicationUplink"
        },
        "uplink_normalized": {
          "$ref": "#/definitions/v3ApplicationUplinkNormalized"
        },
        "join_accept": {
          "$ref": "#/definitions/v3ApplicationJoinAccept"
        },
        "downlink_ack": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_nack": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_sent": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_failed": {
          "$ref": "#/definitions/v3ApplicationDownlinkFailed"
        },
        "downlink_queued": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        },
        "downlink_queue_invalidated": {
          "$ref": "#/definitions/v3ApplicationInvalidatedDownlinks"
        },
        "location_solved": {
          "$ref": "#/definitions/v3ApplicationLocation"
        },
        "service_data": {
          "$ref": "#/definitions/v3ApplicationServiceData"
        },
        "simulated": {
          "type": "boolean",
          "description": "Signals if the message is coming from the Network Server or is simulated.\nThe Application Server automatically sets this field, and callers must not manually set it."
        }
      },
      "description": "Application uplink message."
    },
    "v3ApplicationUplink": {
      "type": "object",
      "properties": {
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Join Server issued identifier for the session keys used by this uplink."
        },
        "f_port": {
          "type": "integer",
          "format": "int64",
          "description": "LoRaWAN FPort of the uplink message."
        },
        "f_cnt": {
          "type": "integer",
          "format": "int64",
          "description": "LoRaWAN FCntUp of the uplink message."
        },
        "frm_payload": {
          "type": "string",
          "format": "byte",
          "description": "The frame payload of the uplink message.\nThe payload is still encrypted if the skip_payload_crypto field of the EndDevice\nis true, which is indicated by the presence of the app_s_key field."
        },
        "decoded_payload": {
          "type": "object",
          "description": "The decoded frame payload of the uplink message.\nThis field is set by the message processor that is configured for the end device (see formatters) or application (see default_formatters)."
        },
        "decoded_payload_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Warnings generated by the message processor while decoding the frm_payload."
        },
        "normalized_payload": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "The normalized frame payload of the uplink message.\nThis field is set by the message processor that is configured for the end device (see formatters) or application (see default_formatters).\nIf the message processor is a custom script, there is no uplink normalizer script and the decoded output is valid\nnormalized payload, this field contains the decoded payload."
        },
        "normalized_payload_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Warnings generated by the message processor while normalizing the decoded payload."
        },
        "rx_metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3RxMetadata"
          },
          "description": "A list of metadata for each antenna of each gateway that received this message."
        },
        "settings": {
          "$ref": "#/definitions/lorawanv3TxSettings",
          "description": "Transmission settings used by the end device."
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when the Network Server received the message."
        },
        "app_s_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The AppSKey of the current session.\nThis field is only present if the skip_payload_crypto field of the EndDevice\nis true.\nCan be used to decrypt uplink payloads and encrypt downlink payloads."
        },
        "last_a_f_cnt_down": {
          "type": "integer",
          "format": "int64",
          "description": "The last AFCntDown of the current session.\nThis field is only present if the skip_payload_crypto field of the EndDevice\nis true.\nCan be used with app_s_key to encrypt downlink payloads."
        },
        "confirmed": {
          "type": "boolean",
          "description": "Indicates whether the end device used confirmed data uplink."
        },
        "consumed_airtime": {
          "type": "string",
          "description": "Consumed airtime for the transmission of the uplink message. Calculated by Network Server using the raw payload size and the transmission settings."
        },
        "packet_error_rate": {
          "type": "number",
          "format": "float",
          "description": "Packet error rate of the recent uplinks in the current session.\nCalculated by the Network Server. The value is defined in the [0, 1] interval."
        },
        "locations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/lorawanv3Location"
          },
          "description": "End device location metadata, set by the Application Server while handling the message."
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
          "description": "End device version identifiers, set by the Application Server while handling the message."
        },
        "network_ids": {
          "$ref": "#/definitions/v3NetworkIdentifiers",
          "description": "Network identifiers, set by the Network Server that handles the message."
        }
      }
    },
    "v3ApplicationUplinkNormalized": {
      "type": "object",
      "properties": {
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Join Server issued identifier for the session keys used by this uplink."
        },
        "f_port": {
          "type": "integer",
          "format": "int64",
          "description": "LoRaWAN FPort of the uplink message."
        },
        "f_cnt": {
          "type": "integer",
          "format": "int64",
          "description": "LoRaWAN FCntUp of the uplink message."
        },
        "frm_payload": {
          "type": "string",
          "format": "byte",
          "description": "The frame payload of the uplink message.\nThis field is always decrypted with AppSKey."
        },
        "normalized_payload": {
          "type": "object",
          "description": "The normalized frame payload of the uplink message.\nThis field is set for each item in normalized_payload in the corresponding ApplicationUplink message."
        },
        "normalized_payload_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This field is set to normalized_payload_warnings in the corresponding ApplicationUplink message."
        },
        "rx_metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3RxMetadata"
          },
          "description": "A list of metadata for each antenna of each gateway that received this message."
        },
        "settings": {
          "$ref": "#/definitions/lorawanv3TxSettings",
          "description": "Transmission settings used by the end device."
        },
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Server time when the Network Server received the message."
        },
        "confirmed": {
          "type": "boolean",
          "description": "Indicates whether the end device used confirmed data uplink."
        },
        "consumed_airtime": {
          "type": "string",
          "description": "Consumed airtime for the transmission of the uplink message. Calculated by Network Server using the raw payload size and the transmission settings."
        },
        "locations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/lorawanv3Location"
          },
          "description": "End device location metadata, set by the Application Server while handling the message."
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
          "description": "End device version identifiers, set by the Application Server while handling the message."
        },
        "network_ids": {
          "$ref": "#/definitions/v3NetworkIdentifiers",
          "description": "Network identifiers, set by the Network Server that handles the message."
        }
      }
    },
    "v3ApplicationWebhook": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationWebhookIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "base_url": {
          "type": "string",
          "description": "Base URL to which the message's path is appended."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "HTTP headers to use."
        },
        "format": {
          "type": "string",
          "description": "The format to use for the body.\nSupported values depend on the Application Server configuration."
        },
        "template_ids": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateIdentifiers",
          "description": "The ID of the template that was used to create the Webhook."
        },
        "template_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The value of the fields used by the template. Maps field.id to the value."
        },
        "downlink_api_key": {
          "type": "string",
          "description": "The API key to be used for downlink queue operations.\nThe field is provided for convenience reasons, and can contain API keys with additional rights (albeit this is discouraged)."
        },
        "uplink_message": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "uplink_normalized": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "join_accept": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_ack": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_nack": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_sent": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_failed": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_queued": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "downlink_queue_invalidated": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "location_solved": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "service_data": {
          "$ref": "#/definitions/v3ApplicationWebhookMessage"
        },
        "health_status": {
          "$ref": "#/definitions/v3ApplicationWebhookHealth"
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3ApplicationWebhookFormats": {
      "type": "object",
      "properties": {
        "formats": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Format and description."
        }
      }
    },
    "v3ApplicationWebhookHealth": {
      "type": "object",
      "properties": {
        "healthy": {
          "$ref": "#/definitions/ApplicationWebhookHealthWebhookHealthStatusHealthy"
        },
        "unhealthy": {
          "$ref": "#/definitions/ApplicationWebhookHealthWebhookHealthStatusUnhealthy"
        }
      }
    },
    "v3ApplicationWebhookIdentifiers": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "webhook_id": {
          "type": "string"
        }
      }
    },
    "v3ApplicationWebhookMessage": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to append to the base URL."
        }
      }
    },
    "v3ApplicationWebhookRegistrySetBody": {
      "type": "object",
      "properties": {
        "webhook": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "webhook_id": {
                  "type": "string"
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "base_url": {
              "type": "string",
              "description": "Base URL to which the message's path is appended."
            },
            "headers": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "HTTP headers to use."
            },
            "format": {
              "type": "string",
              "description": "The format to use for the body.\nSupported values depend on the Application Server configuration."
            },
            "template_ids": {
              "$ref": "#/definitions/v3ApplicationWebhookTemplateIdentifiers",
              "description": "The ID of the template that was used to create the Webhook."
            },
            "template_fields": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "The value of the fields used by the template. Maps field.id to the value."
            },
            "downlink_api_key": {
              "type": "string",
              "description": "The API key to be used for downlink queue operations.\nThe field is provided for convenience reasons, and can contain API keys with additional rights (albeit this is discouraged)."
            },
            "uplink_message": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "uplink_normalized": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "join_accept": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_ack": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_nack": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_sent": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_failed": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_queued": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "downlink_queue_invalidated": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "location_solved": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "service_data": {
              "$ref": "#/definitions/v3ApplicationWebhookMessage"
            },
            "health_status": {
              "$ref": "#/definitions/v3ApplicationWebhookHealth"
            },
            "field_mask": {
              "type": "string"
            }
          }
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3ApplicationWebhookTemplate": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateIdentifiers"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "info_url": {
          "type": "string"
        },
        "documentation_url": {
          "type": "string"
        },
        "base_url": {
          "type": "string",
          "description": "The base URL of the template. Can contain template fields, in RFC 6570 format."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The HTTP headers used by the template. Both the key and the value can contain template fields."
        },
        "format": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationWebhookTemplateField"
          }
        },
        "create_downlink_api_key": {
          "type": "boolean",
          "description": "Control the creation of the downlink queue operations API key."
        },
        "uplink_message": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "uplink_normalized": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "join_accept": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_ack": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_nack": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_sent": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_failed": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_queued": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "downlink_queue_invalidated": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "location_solved": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "service_data": {
          "$ref": "#/definitions/v3ApplicationWebhookTemplateMessage"
        },
        "field_mask": {
          "type": "string"
        }
      }
    },
    "v3ApplicationWebhookTemplateField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "secret": {
          "type": "boolean",
          "description": "Secret decides if the field should be shown in plain-text or should stay hidden."
        },
        "default_value": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "description": "ApplicationWebhookTemplateField represents a custom field that needs to be filled by the user in order to use the template.\nA field can be an API key, an username or password, or any custom platform specific field (such as region).\nThe fields are meant to be replaced inside the URLs and headers when the webhook is created."
    },
    "v3ApplicationWebhookTemplateIdentifiers": {
      "type": "object",
      "properties": {
        "template_id": {
          "type": "string"
        }
      }
    },
    "v3ApplicationWebhookTemplateMessage": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to append to the base URL. Can contain template fields, in RFC 6570 format."
        }
      }
    },
    "v3ApplicationWebhookTemplates": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationWebhookTemplate"
          }
        }
      }
    },
    "v3ApplicationWebhooks": {
      "type": "object",
      "properties": {
        "webhooks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationWebhook"
          }
        }
      }
    },
    "v3Applications": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Application"
          }
        }
      }
    },
    "v3AsConfiguration": {
      "type": "object",
      "properties": {
        "pubsub": {
          "$ref": "#/definitions/AsConfigurationPubSub"
        },
        "webhooks": {
          "$ref": "#/definitions/AsConfigurationWebhooks"
        }
      },
      "description": "Application Server configuration."
    },
    "v3AsEndDeviceRegistrySetBody": {
      "type": "object",
      "properties": {
        "end_device": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string"
                },
                "application_ids": {
                  "type": "object"
                },
                "dev_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN DevEUI."
                },
                "join_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                },
                "dev_addr": {
                  "type": "string",
                  "format": "string",
                  "example": "2600ABCD",
                  "description": "The LoRaWAN DevAddr."
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Friendly name of the device. Stored in Entity Registry."
            },
            "description": {
              "type": "string",
              "description": "Description of the device. Stored in Entity Registry."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
            },
            "version_ids": {
              "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
              "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
            },
            "service_profile_id": {
              "type": "string",
              "description": "Default service profile. Stored in Entity Registry."
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "network_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
            },
            "application_server_id": {
              "type": "string",
              "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "locations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/lorawanv3Location"
              },
              "description": "Location of the device. Stored in Entity Registry."
            },
            "picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "Stored in Entity Registry."
            },
            "supports_class_b": {
              "type": "boolean",
              "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_class_c": {
              "type": "boolean",
              "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_version": {
              "$ref": "#/definitions/v3MACVersion",
              "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_phy_version": {
              "$ref": "#/definitions/v3PHYVersion",
              "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "min_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "max_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_join": {
              "type": "boolean",
              "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "resets_join_nonces": {
              "type": "boolean",
              "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "root_keys": {
              "$ref": "#/definitions/v3RootKeys",
              "description": "Device root keys. Stored in Join Server."
            },
            "net_id": {
              "type": "string",
              "format": "string",
              "example": "000013",
              "description": "Home NetID. Stored in Join Server."
            },
            "mac_settings": {
              "$ref": "#/definitions/v3MACSettings",
              "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
            },
            "mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "MAC state of the device. Stored in Network Server."
            },
            "pending_mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "Pending MAC state of the device. Stored in Network Server."
            },
            "session": {
              "$ref": "#/definitions/v3Session",
              "description": "Current session of the device. Stored in Network Server and Application Server."
            },
            "pending_session": {
              "$ref": "#/definitions/v3Session",
              "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
            },
            "last_dev_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
            },
            "used_dev_nonces": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
            },
            "last_join_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
            },
            "last_rj_count_0": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
            },
            "last_rj_count_1": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
            },
            "last_dev_status_received_at": {
              "type": "string",
              "format": "date-time",
              "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
            },
            "power_state": {
              "$ref": "#/definitions/v3PowerState",
              "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
            },
            "battery_percentage": {
              "type": "number",
              "format": "float",
              "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
            },
            "downlink_margin": {
              "type": "integer",
              "format": "int32",
              "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
            },
            "queued_application_downlinks": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ApplicationDownlink"
              },
              "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
            },
            "formatters": {
              "$ref": "#/definitions/v3MessagePayloadFormatters",
              "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
            },
            "provisioner_id": {
              "type": "string",
              "description": "ID of the provisioner. Stored in Join Server."
            },
            "provisioning_data": {
              "type": "object",
              "description": "Vendor-specific provisioning data. Stored in Join Server."
            },
            "multicast": {
              "type": "boolean",
              "description": "Indicates whether this device represents a multicast group."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
              "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
            },
            "skip_payload_crypto": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
            },
            "skip_payload_crypto_override": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
            },
            "activated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
            },
            "last_seen_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
            },
            "serial_number": {
              "type": "string"
            },
            "lora_alliance_profile_ids": {
              "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
            }
          },
          "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the end device fields that should be updated.\nSee the API reference for which fields can be set on the different services."
        }
      }
    },
    "v3AuthInfoResponse": {
      "type": "object",
      "properties": {
        "api_key": {
          "$ref": "#/definitions/AuthInfoResponseAPIKeyAccess"
        },
        "oauth_access_token": {
          "$ref": "#/definitions/v3OAuthAccessToken"
        },
        "user_session": {
          "$ref": "#/definitions/v3UserSession",
          "description": "Warning: A user authorized by session cookie will be granted all\ncurrent and future rights. When using this auth type, the respective\nhandlers need to ensure thorough CSRF and CORS protection using\nappropriate middleware."
        },
        "gateway_token": {
          "$ref": "#/definitions/v3AuthInfoResponseGatewayToken"
        },
        "universal_rights": {
          "$ref": "#/definitions/v3Rights"
        },
        "is_admin": {
          "type": "boolean"
        }
      }
    },
    "v3AuthInfoResponseGatewayToken": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        }
      }
    },
    "v3BandDescription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "beacon": {
          "$ref": "#/definitions/BandDescriptionBeacon"
        },
        "ping_slot_frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "max_uplink_channels": {
          "type": "integer",
          "format": "int64"
        },
        "uplink_channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3BandDescriptionChannel"
          }
        },
        "max_downlink_channels": {
          "type": "integer",
          "format": "int64"
        },
        "downlink_channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3BandDescriptionChannel"
          }
        },
        "sub_bands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BandDescriptionSubBandParameters"
          }
        },
        "data_rates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BandDescriptionBandDataRate"
          }
        },
        "freq_multiplier": {
          "type": "string",
          "format": "uint64"
        },
        "implements_cf_list": {
          "type": "boolean"
        },
        "cf_list_type": {
          "$ref": "#/definitions/v3CFListType"
        },
        "receive_delay_1": {
          "type": "string"
        },
        "receive_delay_2": {
          "type": "string"
        },
        "join_accept_delay_1": {
          "type": "string"
        },
        "join_accept_delay_2": {
          "type": "string"
        },
        "max_fcnt_gap": {
          "type": "string",
          "format": "uint64"
        },
        "supports_dynamic_adr": {
          "type": "boolean"
        },
        "adr_ack_limit": {
          "$ref": "#/definitions/v3ADRAckLimitExponent"
        },
        "min_retransmit_timeout": {
          "type": "string"
        },
        "max_retransmit_timeout": {
          "type": "string"
        },
        "tx_offset": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "max_adr_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "relay_forward_delay": {
          "type": "string"
        },
        "relay_receive_delay": {
          "type": "string"
        },
        "tx_param_setup_req_support": {
          "type": "boolean"
        },
        "default_max_eirp": {
          "type": "number",
          "format": "float"
        },
        "default_rx2_parameters": {
          "$ref": "#/definitions/BandDescriptionRx2Parameters"
        },
        "boot_dwell_time": {
          "$ref": "#/definitions/BandDescriptionDwellTime"
        },
        "relay": {
          "$ref": "#/definitions/v3BandDescriptionRelayParameters"
        }
      }
    },
    "v3BandDescriptionChannel": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64"
        },
        "min_data_rate": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "max_data_rate": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "v3BandDescriptionRelayParameters": {
      "type": "object",
      "properties": {
        "wor_channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/BandDescriptionRelayParametersRelayWORChannel"
          }
        }
      }
    },
    "v3BatchGetGatewayConnectionStatsRequest": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the gateway stats fields that should be returned.\nThis mask will be applied on each entry returned."
        }
      }
    },
    "v3BatchGetGatewayConnectionStatsResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v3GatewayConnectionStats"
          },
          "description": "The map key is the gateway identifier."
        }
      }
    },
    "v3BatchUnclaimEndDevicesResponse": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "failed": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v3ErrorDetails"
          },
          "description": "End devices that could not be unclaimed.\nThe key is the device ID."
        }
      }
    },
    "v3CFList": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v3CFListType"
        },
        "freq": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Frequencies to be broadcasted, in hecto-Hz.\nThese values are broadcasted as 24 bits unsigned integers.\nThis field should not contain default values."
        },
        "ch_masks": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "description": "ChMasks controlling the channels to be used.\nLength of this field must be equal to the amount of uplink channels\ndefined by the selected frequency plan."
        }
      }
    },
    "v3CFListType": {
      "type": "string",
      "enum": [
        "FREQUENCIES",
        "CHANNEL_MASKS"
      ],
      "default": "FREQUENCIES"
    },
    "v3CUPSRedirection": {
      "type": "object",
      "properties": {
        "target_cups_uri": {
          "type": "string",
          "description": "CUPS URI for LoRa Basics Station CUPS redirection."
        },
        "current_gateway_key": {
          "type": "string",
          "description": "The key set in the gateway to authenticate itself."
        },
        "target_cups_trust": {
          "type": "string",
          "format": "byte",
          "description": "Optional PEM encoded CA Root certificate. If this field is empty, DCS will attempt to dial the Target CUPS server and fetch the CA."
        },
        "client_tls": {
          "$ref": "#/definitions/CUPSRedirectionClientTLS",
          "title": "TODO: Support mTLS (https://github.com/TheThingsNetwork/lorawan-stack/issues/137)"
        },
        "auth_token": {
          "type": "string",
          "description": "The Device Claiming Server will fill this field with a The Things Stack API Key."
        }
      },
      "description": "DEPRECATED: This message is deprecated and will be removed in a future version of The Things Stack."
    },
    "v3ClaimEndDeviceRequest": {
      "type": "object",
      "properties": {
        "authenticated_identifiers": {
          "$ref": "#/definitions/v3ClaimEndDeviceRequestAuthenticatedIdentifiers",
          "description": "Authenticated identifiers."
        },
        "qr_code": {
          "type": "string",
          "format": "byte",
          "description": "Raw QR code contents."
        },
        "target_application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers",
          "description": "Application identifiers of the target end device."
        },
        "target_device_id": {
          "type": "string",
          "description": "End device ID of the target end device. If empty, use the source device ID."
        }
      }
    },
    "v3ClaimEndDeviceRequestAuthenticatedIdentifiers": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "JoinEUI (or AppEUI) of the device to claim."
        },
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "DevEUI of the device to claim."
        },
        "authentication_code": {
          "type": "string",
          "description": "Authentication code to prove ownership.\nIn the LoRa Alliance TR005 specification, this equals the OwnerToken."
        }
      }
    },
    "v3ClaimGatewayRequest": {
      "type": "object",
      "properties": {
        "authenticated_identifiers": {
          "$ref": "#/definitions/v3ClaimGatewayRequestAuthenticatedIdentifiers"
        },
        "qr_code": {
          "type": "string",
          "format": "byte"
        },
        "collaborator": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers",
          "description": "Collaborator to grant all rights on the target gateway."
        },
        "target_gateway_id": {
          "type": "string",
          "description": "Gateway ID for the target gateway. This must be a unique value.\nIf this is not set, the target ID for the target gateway will be set to `\u003cgateway-eui\u003e`."
        },
        "target_gateway_server_address": {
          "type": "string",
          "description": "Target Gateway Server Address for the target gateway."
        },
        "cups_redirection": {
          "$ref": "#/definitions/v3CUPSRedirection",
          "description": "Parameters to set CUPS redirection for the gateway.\nDEPRECATED: This field is deprecated and will be removed in a future version of The Things Stack."
        },
        "target_frequency_plan_id": {
          "type": "string",
          "description": "Frequency plan ID of the target gateway.\nTODO: Remove this field (https://github.com/TheThingsIndustries/lorawan-stack/issues/4024)\nDEPRECATED: Use target_frequency_plan_ids instead."
        },
        "target_frequency_plan_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Frequency plan IDs of the target gateway."
        }
      }
    },
    "v3ClaimGatewayRequestAuthenticatedIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "authentication_code": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3Class": {
      "type": "string",
      "enum": [
        "CLASS_A",
        "CLASS_B",
        "CLASS_C"
      ],
      "default": "CLASS_A"
    },
    "v3ClassBCGatewayIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "antenna_index": {
          "type": "integer",
          "format": "int64"
        },
        "group_index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3Client": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3ClientIdentifiers",
          "description": "The identifiers of the OAuth client. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the OAuth client was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the OAuth client was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the OAuth client was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the OAuth client. This information is public and can be seen by any authenticated user in the network."
        },
        "description": {
          "type": "string",
          "description": "A description for the OAuth client. This information is public and can be seen by any authenticated user in the network."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this client. Typically used for organizing clients or for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this client. Typically used to indicate who to contact with technical/security questions about the application.\nThis information is public and can be seen by any authenticated user in the network.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "secret": {
          "type": "string",
          "description": "The client secret is only visible to collaborators of the client."
        },
        "redirect_uris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The allowed redirect URIs against which authorization requests are checked.\nIf the authorization request does not pass a redirect URI, the first one\nfrom this list is taken.\nThis information is public and can be seen by any authenticated user in the network."
        },
        "logout_redirect_uris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The allowed logout redirect URIs against which client initiated logout\nrequests are checked. If the authorization request does not pass a redirect\nURI, the first one from this list is taken.\nThis information is public and can be seen by any authenticated user in the network."
        },
        "state": {
          "$ref": "#/definitions/v3State",
          "description": "The reviewing state of the client.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins.\nIf state_description is not updated when updating state, state_description is cleared."
        },
        "state_description": {
          "type": "string",
          "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
        },
        "skip_authorization": {
          "type": "boolean",
          "description": "If set, the authorization page will be skipped.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
        },
        "endorsed": {
          "type": "boolean",
          "description": "If set, the authorization page will show endorsement.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
        },
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3GrantType"
          },
          "description": "OAuth flows that can be used for the client to get a token.\nThis information is public and can be seen by any authenticated user in the network.\nAfter a client is created, this field can only be modified by admins."
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          },
          "description": "Rights denotes what rights the client will have access to.\nThis information is public and can be seen by any authenticated user in the network.\nUsers that previously authorized this client will have to re-authorize the\nclient after rights are added to this list."
        }
      },
      "description": "An OAuth client on the network."
    },
    "v3ClientAccessSetCollaboratorBody": {
      "type": "object",
      "properties": {
        "client_ids": {
          "type": "object"
        },
        "collaborator": {
          "$ref": "#/definitions/v3Collaborator"
        }
      }
    },
    "v3ClientIdentifiers": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        }
      }
    },
    "v3ClientRegistryCreateBody": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/v3Client"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "type": "object"
            },
            "user_ids": {
              "$ref": "#/definitions/v3UserIdentifiers"
            }
          },
          "description": "Collaborator to grant all rights on the newly created client.",
          "title": "Collaborator to grant all rights on the newly created client."
        }
      }
    },
    "v3ClientRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "client": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "description": "The identifiers of the OAuth client. These are public and can be seen by any authenticated user in the network.",
              "title": "The identifiers of the OAuth client. These are public and can be seen by any authenticated user in the network."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the OAuth client was created. This information is public and can be seen by any authenticated user in the network."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the OAuth client was last updated. This information is public and can be seen by any authenticated user in the network."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the OAuth client was deleted. This information is public and can be seen by any authenticated user in the network."
            },
            "name": {
              "type": "string",
              "description": "The name of the OAuth client. This information is public and can be seen by any authenticated user in the network."
            },
            "description": {
              "type": "string",
              "description": "A description for the OAuth client. This information is public and can be seen by any authenticated user in the network."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this client. Typically used for organizing clients or for storing integration-specific data."
            },
            "contact_info": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ContactInfo"
              },
              "description": "Contact information for this client. Typically used to indicate who to contact with technical/security questions about the application.\nThis information is public and can be seen by any authenticated user in the network.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
            },
            "administrative_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "technical_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "secret": {
              "type": "string",
              "description": "The client secret is only visible to collaborators of the client."
            },
            "redirect_uris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The allowed redirect URIs against which authorization requests are checked.\nIf the authorization request does not pass a redirect URI, the first one\nfrom this list is taken.\nThis information is public and can be seen by any authenticated user in the network."
            },
            "logout_redirect_uris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The allowed logout redirect URIs against which client initiated logout\nrequests are checked. If the authorization request does not pass a redirect\nURI, the first one from this list is taken.\nThis information is public and can be seen by any authenticated user in the network."
            },
            "state": {
              "$ref": "#/definitions/v3State",
              "description": "The reviewing state of the client.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins.\nIf state_description is not updated when updating state, state_description is cleared."
            },
            "state_description": {
              "type": "string",
              "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
            },
            "skip_authorization": {
              "type": "boolean",
              "description": "If set, the authorization page will be skipped.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
            },
            "endorsed": {
              "type": "boolean",
              "description": "If set, the authorization page will show endorsement.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
            },
            "grants": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3GrantType"
              },
              "description": "OAuth flows that can be used for the client to get a token.\nThis information is public and can be seen by any authenticated user in the network.\nAfter a client is created, this field can only be modified by admins."
            },
            "rights": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3Right"
              },
              "description": "Rights denotes what rights the client will have access to.\nThis information is public and can be seen by any authenticated user in the network.\nUsers that previously authorized this client will have to re-authorize the\nclient after rights are added to this list."
            }
          },
          "description": "An OAuth client on the network."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the client fields that should be updated."
        }
      }
    },
    "v3Clients": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Client"
          }
        }
      }
    },
    "v3Collaborator": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        }
      }
    },
    "v3Collaborators": {
      "type": "object",
      "properties": {
        "collaborators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Collaborator"
          }
        }
      }
    },
    "v3ConcentratorConfig": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ConcentratorConfigChannel"
          }
        },
        "lora_standard_channel": {
          "$ref": "#/definitions/ConcentratorConfigLoRaStandardChannel"
        },
        "fsk_channel": {
          "$ref": "#/definitions/ConcentratorConfigFSKChannel"
        },
        "lbt": {
          "$ref": "#/definitions/ConcentratorConfigLBTConfiguration"
        },
        "ping_slot": {
          "$ref": "#/definitions/v3ConcentratorConfigChannel"
        },
        "radios": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayRadio"
          }
        },
        "clock_source": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3ConcentratorConfigChannel": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz)."
        },
        "radio": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3ConsoleTheme": {
      "type": "string",
      "enum": [
        "CONSOLE_THEME_SYSTEM",
        "CONSOLE_THEME_LIGHT",
        "CONSOLE_THEME_DARK"
      ],
      "default": "CONSOLE_THEME_SYSTEM",
      "description": "ConsoleTheme is the theme of the Console.\n\n - CONSOLE_THEME_SYSTEM: The user prefers the system mode.\n - CONSOLE_THEME_LIGHT: The user prefers the light mode.\n - CONSOLE_THEME_DARK: The user prefers the dark mode."
    },
    "v3ContactInfo": {
      "type": "object",
      "properties": {
        "contact_type": {
          "$ref": "#/definitions/v3ContactType"
        },
        "contact_method": {
          "$ref": "#/definitions/v3ContactMethod"
        },
        "value": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "validated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3ContactMethod": {
      "type": "string",
      "enum": [
        "CONTACT_METHOD_OTHER",
        "CONTACT_METHOD_EMAIL",
        "CONTACT_METHOD_PHONE"
      ],
      "default": "CONTACT_METHOD_OTHER"
    },
    "v3ContactType": {
      "type": "string",
      "enum": [
        "CONTACT_TYPE_OTHER",
        "CONTACT_TYPE_ABUSE",
        "CONTACT_TYPE_BILLING",
        "CONTACT_TYPE_TECHNICAL"
      ],
      "default": "CONTACT_TYPE_OTHER"
    },
    "v3ConvertEndDeviceTemplateRequest": {
      "type": "object",
      "properties": {
        "format_id": {
          "type": "string",
          "description": "ID of the format."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Data to convert."
        },
        "end_device_version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
          "description": "End device profile identifiers."
        }
      }
    },
    "v3CreateLoginTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "The token that can be used for logging in as the user.\nThis field is only present if a token was created by an admin user for a non-admin user."
        }
      }
    },
    "v3CreateNotificationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v3CreateRelayResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "Relay configuration."
        }
      }
    },
    "v3CreateRelayUplinkForwardingRuleResponse": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v3RelayUplinkForwardingRule",
          "description": "Uplink forwarding rule."
        }
      }
    },
    "v3CreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v3User"
        },
        "invitation_token": {
          "type": "string",
          "description": "The invitation token that was sent to the user (some networks require an invitation in order to register new users)."
        }
      }
    },
    "v3CryptoServicePayloadRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers",
          "description": "End device identifiers for the cryptographic operation."
        },
        "lorawan_version": {
          "$ref": "#/definitions/v3MACVersion",
          "description": "LoRaWAN version to use for the cryptographic operation."
        },
        "payload": {
          "type": "string",
          "format": "byte",
          "description": "Raw input payload."
        },
        "provisioner_id": {
          "type": "string",
          "description": "Provisioner that provisioned the end device."
        },
        "provisioning_data": {
          "type": "object",
          "description": "Provisioning data for the provisioner."
        }
      }
    },
    "v3CryptoServicePayloadResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string",
          "format": "byte",
          "description": "Raw output payload."
        }
      }
    },
    "v3DLSettings": {
      "type": "object",
      "properties": {
        "rx1_dr_offset": {
          "$ref": "#/definitions/v3DataRateOffset"
        },
        "rx2_dr": {
          "$ref": "#/definitions/v3DataRateIndex"
        },
        "opt_neg": {
          "type": "boolean",
          "description": "OptNeg is set if Network Server implements LoRaWAN 1.1 or greater."
        }
      }
    },
    "v3DashboardLayout": {
      "type": "string",
      "enum": [
        "DASHBOARD_LAYOUT_TABLE",
        "DASHBOARD_LAYOUT_LIST",
        "DASHBOARD_LAYOUT_GRID"
      ],
      "default": "DASHBOARD_LAYOUT_TABLE",
      "description": "DashboardLayout is a set of possible layout values to be used in the Console."
    },
    "v3DataRate": {
      "type": "object",
      "properties": {
        "lora": {
          "$ref": "#/definitions/v3LoRaDataRate"
        },
        "fsk": {
          "$ref": "#/definitions/v3FSKDataRate"
        },
        "lrfhss": {
          "$ref": "#/definitions/v3LRFHSSDataRate"
        }
      }
    },
    "v3DataRateIndex": {
      "type": "string",
      "enum": [
        "DATA_RATE_0",
        "DATA_RATE_1",
        "DATA_RATE_2",
        "DATA_RATE_3",
        "DATA_RATE_4",
        "DATA_RATE_5",
        "DATA_RATE_6",
        "DATA_RATE_7",
        "DATA_RATE_8",
        "DATA_RATE_9",
        "DATA_RATE_10",
        "DATA_RATE_11",
        "DATA_RATE_12",
        "DATA_RATE_13",
        "DATA_RATE_14",
        "DATA_RATE_15"
      ],
      "default": "DATA_RATE_0"
    },
    "v3DataRateIndexValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3DataRateIndex"
        }
      }
    },
    "v3DataRateOffset": {
      "type": "string",
      "enum": [
        "DATA_RATE_OFFSET_0",
        "DATA_RATE_OFFSET_1",
        "DATA_RATE_OFFSET_2",
        "DATA_RATE_OFFSET_3",
        "DATA_RATE_OFFSET_4",
        "DATA_RATE_OFFSET_5",
        "DATA_RATE_OFFSET_6",
        "DATA_RATE_OFFSET_7"
      ],
      "default": "DATA_RATE_OFFSET_0"
    },
    "v3DataRateOffsetValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3DataRateOffset"
        }
      }
    },
    "v3DecodeDownlinkResponse": {
      "type": "object",
      "properties": {
        "downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        }
      }
    },
    "v3DecodeUplinkResponse": {
      "type": "object",
      "properties": {
        "uplink": {
          "$ref": "#/definitions/v3ApplicationUplink"
        }
      }
    },
    "v3DecodedMessagePayload": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v3DeleteRelayResponse": {
      "type": "object"
    },
    "v3DeleteRelayUplinkForwardingRuleResponse": {
      "type": "object"
    },
    "v3DevAddrPrefix": {
      "type": "object",
      "properties": {
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD",
          "description": "DevAddr base."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "Number of most significant bits from dev_addr that are used as prefix."
        }
      }
    },
    "v3DeviceEIRP": {
      "type": "string",
      "enum": [
        "DEVICE_EIRP_8",
        "DEVICE_EIRP_10",
        "DEVICE_EIRP_12",
        "DEVICE_EIRP_13",
        "DEVICE_EIRP_14",
        "DEVICE_EIRP_16",
        "DEVICE_EIRP_18",
        "DEVICE_EIRP_20",
        "DEVICE_EIRP_21",
        "DEVICE_EIRP_24",
        "DEVICE_EIRP_26",
        "DEVICE_EIRP_27",
        "DEVICE_EIRP_29",
        "DEVICE_EIRP_30",
        "DEVICE_EIRP_33",
        "DEVICE_EIRP_36"
      ],
      "default": "DEVICE_EIRP_8",
      "description": " - DEVICE_EIRP_8: 8 dBm.\n - DEVICE_EIRP_10: 10 dBm.\n - DEVICE_EIRP_12: 12 dBm.\n - DEVICE_EIRP_13: 13 dBm.\n - DEVICE_EIRP_14: 14 dBm.\n - DEVICE_EIRP_16: 16 dBm.\n - DEVICE_EIRP_18: 18 dBm.\n - DEVICE_EIRP_20: 20 dBm.\n - DEVICE_EIRP_21: 21 dBm.\n - DEVICE_EIRP_24: 24 dBm.\n - DEVICE_EIRP_26: 26 dBm.\n - DEVICE_EIRP_27: 27 dBm.\n - DEVICE_EIRP_29: 29 dBm.\n - DEVICE_EIRP_30: 30 dBm.\n - DEVICE_EIRP_33: 33 dBm.\n - DEVICE_EIRP_36: 36 dBm."
    },
    "v3DeviceEIRPValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3DeviceEIRP"
        }
      }
    },
    "v3DownlinkPath": {
      "type": "object",
      "properties": {
        "uplink_token": {
          "type": "string",
          "format": "byte"
        },
        "fixed": {
          "$ref": "#/definitions/v3GatewayAntennaIdentifiers"
        }
      }
    },
    "v3DownlinkPathConstraint": {
      "type": "string",
      "enum": [
        "DOWNLINK_PATH_CONSTRAINT_NONE",
        "DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER",
        "DOWNLINK_PATH_CONSTRAINT_NEVER"
      ],
      "default": "DOWNLINK_PATH_CONSTRAINT_NONE",
      "description": " - DOWNLINK_PATH_CONSTRAINT_NONE: Indicates that the gateway can be selected for downlink without constraints by the Network Server.\n - DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER: Indicates that the gateway can be selected for downlink only if no other or better gateway can be selected.\n - DOWNLINK_PATH_CONSTRAINT_NEVER: Indicates that this gateway will never be selected for downlink, even if that results in no available downlink path."
    },
    "v3EmailValidation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3EncodeDownlinkResponse": {
      "type": "object",
      "properties": {
        "downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink"
        }
      }
    },
    "v3EncodedMessagePayload": {
      "type": "object",
      "properties": {
        "f_port": {
          "type": "integer",
          "format": "int64"
        },
        "frm_payload": {
          "type": "string",
          "format": "byte"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v3EndDevice": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "description": "Friendly name of the device. Stored in Entity Registry."
        },
        "description": {
          "type": "string",
          "description": "Description of the device. Stored in Entity Registry."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
        },
        "version_ids": {
          "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
          "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
        },
        "service_profile_id": {
          "type": "string",
          "description": "Default service profile. Stored in Entity Registry."
        },
        "network_server_address": {
          "type": "string",
          "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "network_server_kek_label": {
          "type": "string",
          "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
        },
        "application_server_address": {
          "type": "string",
          "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "application_server_kek_label": {
          "type": "string",
          "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
        },
        "application_server_id": {
          "type": "string",
          "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
        },
        "join_server_address": {
          "type": "string",
          "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "locations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/lorawanv3Location"
          },
          "description": "Location of the device. Stored in Entity Registry."
        },
        "picture": {
          "$ref": "#/definitions/v3Picture",
          "description": "Stored in Entity Registry."
        },
        "supports_class_b": {
          "type": "boolean",
          "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "supports_class_c": {
          "type": "boolean",
          "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "lorawan_version": {
          "$ref": "#/definitions/v3MACVersion",
          "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "lorawan_phy_version": {
          "$ref": "#/definitions/v3PHYVersion",
          "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "frequency_plan_id": {
          "type": "string",
          "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "min_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "max_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "supports_join": {
          "type": "boolean",
          "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "resets_join_nonces": {
          "type": "boolean",
          "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
        },
        "root_keys": {
          "$ref": "#/definitions/v3RootKeys",
          "description": "Device root keys. Stored in Join Server."
        },
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013",
          "description": "Home NetID. Stored in Join Server."
        },
        "mac_settings": {
          "$ref": "#/definitions/v3MACSettings",
          "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
        },
        "mac_state": {
          "$ref": "#/definitions/v3MACState",
          "description": "MAC state of the device. Stored in Network Server."
        },
        "pending_mac_state": {
          "$ref": "#/definitions/v3MACState",
          "description": "Pending MAC state of the device. Stored in Network Server."
        },
        "session": {
          "$ref": "#/definitions/v3Session",
          "description": "Current session of the device. Stored in Network Server and Application Server."
        },
        "pending_session": {
          "$ref": "#/definitions/v3Session",
          "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
        },
        "last_dev_nonce": {
          "type": "integer",
          "format": "int64",
          "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
        },
        "used_dev_nonces": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
        },
        "last_join_nonce": {
          "type": "integer",
          "format": "int64",
          "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
        },
        "last_rj_count_0": {
          "type": "integer",
          "format": "int64",
          "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
        },
        "last_rj_count_1": {
          "type": "integer",
          "format": "int64",
          "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
        },
        "last_dev_status_received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
        },
        "power_state": {
          "$ref": "#/definitions/v3PowerState",
          "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
        },
        "battery_percentage": {
          "type": "number",
          "format": "float",
          "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
        },
        "downlink_margin": {
          "type": "integer",
          "format": "int32",
          "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
        },
        "queued_application_downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          },
          "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
        },
        "formatters": {
          "$ref": "#/definitions/v3MessagePayloadFormatters",
          "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
        },
        "provisioner_id": {
          "type": "string",
          "description": "ID of the provisioner. Stored in Join Server."
        },
        "provisioning_data": {
          "type": "object",
          "description": "Vendor-specific provisioning data. Stored in Join Server."
        },
        "multicast": {
          "type": "boolean",
          "description": "Indicates whether this device represents a multicast group."
        },
        "claim_authentication_code": {
          "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
          "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
        },
        "skip_payload_crypto": {
          "type": "boolean",
          "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
        },
        "skip_payload_crypto_override": {
          "type": "boolean",
          "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
        },
        "activated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
        },
        "last_seen_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
        },
        "serial_number": {
          "type": "string"
        },
        "lora_alliance_profile_ids": {
          "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
        }
      },
      "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
    },
    "v3EndDeviceAuthenticationCode": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "valid_from": {
          "type": "string",
          "format": "date-time"
        },
        "valid_to": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Authentication code for end devices."
    },
    "v3EndDeviceBrand": {
      "type": "object",
      "properties": {
        "brand_id": {
          "type": "string",
          "description": "Brand identifier, as specified in the Device Repository."
        },
        "name": {
          "type": "string",
          "description": "Brand name."
        },
        "private_enterprise_number": {
          "type": "integer",
          "format": "int64",
          "description": "Private Enterprise Number (PEN) assigned by IANA."
        },
        "organization_unique_identifiers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Organization Unique Identifiers (OUI) assigned by IEEE."
        },
        "lora_alliance_vendor_id": {
          "type": "integer",
          "format": "int64",
          "description": "VendorID managed by the LoRa Alliance, as defined in TR005."
        },
        "website": {
          "type": "string",
          "description": "Brand website URL."
        },
        "email": {
          "type": "string",
          "description": "Contact email address."
        },
        "logo": {
          "type": "string",
          "description": "Path to brand logo."
        }
      }
    },
    "v3EndDeviceIdentifiers": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string"
        },
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "The LoRaWAN DevEUI."
        },
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
        },
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD",
          "description": "The LoRaWAN DevAddr."
        }
      }
    },
    "v3EndDeviceModel": {
      "type": "object",
      "properties": {
        "brand_id": {
          "type": "string",
          "description": "Brand identifier, as defined in the Device Repository."
        },
        "model_id": {
          "type": "string",
          "description": "Model identifier, as defined in the Device Repository."
        },
        "name": {
          "type": "string",
          "description": "Model name, as defined in the Device Repository."
        },
        "description": {
          "type": "string",
          "description": "Model description."
        },
        "hardware_versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EndDeviceModelHardwareVersion"
          },
          "description": "Available hardware versions."
        },
        "firmware_versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EndDeviceModelFirmwareVersion"
          },
          "description": "Available firmware versions."
        },
        "sensors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of sensors included in the device."
        },
        "dimensions": {
          "$ref": "#/definitions/EndDeviceModelDimensions",
          "description": "Device dimensions."
        },
        "weight": {
          "type": "number",
          "format": "float",
          "description": "Device weight (gram)."
        },
        "battery": {
          "$ref": "#/definitions/EndDeviceModelBattery",
          "description": "Device battery information."
        },
        "operating_conditions": {
          "$ref": "#/definitions/EndDeviceModelOperatingConditions",
          "description": "Device operating conditions."
        },
        "ip_code": {
          "type": "string",
          "description": "Device IP rating code."
        },
        "key_provisioning": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3KeyProvisioning"
          },
          "description": "Supported key provisioning methods."
        },
        "key_security": {
          "$ref": "#/definitions/v3KeySecurity",
          "description": "Device key security."
        },
        "photos": {
          "$ref": "#/definitions/EndDeviceModelPhotos",
          "description": "Device photos."
        },
        "videos": {
          "$ref": "#/definitions/EndDeviceModelVideos",
          "description": "Device videos."
        },
        "product_url": {
          "type": "string",
          "description": "Device information page URL."
        },
        "datasheet_url": {
          "type": "string",
          "description": "Device datasheet URL."
        },
        "resellers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EndDeviceModelReseller"
          },
          "description": "Reseller URLs."
        },
        "compliances": {
          "$ref": "#/definitions/EndDeviceModelCompliances",
          "description": "List of standards the device is compliant with."
        },
        "additional_radios": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of any additional radios included in the device."
        }
      }
    },
    "v3EndDeviceRegistryCreateBody": {
      "type": "object",
      "properties": {
        "end_device": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string"
                },
                "application_ids": {
                  "type": "object"
                },
                "dev_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN DevEUI."
                },
                "join_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                },
                "dev_addr": {
                  "type": "string",
                  "format": "string",
                  "example": "2600ABCD",
                  "description": "The LoRaWAN DevAddr."
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Friendly name of the device. Stored in Entity Registry."
            },
            "description": {
              "type": "string",
              "description": "Description of the device. Stored in Entity Registry."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
            },
            "version_ids": {
              "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
              "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
            },
            "service_profile_id": {
              "type": "string",
              "description": "Default service profile. Stored in Entity Registry."
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "network_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
            },
            "application_server_id": {
              "type": "string",
              "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "locations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/lorawanv3Location"
              },
              "description": "Location of the device. Stored in Entity Registry."
            },
            "picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "Stored in Entity Registry."
            },
            "supports_class_b": {
              "type": "boolean",
              "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_class_c": {
              "type": "boolean",
              "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_version": {
              "$ref": "#/definitions/v3MACVersion",
              "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_phy_version": {
              "$ref": "#/definitions/v3PHYVersion",
              "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "min_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "max_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_join": {
              "type": "boolean",
              "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "resets_join_nonces": {
              "type": "boolean",
              "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "root_keys": {
              "$ref": "#/definitions/v3RootKeys",
              "description": "Device root keys. Stored in Join Server."
            },
            "net_id": {
              "type": "string",
              "format": "string",
              "example": "000013",
              "description": "Home NetID. Stored in Join Server."
            },
            "mac_settings": {
              "$ref": "#/definitions/v3MACSettings",
              "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
            },
            "mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "MAC state of the device. Stored in Network Server."
            },
            "pending_mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "Pending MAC state of the device. Stored in Network Server."
            },
            "session": {
              "$ref": "#/definitions/v3Session",
              "description": "Current session of the device. Stored in Network Server and Application Server."
            },
            "pending_session": {
              "$ref": "#/definitions/v3Session",
              "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
            },
            "last_dev_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
            },
            "used_dev_nonces": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
            },
            "last_join_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
            },
            "last_rj_count_0": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
            },
            "last_rj_count_1": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
            },
            "last_dev_status_received_at": {
              "type": "string",
              "format": "date-time",
              "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
            },
            "power_state": {
              "$ref": "#/definitions/v3PowerState",
              "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
            },
            "battery_percentage": {
              "type": "number",
              "format": "float",
              "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
            },
            "downlink_margin": {
              "type": "integer",
              "format": "int32",
              "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
            },
            "queued_application_downlinks": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ApplicationDownlink"
              },
              "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
            },
            "formatters": {
              "$ref": "#/definitions/v3MessagePayloadFormatters",
              "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
            },
            "provisioner_id": {
              "type": "string",
              "description": "ID of the provisioner. Stored in Join Server."
            },
            "provisioning_data": {
              "type": "object",
              "description": "Vendor-specific provisioning data. Stored in Join Server."
            },
            "multicast": {
              "type": "boolean",
              "description": "Indicates whether this device represents a multicast group."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
              "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
            },
            "skip_payload_crypto": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
            },
            "skip_payload_crypto_override": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
            },
            "activated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
            },
            "last_seen_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
            },
            "serial_number": {
              "type": "string"
            },
            "lora_alliance_profile_ids": {
              "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
            }
          },
          "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
        }
      }
    },
    "v3EndDeviceRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "end_device": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "application_ids": {
                  "type": "object"
                },
                "dev_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN DevEUI."
                },
                "join_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                },
                "dev_addr": {
                  "type": "string",
                  "format": "string",
                  "example": "2600ABCD",
                  "description": "The LoRaWAN DevAddr."
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Friendly name of the device. Stored in Entity Registry."
            },
            "description": {
              "type": "string",
              "description": "Description of the device. Stored in Entity Registry."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
            },
            "version_ids": {
              "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
              "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
            },
            "service_profile_id": {
              "type": "string",
              "description": "Default service profile. Stored in Entity Registry."
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "network_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
            },
            "application_server_id": {
              "type": "string",
              "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "locations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/lorawanv3Location"
              },
              "description": "Location of the device. Stored in Entity Registry."
            },
            "picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "Stored in Entity Registry."
            },
            "supports_class_b": {
              "type": "boolean",
              "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_class_c": {
              "type": "boolean",
              "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_version": {
              "$ref": "#/definitions/v3MACVersion",
              "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_phy_version": {
              "$ref": "#/definitions/v3PHYVersion",
              "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "min_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "max_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_join": {
              "type": "boolean",
              "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "resets_join_nonces": {
              "type": "boolean",
              "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "root_keys": {
              "$ref": "#/definitions/v3RootKeys",
              "description": "Device root keys. Stored in Join Server."
            },
            "net_id": {
              "type": "string",
              "format": "string",
              "example": "000013",
              "description": "Home NetID. Stored in Join Server."
            },
            "mac_settings": {
              "$ref": "#/definitions/v3MACSettings",
              "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
            },
            "mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "MAC state of the device. Stored in Network Server."
            },
            "pending_mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "Pending MAC state of the device. Stored in Network Server."
            },
            "session": {
              "$ref": "#/definitions/v3Session",
              "description": "Current session of the device. Stored in Network Server and Application Server."
            },
            "pending_session": {
              "$ref": "#/definitions/v3Session",
              "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
            },
            "last_dev_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
            },
            "used_dev_nonces": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
            },
            "last_join_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
            },
            "last_rj_count_0": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
            },
            "last_rj_count_1": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
            },
            "last_dev_status_received_at": {
              "type": "string",
              "format": "date-time",
              "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
            },
            "power_state": {
              "$ref": "#/definitions/v3PowerState",
              "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
            },
            "battery_percentage": {
              "type": "number",
              "format": "float",
              "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
            },
            "downlink_margin": {
              "type": "integer",
              "format": "int32",
              "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
            },
            "queued_application_downlinks": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ApplicationDownlink"
              },
              "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
            },
            "formatters": {
              "$ref": "#/definitions/v3MessagePayloadFormatters",
              "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
            },
            "provisioner_id": {
              "type": "string",
              "description": "ID of the provisioner. Stored in Join Server."
            },
            "provisioning_data": {
              "type": "object",
              "description": "Vendor-specific provisioning data. Stored in Join Server."
            },
            "multicast": {
              "type": "boolean",
              "description": "Indicates whether this device represents a multicast group."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
              "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
            },
            "skip_payload_crypto": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
            },
            "skip_payload_crypto_override": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
            },
            "activated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
            },
            "last_seen_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
            },
            "serial_number": {
              "type": "string"
            },
            "lora_alliance_profile_ids": {
              "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
            }
          },
          "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the end device fields that should be updated.\nSee the API reference for which fields can be set on the different services."
        }
      }
    },
    "v3EndDeviceTemplate": {
      "type": "object",
      "properties": {
        "end_device": {
          "$ref": "#/definitions/v3EndDevice"
        },
        "field_mask": {
          "type": "string"
        },
        "mapping_key": {
          "type": "string"
        }
      }
    },
    "v3EndDeviceTemplateFormat": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "file_extensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v3EndDeviceTemplateFormats": {
      "type": "object",
      "properties": {
        "formats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v3EndDeviceTemplateFormat"
          }
        }
      }
    },
    "v3EndDeviceVersionIdentifiers": {
      "type": "object",
      "properties": {
        "brand_id": {
          "type": "string"
        },
        "model_id": {
          "type": "string"
        },
        "hardware_version": {
          "type": "string"
        },
        "firmware_version": {
          "type": "string"
        },
        "band_id": {
          "type": "string"
        }
      },
      "description": "Identifies an end device model with version information."
    },
    "v3EndDevices": {
      "type": "object",
      "properties": {
        "end_devices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDevice"
          }
        }
      }
    },
    "v3EntityIdentifiers": {
      "type": "object",
      "properties": {
        "application_ids": {
          "$ref": "#/definitions/v3ApplicationIdentifiers"
        },
        "client_ids": {
          "$ref": "#/definitions/v3ClientIdentifiers"
        },
        "device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "organization_ids": {
          "$ref": "#/definitions/v3OrganizationIdentifiers"
        },
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        }
      },
      "description": "EntityIdentifiers contains one of the possible entity identifiers."
    },
    "v3ErrorDetails": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Namespace of the error (typically the package name in The Things Stack)."
        },
        "name": {
          "type": "string",
          "description": "Name of the error."
        },
        "message_format": {
          "type": "string",
          "description": "The default (fallback) message format that should be used for the error.\nThis is also used if the client does not have a translation for the error."
        },
        "attributes": {
          "type": "object",
          "description": "Attributes that should be filled into the message format. Any extra attributes\ncan be displayed as error details."
        },
        "correlation_id": {
          "type": "string",
          "description": "The correlation ID of the error can be used to correlate the error to stack\ntraces the network may (or may not) store about recent errors."
        },
        "cause": {
          "$ref": "#/definitions/v3ErrorDetails",
          "description": "The error that caused this error."
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "The status code of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "The details of the error."
        }
      },
      "description": "Error details that are communicated over gRPC (and HTTP) APIs.\nThe messages (for translation) are stored as \"error:\u003cnamespace\u003e:\u003cname\u003e\"."
    },
    "v3Event": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the event. This can be used to find the (localized) event description."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the event was triggered."
        },
        "identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EntityIdentifiers"
          },
          "description": "Identifiers of the entity (or entities) involved."
        },
        "data": {
          "$ref": "#/definitions/protobufAny",
          "description": "Optional data attached to the event."
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Correlation IDs can be used to find related events and actions such as API calls."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the event. Typically the hostname of the server that created it."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "description": "Event context, internal use only."
        },
        "visibility": {
          "$ref": "#/definitions/v3Rights",
          "description": "The event will be visible to a caller that has any of these rights."
        },
        "authentication": {
          "$ref": "#/definitions/EventAuthentication",
          "description": "Details on the authentication provided by the caller that triggered this event."
        },
        "remote_ip": {
          "type": "string",
          "description": "The IP address of the caller that triggered this event."
        },
        "user_agent": {
          "type": "string",
          "description": "The IP address of the caller that triggered this event."
        },
        "unique_id": {
          "type": "string",
          "description": "The unique identifier of the event, assigned on creation."
        }
      }
    },
    "v3FCtrl": {
      "type": "object",
      "properties": {
        "adr": {
          "type": "boolean"
        },
        "adr_ack_req": {
          "type": "boolean",
          "description": "Only on uplink."
        },
        "ack": {
          "type": "boolean"
        },
        "f_pending": {
          "type": "boolean",
          "description": "Only on downlink."
        },
        "class_b": {
          "type": "boolean",
          "description": "Only on uplink."
        }
      }
    },
    "v3FHDR": {
      "type": "object",
      "properties": {
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        },
        "f_ctrl": {
          "$ref": "#/definitions/v3FCtrl"
        },
        "f_cnt": {
          "type": "integer",
          "format": "int64"
        },
        "f_opts": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3FSKDataRate": {
      "type": "object",
      "properties": {
        "bit_rate": {
          "type": "integer",
          "format": "int64",
          "description": "Bit rate (bps)."
        }
      }
    },
    "v3FindRelatedEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Event"
          }
        }
      }
    },
    "v3FrequencyPlanDescription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "base_id": {
          "type": "string",
          "description": "The ID of the frequency that the current frequency plan is based on."
        },
        "name": {
          "type": "string"
        },
        "base_frequency": {
          "type": "integer",
          "format": "int64",
          "title": "Base frequency in MHz for hardware support (433, 470, 868 or 915)"
        },
        "band_id": {
          "type": "string"
        }
      }
    },
    "v3FrequencyValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v3Gateway": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers",
          "description": "The identifiers of the gateway. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the gateway was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the gateway was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the gateway was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the gateway. This information is public and can be seen by any authenticated user in the network."
        },
        "description": {
          "type": "string",
          "description": "A description for the gateway. This information is public and can be seen by any authenticated user in the network."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this gateway. Typically used for organizing gateways or for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this gateway. Typically used to indicate who to contact with technical/security questions about the gateway.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "version_ids": {
          "$ref": "#/definitions/v3GatewayVersionIdentifiers"
        },
        "gateway_server_address": {
          "type": "string",
          "description": "The address of the Gateway Server to connect to.\nThis information is public and can be seen by any authenticated user in the network if status_public is true.\nThe typical format of the address is \"scheme://host:port\". The scheme is optional. If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
        },
        "auto_update": {
          "type": "boolean"
        },
        "update_channel": {
          "type": "string"
        },
        "frequency_plan_id": {
          "type": "string",
          "description": "Frequency plan ID of the gateway.\nThis information is public and can be seen by any authenticated user in the network.\nDEPRECATED: use frequency_plan_ids.\nThis equals the first element of the frequency_plan_ids field."
        },
        "frequency_plan_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Frequency plan IDs of the gateway.\nThis information is public and can be seen by any authenticated user in the network.\nThe first element equals the frequency_plan_id field."
        },
        "antennas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayAntenna"
          },
          "description": "Antennas of the gateway. Location information of the antennas is public and can be seen by any authenticated user in the network if location_public=true."
        },
        "status_public": {
          "type": "boolean",
          "description": "The status of this gateway may be publicly displayed."
        },
        "location_public": {
          "type": "boolean",
          "description": "The location of this gateway may be publicly displayed."
        },
        "schedule_downlink_late": {
          "type": "boolean",
          "description": "Enable server-side buffering of downlink messages. This is recommended for gateways using the Semtech UDP Packet\nForwarder v2.x or older, as it does not feature a just-in-time queue. If enabled, the Gateway Server schedules the\ndownlink message late to the gateway so that it does not overwrite previously scheduled downlink messages that have\nnot been transmitted yet."
        },
        "enforce_duty_cycle": {
          "type": "boolean",
          "description": "Enforcing gateway duty cycle is recommended for all gateways to respect spectrum regulations. Disable enforcing the\nduty cycle only in controlled research and development environments."
        },
        "downlink_path_constraint": {
          "$ref": "#/definitions/v3DownlinkPathConstraint"
        },
        "schedule_anytime_delay": {
          "type": "string",
          "description": "Adjust the time that GS schedules class C messages in advance. This is useful for gateways that have a known high latency backhaul, like 3G and satellite."
        },
        "update_location_from_status": {
          "type": "boolean",
          "description": "Update the location of this gateway from status messages. This only works for gateways connecting with authentication; gateways connected over UDP are not supported."
        },
        "lbs_lns_secret": {
          "$ref": "#/definitions/v3Secret",
          "description": "The LoRa Basics Station LNS secret.\nThis is either an auth token (such as an API Key) or a TLS private certificate.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value."
        },
        "claim_authentication_code": {
          "$ref": "#/definitions/v3GatewayClaimAuthenticationCode",
          "description": "The authentication code for gateway claiming.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value.\nThe entire field must be used in RPCs since sub-fields are validated wrt to each other. Direct selection/update of sub-fields only are not allowed.\nUse the top level field mask `claim_authentication_code` even when updating single fields."
        },
        "target_cups_uri": {
          "type": "string",
          "description": "CUPS URI for LoRa Basics Station CUPS redirection.\nThe CUPS Trust field will be automatically fetched from the cert chain presented by the target server."
        },
        "target_cups_key": {
          "$ref": "#/definitions/v3Secret",
          "description": "CUPS Key for LoRa Basics Station CUPS redirection.\nIf redirecting to another instance of TTS, use the CUPS API Key for the gateway on the target instance.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value."
        },
        "require_authenticated_connection": {
          "type": "boolean",
          "description": "Require an authenticated gateway connection. This prevents the gateway from using the UDP protocol and requires authentication when using other protocols."
        },
        "lrfhss": {
          "$ref": "#/definitions/GatewayLRFHSS"
        },
        "disable_packet_broker_forwarding": {
          "type": "boolean"
        }
      },
      "description": "Gateway is the message that defines a gateway on the network."
    },
    "v3GatewayAccessCreateAPIKeyBody": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "object",
          "properties": {
            "eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "name": {
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3GatewayAccessSetCollaboratorBody": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "object",
          "properties": {
            "eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "collaborator": {
          "$ref": "#/definitions/v3Collaborator"
        }
      }
    },
    "v3GatewayAccessUpdateAPIKeyBody": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "type": "object",
          "properties": {
            "eui": {
              "type": "string",
              "format": "string",
              "example": "70B3D57ED000ABCD",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "api_key": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Immutable and unique secret value of the API key.\nGenerated by the Access Server."
            },
            "name": {
              "type": "string",
              "description": "User-defined (friendly) name for the API key."
            },
            "rights": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3Right"
              },
              "description": "Rights that are granted to this API key."
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "expires_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the api key fields that should be updated."
        }
      }
    },
    "v3GatewayAntenna": {
      "type": "object",
      "properties": {
        "gain": {
          "type": "number",
          "format": "float",
          "description": "Antenna gain relative to the gateway, in dBi."
        },
        "location": {
          "$ref": "#/definitions/lorawanv3Location",
          "description": "location is the antenna's location."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "placement": {
          "$ref": "#/definitions/v3GatewayAntennaPlacement"
        }
      },
      "description": "GatewayAntenna is the message that defines a gateway antenna."
    },
    "v3GatewayAntennaIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "antenna_index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3GatewayAntennaPlacement": {
      "type": "string",
      "enum": [
        "PLACEMENT_UNKNOWN",
        "INDOOR",
        "OUTDOOR"
      ],
      "default": "PLACEMENT_UNKNOWN"
    },
    "v3GatewayClaimAuthenticationCode": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/v3Secret"
        },
        "valid_from": {
          "type": "string",
          "format": "date-time"
        },
        "valid_to": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Authentication code for claiming gateways."
    },
    "v3GatewayConnectionStats": {
      "type": "object",
      "properties": {
        "connected_at": {
          "type": "string",
          "format": "date-time"
        },
        "disconnected_at": {
          "type": "string",
          "format": "date-time"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol used to connect (for example, udp, mqtt, grpc)"
        },
        "last_status_received_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_status": {
          "$ref": "#/definitions/v3GatewayStatus"
        },
        "last_uplink_received_at": {
          "type": "string",
          "format": "date-time"
        },
        "uplink_count": {
          "type": "string",
          "format": "uint64"
        },
        "last_downlink_received_at": {
          "type": "string",
          "format": "date-time"
        },
        "downlink_count": {
          "type": "string",
          "format": "uint64"
        },
        "last_tx_acknowledgment_received_at": {
          "type": "string",
          "format": "date-time"
        },
        "tx_acknowledgment_count": {
          "type": "string",
          "format": "uint64"
        },
        "round_trip_times": {
          "$ref": "#/definitions/GatewayConnectionStatsRoundTripTimes"
        },
        "sub_bands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GatewayConnectionStatsSubBand"
          },
          "description": "Statistics for each sub band."
        },
        "gateway_remote_address": {
          "$ref": "#/definitions/v3GatewayRemoteAddress",
          "description": "Gateway Remote Address."
        }
      },
      "description": "Connection stats as monitored by the Gateway Server."
    },
    "v3GatewayDown": {
      "type": "object",
      "properties": {
        "downlink_message": {
          "$ref": "#/definitions/lorawanv3DownlinkMessage",
          "description": "DownlinkMessage for the gateway."
        }
      },
      "description": "GatewayDown contains downlink messages for the gateway."
    },
    "v3GatewayRadio": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "chip_type": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "format": "uint64"
        },
        "rssi_offset": {
          "type": "number",
          "format": "float"
        },
        "tx_configuration": {
          "$ref": "#/definitions/GatewayRadioTxConfiguration"
        }
      }
    },
    "v3GatewayRegistryCreateBody": {
      "type": "object",
      "properties": {
        "gateway": {
          "$ref": "#/definitions/v3Gateway"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "type": "object"
            },
            "user_ids": {
              "$ref": "#/definitions/v3UserIdentifiers"
            }
          },
          "description": "Collaborator to grant all rights on the newly created gateway.",
          "title": "Collaborator to grant all rights on the newly created gateway."
        }
      }
    },
    "v3GatewayRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              },
              "description": "The identifiers of the gateway. These are public and can be seen by any authenticated user in the network.",
              "title": "The identifiers of the gateway. These are public and can be seen by any authenticated user in the network."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the gateway was created. This information is public and can be seen by any authenticated user in the network."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the gateway was last updated. This information is public and can be seen by any authenticated user in the network."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the gateway was deleted. This information is public and can be seen by any authenticated user in the network."
            },
            "name": {
              "type": "string",
              "description": "The name of the gateway. This information is public and can be seen by any authenticated user in the network."
            },
            "description": {
              "type": "string",
              "description": "A description for the gateway. This information is public and can be seen by any authenticated user in the network."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this gateway. Typically used for organizing gateways or for storing integration-specific data."
            },
            "contact_info": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ContactInfo"
              },
              "description": "Contact information for this gateway. Typically used to indicate who to contact with technical/security questions about the gateway.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
            },
            "administrative_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "technical_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "version_ids": {
              "$ref": "#/definitions/v3GatewayVersionIdentifiers"
            },
            "gateway_server_address": {
              "type": "string",
              "description": "The address of the Gateway Server to connect to.\nThis information is public and can be seen by any authenticated user in the network if status_public is true.\nThe typical format of the address is \"scheme://host:port\". The scheme is optional. If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "auto_update": {
              "type": "boolean"
            },
            "update_channel": {
              "type": "string"
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "Frequency plan ID of the gateway.\nThis information is public and can be seen by any authenticated user in the network.\nDEPRECATED: use frequency_plan_ids.\nThis equals the first element of the frequency_plan_ids field."
            },
            "frequency_plan_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Frequency plan IDs of the gateway.\nThis information is public and can be seen by any authenticated user in the network.\nThe first element equals the frequency_plan_id field."
            },
            "antennas": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3GatewayAntenna"
              },
              "description": "Antennas of the gateway. Location information of the antennas is public and can be seen by any authenticated user in the network if location_public=true."
            },
            "status_public": {
              "type": "boolean",
              "description": "The status of this gateway may be publicly displayed."
            },
            "location_public": {
              "type": "boolean",
              "description": "The location of this gateway may be publicly displayed."
            },
            "schedule_downlink_late": {
              "type": "boolean",
              "description": "Enable server-side buffering of downlink messages. This is recommended for gateways using the Semtech UDP Packet\nForwarder v2.x or older, as it does not feature a just-in-time queue. If enabled, the Gateway Server schedules the\ndownlink message late to the gateway so that it does not overwrite previously scheduled downlink messages that have\nnot been transmitted yet."
            },
            "enforce_duty_cycle": {
              "type": "boolean",
              "description": "Enforcing gateway duty cycle is recommended for all gateways to respect spectrum regulations. Disable enforcing the\nduty cycle only in controlled research and development environments."
            },
            "downlink_path_constraint": {
              "$ref": "#/definitions/v3DownlinkPathConstraint"
            },
            "schedule_anytime_delay": {
              "type": "string",
              "description": "Adjust the time that GS schedules class C messages in advance. This is useful for gateways that have a known high latency backhaul, like 3G and satellite."
            },
            "update_location_from_status": {
              "type": "boolean",
              "description": "Update the location of this gateway from status messages. This only works for gateways connecting with authentication; gateways connected over UDP are not supported."
            },
            "lbs_lns_secret": {
              "$ref": "#/definitions/v3Secret",
              "description": "The LoRa Basics Station LNS secret.\nThis is either an auth token (such as an API Key) or a TLS private certificate.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3GatewayClaimAuthenticationCode",
              "description": "The authentication code for gateway claiming.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value.\nThe entire field must be used in RPCs since sub-fields are validated wrt to each other. Direct selection/update of sub-fields only are not allowed.\nUse the top level field mask `claim_authentication_code` even when updating single fields."
            },
            "target_cups_uri": {
              "type": "string",
              "description": "CUPS URI for LoRa Basics Station CUPS redirection.\nThe CUPS Trust field will be automatically fetched from the cert chain presented by the target server."
            },
            "target_cups_key": {
              "$ref": "#/definitions/v3Secret",
              "description": "CUPS Key for LoRa Basics Station CUPS redirection.\nIf redirecting to another instance of TTS, use the CUPS API Key for the gateway on the target instance.\nRequires the RIGHT_GATEWAY_READ_SECRETS for reading and RIGHT_GATEWAY_WRITE_SECRETS for updating this value."
            },
            "require_authenticated_connection": {
              "type": "boolean",
              "description": "Require an authenticated gateway connection. This prevents the gateway from using the UDP protocol and requires authentication when using other protocols."
            },
            "lrfhss": {
              "$ref": "#/definitions/GatewayLRFHSS"
            },
            "disable_packet_broker_forwarding": {
              "type": "boolean"
            }
          },
          "description": "Gateway is the message that defines a gateway on the network."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the gateway fields that should be updated."
        }
      }
    },
    "v3GatewayRemoteAddress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IPv4 or IPv6 address."
        }
      },
      "description": "Remote Address of the Gateway, as seen by the Gateway Server."
    },
    "v3GatewayStatus": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "title": "Current time of the gateway"
        },
        "boot_time": {
          "type": "string",
          "format": "date-time",
          "title": "Boot time of the gateway\n- can be left out to save bandwidth; old value will be kept"
        },
        "versions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Versions of gateway subsystems\n- each field can be left out to save bandwidth; old value will be kept\n- map keys are written in snake_case\n- for example:\n    firmware: \"2.0.4\"\n    forwarder: \"v2-3.3.1\"\n    fpga: \"48\"\n    dsp: \"27\"\n    hal: \"v2-3.5.0\""
        },
        "antenna_locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3Location"
          },
          "title": "Location of each gateway's antenna\n- if left out, server uses registry-set location as fallback"
        },
        "ip": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IP addresses of this gateway.\nRepeated addresses can be used to communicate addresses of multiple interfaces (LAN, Public IP, ...)."
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "float"
          },
          "title": "Metrics\n- can be used for forwarding gateway metrics such as temperatures or performance metrics\n- map keys are written in snake_case"
        },
        "advanced": {
          "type": "object",
          "title": "Advanced metadata fields\n- can be used for advanced information or experimental features that are not yet formally defined in the API\n- field names are written in snake_case"
        }
      }
    },
    "v3GatewayVersionIdentifiers": {
      "type": "object",
      "properties": {
        "brand_id": {
          "type": "string"
        },
        "model_id": {
          "type": "string"
        },
        "hardware_version": {
          "type": "string"
        },
        "firmware_version": {
          "type": "string"
        },
        "runtime_version": {
          "type": "string"
        }
      },
      "description": "Identifies an end device model with version information."
    },
    "v3Gateways": {
      "type": "object",
      "properties": {
        "gateways": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Gateway"
          }
        }
      }
    },
    "v3GenerateDevAddrResponse": {
      "type": "object",
      "properties": {
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        }
      },
      "description": "Response of GenerateDevAddr."
    },
    "v3GenerateEndDeviceQRCodeRequest": {
      "type": "object",
      "properties": {
        "format_id": {
          "type": "string",
          "description": "QR code format identifier. Enumerate available formats with rpc ListFormats in the EndDeviceQRCodeGenerator service."
        },
        "end_device": {
          "$ref": "#/definitions/v3EndDevice",
          "description": "End device to use as input to generate the QR code."
        },
        "image": {
          "$ref": "#/definitions/GenerateEndDeviceQRCodeRequestImage",
          "description": "If set, the server will render the QR code image according to these settings."
        }
      }
    },
    "v3GenerateQRCodeResponse": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text representation of the QR code contents."
        },
        "image": {
          "$ref": "#/definitions/v3Picture",
          "description": "QR code in PNG format, if requested."
        }
      }
    },
    "v3GetAsConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v3AsConfiguration"
        }
      }
    },
    "v3GetClaimStatusResponse": {
      "type": "object",
      "properties": {
        "end_device_ids": {
          "$ref": "#/definitions/v3EndDeviceIdentifiers"
        },
        "home_net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        },
        "home_ns_id": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "vendor_specific": {
          "$ref": "#/definitions/GetClaimStatusResponseVendorSpecific"
        }
      }
    },
    "v3GetCollaboratorResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        }
      }
    },
    "v3GetDefaultJoinEUIResponse": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "v3GetDeviceAdressPrefixesResponse": {
      "type": "object",
      "properties": {
        "dev_addr_prefixes": {
          "type": "array",
          "example": [
            "2600AB00/24"
          ],
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "v3GetGatewayConfigurationResponse": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3GetInfoByGatewayEUIRequest": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "v3GetInfoByGatewayEUIResponse": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "supports_claiming": {
          "type": "boolean"
        },
        "is_managed": {
          "type": "boolean",
          "description": "Indicates whether the gateway is a managed gateway.\nIf true, when the gateway is successfully claimed, it can be managed with ManagedGatewayConfigurationService."
        }
      }
    },
    "v3GetInfoByJoinEUIRequest": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "v3GetInfoByJoinEUIResponse": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "supports_claiming": {
          "type": "boolean",
          "description": "If set, this Join EUI is available for claiming on one of the configured Join Servers."
        }
      }
    },
    "v3GetInfoByJoinEUIsRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GetInfoByJoinEUIRequest"
          }
        }
      }
    },
    "v3GetInfoByJoinEUIsResponse": {
      "type": "object",
      "properties": {
        "infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GetInfoByJoinEUIResponse"
          }
        }
      }
    },
    "v3GetIsConfigurationResponse": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/v3IsConfiguration"
        }
      }
    },
    "v3GetNetIDResponse": {
      "type": "object",
      "properties": {
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        }
      }
    },
    "v3GetPhyVersionsResponse": {
      "type": "object",
      "properties": {
        "version_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetPhyVersionsResponseVersionInfo"
          }
        }
      }
    },
    "v3GetRelayResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "Relay configuration."
        }
      }
    },
    "v3GetRelayUplinkForwardingRuleResponse": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v3RelayUplinkForwardingRule",
          "description": "Uplink forwarding rule."
        }
      }
    },
    "v3GetStoredApplicationUpCountResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Number of stored messages by end device ID."
        }
      }
    },
    "v3GrantType": {
      "type": "string",
      "enum": [
        "GRANT_AUTHORIZATION_CODE",
        "GRANT_PASSWORD",
        "GRANT_REFRESH_TOKEN"
      ],
      "default": "GRANT_AUTHORIZATION_CODE",
      "description": "The OAuth2 flows an OAuth client can use to get an access token.\n\n - GRANT_AUTHORIZATION_CODE: Grant type used to exchange an authorization code for an access token.\n - GRANT_PASSWORD: Grant type used to exchange a user ID and password for an access token.\n - GRANT_REFRESH_TOKEN: Grant type used to exchange a refresh token for an access token."
    },
    "v3Invitations": {
      "type": "object",
      "properties": {
        "invitations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lorawanv3Invitation"
          }
        }
      }
    },
    "v3IsConfiguration": {
      "type": "object",
      "properties": {
        "user_registration": {
          "$ref": "#/definitions/IsConfigurationUserRegistration"
        },
        "profile_picture": {
          "$ref": "#/definitions/IsConfigurationProfilePicture"
        },
        "end_device_picture": {
          "$ref": "#/definitions/IsConfigurationEndDevicePicture"
        },
        "user_rights": {
          "$ref": "#/definitions/IsConfigurationUserRights"
        },
        "user_login": {
          "$ref": "#/definitions/IsConfigurationUserLogin"
        },
        "admin_rights": {
          "$ref": "#/definitions/IsConfigurationAdminRights"
        },
        "collaborator_rights": {
          "$ref": "#/definitions/IsConfigurationCollaboratorRights"
        }
      }
    },
    "v3IssueDevEUIResponse": {
      "type": "object",
      "properties": {
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "v3JoinAcceptPayload": {
      "type": "object",
      "properties": {
        "encrypted": {
          "type": "string",
          "format": "byte"
        },
        "join_nonce": {
          "type": "string",
          "format": "string",
          "example": "ABCDEF"
        },
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        },
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD"
        },
        "dl_settings": {
          "$ref": "#/definitions/v3DLSettings"
        },
        "rx_delay": {
          "$ref": "#/definitions/v3RxDelay"
        },
        "cf_list": {
          "$ref": "#/definitions/v3CFList"
        }
      }
    },
    "v3JoinEUIPrefix": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v3JoinEUIPrefixes": {
      "type": "object",
      "properties": {
        "prefixes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3JoinEUIPrefix"
          }
        }
      }
    },
    "v3JoinRequestPayload": {
      "type": "object",
      "properties": {
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "dev_nonce": {
          "type": "string",
          "format": "string",
          "example": "ABCD"
        }
      }
    },
    "v3JoinRequestType": {
      "type": "string",
      "enum": [
        "REJOIN_CONTEXT",
        "REJOIN_SESSION",
        "REJOIN_KEYS",
        "JOIN"
      ],
      "default": "REJOIN_CONTEXT",
      "description": " - REJOIN_CONTEXT: Resets DevAddr, Session Keys, Frame Counters, Radio Parameters.\n - REJOIN_SESSION: Equivalent to the initial JoinRequest.\n - REJOIN_KEYS: Resets DevAddr, Session Keys, Frame Counters, while keeping the Radio Parameters.\n - JOIN: Normal join-request."
    },
    "v3JoinResponse": {
      "type": "object",
      "properties": {
        "raw_payload": {
          "type": "string",
          "format": "byte"
        },
        "session_keys": {
          "$ref": "#/definitions/v3SessionKeys"
        },
        "lifetime": {
          "type": "string"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v3JsEndDeviceRegistrySetBody": {
      "type": "object",
      "properties": {
        "end_device": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string"
                },
                "application_ids": {
                  "type": "object"
                },
                "dev_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN DevEUI."
                },
                "join_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                },
                "dev_addr": {
                  "type": "string",
                  "format": "string",
                  "example": "2600ABCD",
                  "description": "The LoRaWAN DevAddr."
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Friendly name of the device. Stored in Entity Registry."
            },
            "description": {
              "type": "string",
              "description": "Description of the device. Stored in Entity Registry."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
            },
            "version_ids": {
              "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
              "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
            },
            "service_profile_id": {
              "type": "string",
              "description": "Default service profile. Stored in Entity Registry."
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "network_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
            },
            "application_server_id": {
              "type": "string",
              "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "locations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/lorawanv3Location"
              },
              "description": "Location of the device. Stored in Entity Registry."
            },
            "picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "Stored in Entity Registry."
            },
            "supports_class_b": {
              "type": "boolean",
              "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_class_c": {
              "type": "boolean",
              "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_version": {
              "$ref": "#/definitions/v3MACVersion",
              "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_phy_version": {
              "$ref": "#/definitions/v3PHYVersion",
              "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "min_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "max_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_join": {
              "type": "boolean",
              "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "resets_join_nonces": {
              "type": "boolean",
              "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "root_keys": {
              "$ref": "#/definitions/v3RootKeys",
              "description": "Device root keys. Stored in Join Server."
            },
            "net_id": {
              "type": "string",
              "format": "string",
              "example": "000013",
              "description": "Home NetID. Stored in Join Server."
            },
            "mac_settings": {
              "$ref": "#/definitions/v3MACSettings",
              "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
            },
            "mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "MAC state of the device. Stored in Network Server."
            },
            "pending_mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "Pending MAC state of the device. Stored in Network Server."
            },
            "session": {
              "$ref": "#/definitions/v3Session",
              "description": "Current session of the device. Stored in Network Server and Application Server."
            },
            "pending_session": {
              "$ref": "#/definitions/v3Session",
              "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
            },
            "last_dev_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
            },
            "used_dev_nonces": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
            },
            "last_join_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
            },
            "last_rj_count_0": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
            },
            "last_rj_count_1": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
            },
            "last_dev_status_received_at": {
              "type": "string",
              "format": "date-time",
              "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
            },
            "power_state": {
              "$ref": "#/definitions/v3PowerState",
              "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
            },
            "battery_percentage": {
              "type": "number",
              "format": "float",
              "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
            },
            "downlink_margin": {
              "type": "integer",
              "format": "int32",
              "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
            },
            "queued_application_downlinks": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ApplicationDownlink"
              },
              "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
            },
            "formatters": {
              "$ref": "#/definitions/v3MessagePayloadFormatters",
              "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
            },
            "provisioner_id": {
              "type": "string",
              "description": "ID of the provisioner. Stored in Join Server."
            },
            "provisioning_data": {
              "type": "object",
              "description": "Vendor-specific provisioning data. Stored in Join Server."
            },
            "multicast": {
              "type": "boolean",
              "description": "Indicates whether this device represents a multicast group."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
              "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
            },
            "skip_payload_crypto": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
            },
            "skip_payload_crypto_override": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
            },
            "activated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
            },
            "last_seen_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
            },
            "serial_number": {
              "type": "string"
            },
            "lora_alliance_profile_ids": {
              "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
            }
          },
          "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the end device fields that should be updated.\nSee the API reference for which fields can be set on the different services."
        }
      }
    },
    "v3KeyEnvelope": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "string",
          "example": "0123456789ABCDEF0123456789ABCDEF",
          "description": "The unencrypted AES key."
        },
        "kek_label": {
          "type": "string",
          "description": "The label of the RFC 3394 key-encryption-key (KEK) that was used to encrypt the key."
        },
        "encrypted_key": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3KeyProvisioning": {
      "type": "string",
      "enum": [
        "KEY_PROVISIONING_UNKNOWN",
        "KEY_PROVISIONING_CUSTOM",
        "KEY_PROVISIONING_JOIN_SERVER",
        "KEY_PROVISIONING_MANIFEST"
      ],
      "default": "KEY_PROVISIONING_UNKNOWN",
      "description": " - KEY_PROVISIONING_UNKNOWN: Unknown Key Provisioning.\n - KEY_PROVISIONING_CUSTOM: Custom Key Provisioning.\n - KEY_PROVISIONING_JOIN_SERVER: Key Provisioning from the Global Join Server.\n - KEY_PROVISIONING_MANIFEST: Key Provisioning from Manifest."
    },
    "v3KeySecurity": {
      "type": "string",
      "enum": [
        "KEY_SECURITY_UNKNOWN",
        "KEY_SECURITY_NONE",
        "KEY_SECURITY_READ_PROTECTED",
        "KEY_SECURITY_SECURE_ELEMENT"
      ],
      "default": "KEY_SECURITY_UNKNOWN",
      "description": " - KEY_SECURITY_UNKNOWN: Unknown key security.\n - KEY_SECURITY_NONE: No key security.\n - KEY_SECURITY_READ_PROTECTED: Read Protected key security.\n - KEY_SECURITY_SECURE_ELEMENT: Key security using the Security Element."
    },
    "v3LRFHSSDataRate": {
      "type": "object",
      "properties": {
        "modulation_type": {
          "type": "integer",
          "format": "int64"
        },
        "operating_channel_width": {
          "type": "integer",
          "format": "int64",
          "description": "Operating Channel Width (Hz)."
        },
        "coding_rate": {
          "type": "string"
        }
      }
    },
    "v3ListBandsResponse": {
      "type": "object",
      "properties": {
        "descriptions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ListBandsResponseVersionedBandDescription"
          }
        }
      }
    },
    "v3ListEndDeviceBrandsResponse": {
      "type": "object",
      "properties": {
        "brands": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDeviceBrand"
          }
        }
      }
    },
    "v3ListEndDeviceModelsResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EndDeviceModel"
          }
        }
      }
    },
    "v3ListFrequencyPlansResponse": {
      "type": "object",
      "properties": {
        "frequency_plans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3FrequencyPlanDescription"
          }
        }
      }
    },
    "v3ListNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Notification"
          }
        }
      }
    },
    "v3ListRelayUplinkForwardingRulesResponse": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3RelayUplinkForwardingRule"
          },
          "description": "Uplink forwarding rules."
        }
      }
    },
    "v3LoRaAllianceProfileIdentifiers": {
      "type": "object",
      "properties": {
        "vendor_id": {
          "type": "integer",
          "format": "int64",
          "description": "VendorID managed by the LoRa Alliance, as defined in TR005."
        },
        "vendor_profile_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the LoRaWAN end device profile assigned by the vendor."
        }
      }
    },
    "v3LoRaDataRate": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth (Hz)."
        },
        "spreading_factor": {
          "type": "integer",
          "format": "int64"
        },
        "coding_rate": {
          "type": "string"
        }
      }
    },
    "v3LocationSource": {
      "type": "string",
      "enum": [
        "SOURCE_UNKNOWN",
        "SOURCE_GPS",
        "SOURCE_REGISTRY",
        "SOURCE_IP_GEOLOCATION",
        "SOURCE_WIFI_RSSI_GEOLOCATION",
        "SOURCE_BT_RSSI_GEOLOCATION",
        "SOURCE_LORA_RSSI_GEOLOCATION",
        "SOURCE_LORA_TDOA_GEOLOCATION",
        "SOURCE_COMBINED_GEOLOCATION"
      ],
      "default": "SOURCE_UNKNOWN",
      "description": " - SOURCE_UNKNOWN: The source of the location is not known or not set.\n - SOURCE_GPS: The location is determined by GPS.\n - SOURCE_REGISTRY: The location is set in and updated from a registry.\n - SOURCE_IP_GEOLOCATION: The location is estimated with IP geolocation.\n - SOURCE_WIFI_RSSI_GEOLOCATION: The location is estimated with WiFi RSSI geolocation.\n - SOURCE_BT_RSSI_GEOLOCATION: The location is estimated with BT/BLE RSSI geolocation.\n - SOURCE_LORA_RSSI_GEOLOCATION: The location is estimated with LoRa RSSI geolocation.\n - SOURCE_LORA_TDOA_GEOLOCATION: The location is estimated with LoRa TDOA geolocation.\n - SOURCE_COMBINED_GEOLOCATION: The location is estimated by a combination of geolocation sources.\n\nMore estimation methods can be added."
    },
    "v3MACCommand": {
      "type": "object",
      "properties": {
        "cid": {
          "$ref": "#/definitions/v3MACCommandIdentifier"
        },
        "raw_payload": {
          "type": "string",
          "format": "byte"
        },
        "reset_ind": {
          "$ref": "#/definitions/MACCommandResetInd"
        },
        "reset_conf": {
          "$ref": "#/definitions/MACCommandResetConf"
        },
        "link_check_ans": {
          "$ref": "#/definitions/MACCommandLinkCheckAns"
        },
        "link_adr_req": {
          "$ref": "#/definitions/MACCommandLinkADRReq"
        },
        "link_adr_ans": {
          "$ref": "#/definitions/MACCommandLinkADRAns"
        },
        "duty_cycle_req": {
          "$ref": "#/definitions/MACCommandDutyCycleReq"
        },
        "rx_param_setup_req": {
          "$ref": "#/definitions/MACCommandRxParamSetupReq"
        },
        "rx_param_setup_ans": {
          "$ref": "#/definitions/MACCommandRxParamSetupAns"
        },
        "dev_status_ans": {
          "$ref": "#/definitions/MACCommandDevStatusAns"
        },
        "new_channel_req": {
          "$ref": "#/definitions/MACCommandNewChannelReq"
        },
        "new_channel_ans": {
          "$ref": "#/definitions/MACCommandNewChannelAns"
        },
        "dl_channel_req": {
          "$ref": "#/definitions/MACCommandDLChannelReq"
        },
        "dl_channel_ans": {
          "$ref": "#/definitions/MACCommandDLChannelAns"
        },
        "rx_timing_setup_req": {
          "$ref": "#/definitions/MACCommandRxTimingSetupReq"
        },
        "tx_param_setup_req": {
          "$ref": "#/definitions/MACCommandTxParamSetupReq"
        },
        "rekey_ind": {
          "$ref": "#/definitions/MACCommandRekeyInd"
        },
        "rekey_conf": {
          "$ref": "#/definitions/MACCommandRekeyConf"
        },
        "adr_param_setup_req": {
          "$ref": "#/definitions/MACCommandADRParamSetupReq"
        },
        "device_time_ans": {
          "$ref": "#/definitions/MACCommandDeviceTimeAns"
        },
        "force_rejoin_req": {
          "$ref": "#/definitions/MACCommandForceRejoinReq"
        },
        "rejoin_param_setup_req": {
          "$ref": "#/definitions/MACCommandRejoinParamSetupReq"
        },
        "rejoin_param_setup_ans": {
          "$ref": "#/definitions/MACCommandRejoinParamSetupAns"
        },
        "ping_slot_info_req": {
          "$ref": "#/definitions/MACCommandPingSlotInfoReq"
        },
        "ping_slot_channel_req": {
          "$ref": "#/definitions/MACCommandPingSlotChannelReq"
        },
        "ping_slot_channel_ans": {
          "$ref": "#/definitions/MACCommandPingSlotChannelAns"
        },
        "beacon_timing_ans": {
          "$ref": "#/definitions/MACCommandBeaconTimingAns"
        },
        "beacon_freq_req": {
          "$ref": "#/definitions/MACCommandBeaconFreqReq"
        },
        "beacon_freq_ans": {
          "$ref": "#/definitions/MACCommandBeaconFreqAns"
        },
        "device_mode_ind": {
          "$ref": "#/definitions/MACCommandDeviceModeInd"
        },
        "device_mode_conf": {
          "$ref": "#/definitions/MACCommandDeviceModeConf"
        },
        "relay_conf_req": {
          "$ref": "#/definitions/MACCommandRelayConfReq"
        },
        "relay_conf_ans": {
          "$ref": "#/definitions/MACCommandRelayConfAns"
        },
        "relay_end_device_conf_req": {
          "$ref": "#/definitions/MACCommandRelayEndDeviceConfReq"
        },
        "relay_end_device_conf_ans": {
          "$ref": "#/definitions/MACCommandRelayEndDeviceConfAns"
        },
        "relay_update_uplink_list_req": {
          "$ref": "#/definitions/MACCommandRelayUpdateUplinkListReq"
        },
        "relay_update_uplink_list_ans": {
          "$ref": "#/definitions/MACCommandRelayUpdateUplinkListAns"
        },
        "relay_ctrl_uplink_list_req": {
          "$ref": "#/definitions/MACCommandRelayCtrlUplinkListReq"
        },
        "relay_ctrl_uplink_list_ans": {
          "$ref": "#/definitions/MACCommandRelayCtrlUplinkListAns"
        },
        "relay_configure_fwd_limit_req": {
          "$ref": "#/definitions/MACCommandRelayConfigureFwdLimitReq"
        },
        "relay_configure_fwd_limit_ans": {
          "$ref": "#/definitions/MACCommandRelayConfigureFwdLimitAns"
        },
        "relay_notify_new_end_device_req": {
          "$ref": "#/definitions/MACCommandRelayNotifyNewEndDeviceReq"
        }
      }
    },
    "v3MACCommandIdentifier": {
      "type": "string",
      "enum": [
        "CID_RFU_0",
        "CID_RESET",
        "CID_LINK_CHECK",
        "CID_LINK_ADR",
        "CID_DUTY_CYCLE",
        "CID_RX_PARAM_SETUP",
        "CID_DEV_STATUS",
        "CID_NEW_CHANNEL",
        "CID_RX_TIMING_SETUP",
        "CID_TX_PARAM_SETUP",
        "CID_DL_CHANNEL",
        "CID_REKEY",
        "CID_ADR_PARAM_SETUP",
        "CID_DEVICE_TIME",
        "CID_FORCE_REJOIN",
        "CID_REJOIN_PARAM_SETUP",
        "CID_PING_SLOT_INFO",
        "CID_PING_SLOT_CHANNEL",
        "CID_BEACON_TIMING",
        "CID_BEACON_FREQ",
        "CID_DEVICE_MODE",
        "CID_RELAY_CONF",
        "CID_RELAY_END_DEVICE_CONF",
        "CID_RELAY_FILTER_LIST",
        "CID_RELAY_UPDATE_UPLINK_LIST",
        "CID_RELAY_CTRL_UPLINK_LIST",
        "CID_RELAY_CONFIGURE_FWD_LIMIT",
        "CID_RELAY_NOTIFY_NEW_END_DEVICE"
      ],
      "default": "CID_RFU_0",
      "title": "- CID_BEACON_TIMING: Deprecated"
    },
    "v3MACParameters": {
      "type": "object",
      "properties": {
        "max_eirp": {
          "type": "number",
          "format": "float",
          "description": "Maximum EIRP (dBm)."
        },
        "adr_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "ADR: data rate index to use."
        },
        "adr_tx_power_index": {
          "type": "integer",
          "format": "int64",
          "description": "ADR: transmission power index to use."
        },
        "adr_nb_trans": {
          "type": "integer",
          "format": "int64",
          "description": "ADR: number of retransmissions."
        },
        "adr_ack_limit": {
          "type": "integer",
          "format": "int64",
          "description": "ADR: number of messages to wait before setting ADRAckReq.\nThis field is deprecated, use adr_ack_limit_exponent instead."
        },
        "adr_ack_delay": {
          "type": "integer",
          "format": "int64",
          "description": "ADR: number of messages to wait after setting ADRAckReq and before changing TxPower or DataRate.\nThis field is deprecated, use adr_ack_delay_exponent instead."
        },
        "rx1_delay": {
          "$ref": "#/definitions/v3RxDelay",
          "description": "Rx1 delay (Rx2 delay is Rx1 delay + 1 second)."
        },
        "rx1_data_rate_offset": {
          "$ref": "#/definitions/v3DataRateOffset",
          "description": "Data rate offset for Rx1."
        },
        "rx2_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "Data rate index for Rx2."
        },
        "rx2_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency for Rx2 (Hz)."
        },
        "max_duty_cycle": {
          "$ref": "#/definitions/v3AggregatedDutyCycle",
          "description": "Maximum uplink duty cycle (of all channels)."
        },
        "rejoin_time_periodicity": {
          "$ref": "#/definitions/v3RejoinTimeExponent",
          "description": "Time within which a rejoin-request must be sent."
        },
        "rejoin_count_periodicity": {
          "$ref": "#/definitions/v3RejoinCountExponent",
          "description": "Message count within which a rejoin-request must be sent."
        },
        "ping_slot_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency of the class B ping slot (Hz)."
        },
        "ping_slot_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "Data rate index of the class B ping slot.\nThis field is deprecated, use ping_slot_data_rate_index_value instead."
        },
        "beacon_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency of the class B beacon (Hz)."
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MACParametersChannel"
          },
          "description": "Configured uplink channels and optionally Rx1 frequency."
        },
        "uplink_dwell_time": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether uplink dwell time is set (400ms).\nIf unset, then the value is either unknown or irrelevant(Network Server cannot modify it)."
        },
        "downlink_dwell_time": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether downlink dwell time is set (400ms).\nIf unset, then the value is either unknown or irrelevant(Network Server cannot modify it)."
        },
        "adr_ack_limit_exponent": {
          "$ref": "#/definitions/v3ADRAckLimitExponentValue",
          "description": "ADR: number of messages to wait before setting ADRAckReq."
        },
        "adr_ack_delay_exponent": {
          "$ref": "#/definitions/v3ADRAckDelayExponentValue",
          "description": "ADR: number of messages to wait after setting ADRAckReq and before changing TxPower or DataRate."
        },
        "ping_slot_data_rate_index_value": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "Data rate index of the class B ping slot."
        },
        "relay": {
          "$ref": "#/definitions/lorawanv3RelayParameters",
          "description": "Relay parameters."
        }
      },
      "description": "MACParameters represent the parameters of the device's MAC layer (active or desired).\nThis is used internally by the Network Server."
    },
    "v3MACParametersChannel": {
      "type": "object",
      "properties": {
        "uplink_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Uplink frequency of the channel (Hz)."
        },
        "downlink_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Downlink frequency of the channel (Hz)."
        },
        "min_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "Index of the minimum data rate for uplink."
        },
        "max_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "Index of the maximum data rate for uplink."
        },
        "enable_uplink": {
          "type": "boolean",
          "description": "Channel can be used by device for uplink."
        }
      }
    },
    "v3MACSettings": {
      "type": "object",
      "properties": {
        "class_b_timeout": {
          "type": "string",
          "description": "Maximum delay for the device to answer a MAC request or a confirmed downlink frame.\nIf unset, the default value from Network Server configuration will be used."
        },
        "ping_slot_periodicity": {
          "$ref": "#/definitions/v3PingSlotPeriodValue",
          "description": "Periodicity of the class B ping slot.\nIf unset, the default value from Network Server configuration will be used."
        },
        "ping_slot_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "Data rate index of the class B ping slot.\nIf unset, the default value from Network Server configuration will be used."
        },
        "ping_slot_frequency": {
          "$ref": "#/definitions/v3ZeroableFrequencyValue",
          "description": "Frequency of the class B ping slot (Hz).\nIf unset, the default value from Network Server configuration will be used."
        },
        "beacon_frequency": {
          "$ref": "#/definitions/v3ZeroableFrequencyValue",
          "description": "Frequency of the class B beacon (Hz).\nIf unset, the default value from Network Server configuration will be used."
        },
        "class_c_timeout": {
          "type": "string",
          "description": "Maximum delay for the device to answer a MAC request or a confirmed downlink frame.\nIf unset, the default value from Network Server configuration will be used."
        },
        "rx1_delay": {
          "$ref": "#/definitions/v3RxDelayValue",
          "description": "Class A Rx1 delay.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "rx1_data_rate_offset": {
          "$ref": "#/definitions/v3DataRateOffsetValue",
          "description": "Rx1 data rate offset.\nIf unset, the default value from Network Server configuration will be used."
        },
        "rx2_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "Data rate index for Rx2.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "rx2_frequency": {
          "$ref": "#/definitions/v3FrequencyValue",
          "description": "Frequency for Rx2 (Hz).\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "factory_preset_frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "List of factory-preset frequencies.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "max_duty_cycle": {
          "$ref": "#/definitions/v3AggregatedDutyCycleValue",
          "description": "Maximum uplink duty cycle (of all channels)."
        },
        "supports_32_bit_f_cnt": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether the device supports 32-bit frame counters.\nIf unset, the default value from Network Server configuration will be used."
        },
        "use_adr": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether the Network Server should use ADR for the device.\nThis field is deprecated, use adr_settings instead."
        },
        "adr_margin": {
          "type": "number",
          "format": "float",
          "description": "The ADR margin (dB) tells the network server how much margin it should add in ADR requests.\nA bigger margin is less efficient, but gives a better chance of successful reception.\nThis field is deprecated, use adr_settings.dynamic.margin instead."
        },
        "resets_f_cnt": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether the device resets the frame counters (not LoRaWAN compliant).\nIf unset, the default value from Network Server configuration will be used."
        },
        "status_time_periodicity": {
          "type": "string",
          "description": "The interval after which a DevStatusReq MACCommand shall be sent.\nIf unset, the default value from Network Server configuration will be used."
        },
        "status_count_periodicity": {
          "type": "integer",
          "format": "int64",
          "description": "Number of uplink messages after which a DevStatusReq MACCommand shall be sent.\nIf unset, the default value from Network Server configuration will be used."
        },
        "desired_rx1_delay": {
          "$ref": "#/definitions/v3RxDelayValue",
          "description": "The Rx1 delay Network Server should configure device to use via MAC commands or Join-Accept.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "desired_rx1_data_rate_offset": {
          "$ref": "#/definitions/v3DataRateOffsetValue",
          "description": "The Rx1 data rate offset Network Server should configure device to use via MAC commands or Join-Accept.\nIf unset, the default value from Network Server configuration will be used."
        },
        "desired_rx2_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "The Rx2 data rate index Network Server should configure device to use via MAC commands or Join-Accept.\nIf unset, the default value from frequency plan, Network Server configuration or regional parameters specification will be used."
        },
        "desired_rx2_frequency": {
          "$ref": "#/definitions/v3FrequencyValue",
          "description": "The Rx2 frequency index Network Server should configure device to use via MAC commands.\nIf unset, the default value from frequency plan, Network Server configuration or regional parameters specification will be used."
        },
        "desired_max_duty_cycle": {
          "$ref": "#/definitions/v3AggregatedDutyCycleValue",
          "description": "The maximum uplink duty cycle (of all channels) Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration will be used."
        },
        "desired_adr_ack_limit_exponent": {
          "$ref": "#/definitions/v3ADRAckLimitExponentValue",
          "description": "The ADR ACK limit Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "desired_adr_ack_delay_exponent": {
          "$ref": "#/definitions/v3ADRAckDelayExponentValue",
          "description": "The ADR ACK delay Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "desired_ping_slot_data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndexValue",
          "description": "The data rate index of the class B ping slot Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration will be used."
        },
        "desired_ping_slot_frequency": {
          "$ref": "#/definitions/v3ZeroableFrequencyValue",
          "description": "The frequency of the class B ping slot (Hz) Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "desired_beacon_frequency": {
          "$ref": "#/definitions/v3ZeroableFrequencyValue",
          "description": "The frequency of the class B beacon (Hz) Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration will be used."
        },
        "desired_max_eirp": {
          "$ref": "#/definitions/v3DeviceEIRPValue",
          "description": "Maximum EIRP (dBm).\nIf unset, the default value from regional parameters specification will be used."
        },
        "class_b_c_downlink_interval": {
          "type": "string",
          "description": "The minimum duration passed before a network-initiated(e.g. Class B or C) downlink following an arbitrary downlink."
        },
        "uplink_dwell_time": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether uplink dwell time is set (400ms).\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "downlink_dwell_time": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether downlink dwell time is set (400ms).\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "adr": {
          "$ref": "#/definitions/v3ADRSettings",
          "description": "Adaptive Data Rate settings.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "schedule_downlinks": {
          "$ref": "#/definitions/lorawanv3BoolValue",
          "description": "Whether or not downlink messages should be scheduled.\nThis option can be used in order to disable any downlink interaction with the end device. It will affect all types\nof downlink messages: data and MAC downlinks, and join accepts."
        },
        "relay": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "The relay settings the end device is using.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        },
        "desired_relay": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "The relay settings the Network Server should configure device to use via MAC commands.\nIf unset, the default value from Network Server configuration or regional parameters specification will be used."
        }
      }
    },
    "v3MACState": {
      "type": "object",
      "properties": {
        "current_parameters": {
          "$ref": "#/definitions/v3MACParameters",
          "description": "Current LoRaWAN MAC parameters."
        },
        "desired_parameters": {
          "$ref": "#/definitions/v3MACParameters",
          "description": "Desired LoRaWAN MAC parameters."
        },
        "device_class": {
          "$ref": "#/definitions/v3Class",
          "title": "Currently active LoRaWAN device class\n- Device class is A by default\n- If device sets ClassB bit in uplink, this will be set to B\n- If device sent DeviceModeInd MAC message, this will be set to that value"
        },
        "lorawan_version": {
          "$ref": "#/definitions/v3MACVersion",
          "description": "LoRaWAN MAC version."
        },
        "last_confirmed_downlink_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the last confirmed downlink message or MAC command was scheduled."
        },
        "last_dev_status_f_cnt_up": {
          "type": "integer",
          "format": "int64",
          "description": "Frame counter value of last uplink containing DevStatusAns."
        },
        "ping_slot_periodicity": {
          "$ref": "#/definitions/v3PingSlotPeriodValue",
          "description": "Periodicity of the class B ping slot."
        },
        "pending_application_downlink": {
          "$ref": "#/definitions/v3ApplicationDownlink",
          "description": "A confirmed application downlink, for which an acknowledgment is expected to arrive."
        },
        "queued_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MACCommand"
          },
          "description": "Queued MAC responses.\nRegenerated on each uplink."
        },
        "pending_requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MACCommand"
          },
          "description": "Pending MAC requests(i.e. sent requests, for which no response has been received yet).\nRegenerated on each downlink."
        },
        "queued_join_accept": {
          "$ref": "#/definitions/MACStateJoinAccept",
          "description": "Queued join-accept.\nSet each time a (re-)join request accept is received from Join Server and removed each time a downlink is scheduled."
        },
        "pending_join_request": {
          "$ref": "#/definitions/v3MACStateJoinRequest",
          "description": "Pending join request.\nSet each time a join-accept is scheduled and removed each time an uplink is received from the device."
        },
        "rx_windows_available": {
          "type": "boolean",
          "description": "Whether or not Rx windows are expected to be open.\nSet to true every time an uplink is received.\nSet to false every time a successful downlink scheduling attempt is made."
        },
        "recent_uplinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MACStateUplinkMessage"
          },
          "description": "Recent data uplink messages sorted by time.\nThe number of messages stored may depend on configuration."
        },
        "recent_downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MACStateDownlinkMessage"
          },
          "description": "Recent data downlink messages sorted by time.\nThe number of messages stored may depend on configuration."
        },
        "last_network_initiated_downlink_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the last network-initiated downlink message was scheduled."
        },
        "rejected_adr_data_rate_indexes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3DataRateIndex"
          },
          "description": "ADR Data rate index values rejected by the device.\nReset each time `current_parameters.channels` change.\nElements are sorted in ascending order."
        },
        "rejected_adr_tx_power_indexes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "description": "ADR TX output power index values rejected by the device.\nElements are sorted in ascending order."
        },
        "rejected_frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Frequencies rejected by the device."
        },
        "last_downlink_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the last downlink message was scheduled."
        },
        "rejected_data_rate_ranges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MACStateDataRateRanges"
          },
          "description": "Data rate ranges rejected by the device per frequency."
        },
        "last_adr_change_f_cnt_up": {
          "type": "integer",
          "format": "int64",
          "description": "Frame counter of uplink, which confirmed the last ADR parameter change."
        },
        "recent_mac_command_identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3MACCommandIdentifier"
          },
          "description": "MAC command identifiers sent by the end device in the last received uplink.\nThe Network Server may choose to store only certain types of MAC\ncommand identifiers in the underlying implementation."
        },
        "pending_relay_downlink": {
          "$ref": "#/definitions/v3RelayForwardDownlinkReq",
          "description": "Pending relay downlink contents.\nThe pending downlink will be scheduled to the relay in either Rx1 or Rx2.\nThe pending downlink will be cleared after the scheduling attempt."
        }
      },
      "description": "MACState represents the state of MAC layer of the device.\nMACState is reset on each join for OTAA or ResetInd for ABP devices.\nThis is used internally by the Network Server."
    },
    "v3MACStateDownlinkMessage": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/MACStateDownlinkMessageMessage"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A minimal DownlinkMessage definition which is binary compatible with the top level DownlinkMessage message.\nUsed for type safe recent downlink storage."
    },
    "v3MACStateJoinRequest": {
      "type": "object",
      "properties": {
        "downlink_settings": {
          "$ref": "#/definitions/v3DLSettings"
        },
        "rx_delay": {
          "$ref": "#/definitions/v3RxDelay"
        },
        "cf_list": {
          "$ref": "#/definitions/v3CFList"
        }
      }
    },
    "v3MACStateUplinkMessage": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/lorawanv3Message"
        },
        "settings": {
          "$ref": "#/definitions/MACStateUplinkMessageTxSettings"
        },
        "rx_metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MACStateUplinkMessageRxMetadata"
          }
        },
        "received_at": {
          "type": "string",
          "format": "date-time"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "device_channel_index": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "A minimal UplinkMessage definition which is binary compatible with the top level UplinkMessage message.\nUsed for type safe recent uplink storage."
    },
    "v3MACVersion": {
      "type": "string",
      "enum": [
        "MAC_UNKNOWN",
        "MAC_V1_0",
        "MAC_V1_0_1",
        "MAC_V1_0_2",
        "MAC_V1_1",
        "MAC_V1_0_3",
        "MAC_V1_0_4"
      ],
      "default": "MAC_UNKNOWN"
    },
    "v3MQTTConnectionInfo": {
      "type": "object",
      "properties": {
        "public_address": {
          "type": "string",
          "description": "The public listen address of the frontend."
        },
        "public_tls_address": {
          "type": "string",
          "description": "The public listen address of the TLS frontend."
        },
        "username": {
          "type": "string",
          "description": "The username to be used for authentication."
        }
      },
      "description": "The connection information of an MQTT frontend."
    },
    "v3MType": {
      "type": "string",
      "enum": [
        "JOIN_REQUEST",
        "JOIN_ACCEPT",
        "UNCONFIRMED_UP",
        "UNCONFIRMED_DOWN",
        "CONFIRMED_UP",
        "CONFIRMED_DOWN",
        "REJOIN_REQUEST",
        "PROPRIETARY"
      ],
      "default": "JOIN_REQUEST"
    },
    "v3Major": {
      "type": "string",
      "enum": [
        "LORAWAN_R1"
      ],
      "default": "LORAWAN_R1"
    },
    "v3ManagedGateway": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/lorawanv3GatewayIdentifiers"
        },
        "version_ids": {
          "$ref": "#/definitions/v3GatewayVersionIdentifiers"
        },
        "cellular_imei": {
          "type": "string"
        },
        "cellular_imsi": {
          "type": "string"
        },
        "wifi_mac_address": {
          "type": "string",
          "format": "string",
          "example": "EC656E000100"
        },
        "ethernet_mac_address": {
          "type": "string",
          "format": "string",
          "example": "EC656E000100"
        },
        "wifi_profile_id": {
          "type": "string"
        },
        "ethernet_profile_id": {
          "type": "string"
        }
      }
    },
    "v3ManagedGatewayCellularBackhaul": {
      "type": "object",
      "properties": {
        "network_interface": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceInfo"
        },
        "operator": {
          "type": "string"
        },
        "rssi": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v3ManagedGatewayConfigurationServiceUpdateBody": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            },
            "version_ids": {
              "$ref": "#/definitions/v3GatewayVersionIdentifiers"
            },
            "cellular_imei": {
              "type": "string"
            },
            "cellular_imsi": {
              "type": "string"
            },
            "wifi_mac_address": {
              "type": "string",
              "format": "string",
              "example": "EC656E000100"
            },
            "ethernet_mac_address": {
              "type": "string",
              "format": "string",
              "example": "EC656E000100"
            },
            "wifi_profile_id": {
              "type": "string"
            },
            "ethernet_profile_id": {
              "type": "string"
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the gateway fields that should be updated."
        }
      }
    },
    "v3ManagedGatewayControllerConnection": {
      "type": "object",
      "properties": {
        "network_interface_type": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceType"
        }
      }
    },
    "v3ManagedGatewayEthernetBackhaul": {
      "type": "object",
      "properties": {
        "network_interface": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceInfo"
        }
      }
    },
    "v3ManagedGatewayEthernetProfile": {
      "type": "object",
      "properties": {
        "profile_id": {
          "type": "string"
        },
        "profile_name": {
          "type": "string"
        },
        "shared": {
          "type": "boolean"
        },
        "network_interface_addresses": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceAddresses"
        }
      }
    },
    "v3ManagedGatewayEthernetProfileConfigurationServiceCreateBody": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "$ref": "#/definitions/v3OrganizationIdentifiers"
            },
            "user_ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            }
          },
          "description": "OrganizationOrUserIdentifiers contains either organization or user identifiers."
        }
      }
    },
    "v3ManagedGatewayEthernetProfileConfigurationServiceUpdateBody": {
      "type": "object",
      "properties": {
        "profile": {
          "type": "object",
          "properties": {
            "profile_name": {
              "type": "string"
            },
            "shared": {
              "type": "boolean"
            },
            "network_interface_addresses": {
              "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceAddresses"
            }
          }
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "$ref": "#/definitions/v3OrganizationIdentifiers"
            },
            "user_ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            }
          },
          "description": "OrganizationOrUserIdentifiers contains either organization or user identifiers."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the gateway fields that should be updated."
        }
      }
    },
    "v3ManagedGatewayEthernetProfiles": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ManagedGatewayEthernetProfile"
          }
        }
      }
    },
    "v3ManagedGatewayEventData": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/v3ManagedGateway"
        },
        "location": {
          "$ref": "#/definitions/lorawanv3Location"
        },
        "system_status": {
          "$ref": "#/definitions/v3ManagedGatewaySystemStatus"
        },
        "controller_connection": {
          "$ref": "#/definitions/v3ManagedGatewayControllerConnection"
        },
        "gateway_server_connection": {
          "$ref": "#/definitions/v3ManagedGatewayGatewayServerConnection"
        },
        "cellular_backhaul": {
          "$ref": "#/definitions/v3ManagedGatewayCellularBackhaul"
        },
        "wifi_backhaul": {
          "$ref": "#/definitions/v3ManagedGatewayWiFiBackhaul"
        },
        "ethernet_backhaul": {
          "$ref": "#/definitions/v3ManagedGatewayEthernetBackhaul"
        }
      }
    },
    "v3ManagedGatewayGatewayServerConnection": {
      "type": "object",
      "properties": {
        "network_interface_type": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceType"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "v3ManagedGatewayNetworkInterfaceAddresses": {
      "type": "object",
      "properties": {
        "ip_addresses": {
          "type": "string",
          "example": [
            "192.0.2.0",
            "2001:db8::1"
          ],
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "subnet_mask": {
          "type": "string",
          "format": "string",
          "example": "192.0.2.0"
        },
        "gateway": {
          "type": "string",
          "format": "string",
          "example": "192.0.2.0"
        },
        "dns_servers": {
          "type": "string",
          "example": [
            "192.0.2.0",
            "192.0.2.1"
          ],
          "items": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "v3ManagedGatewayNetworkInterfaceInfo": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceStatus"
        },
        "dhcp_enabled": {
          "type": "boolean"
        },
        "addresses": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceAddresses"
        }
      }
    },
    "v3ManagedGatewayNetworkInterfaceStatus": {
      "type": "string",
      "enum": [
        "MANAGED_GATEWAY_NETWORK_INTERFACE_STATUS_UNSPECIFIED",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_STATUS_DOWN",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_STATUS_UP",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_STATUS_FAILED"
      ],
      "default": "MANAGED_GATEWAY_NETWORK_INTERFACE_STATUS_UNSPECIFIED"
    },
    "v3ManagedGatewayNetworkInterfaceType": {
      "type": "string",
      "enum": [
        "MANAGED_GATEWAY_NETWORK_INTERFACE_TYPE_UNSPECIFIED",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_TYPE_CELLULAR",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_TYPE_WIFI",
        "MANAGED_GATEWAY_NETWORK_INTERFACE_TYPE_ETHERNET"
      ],
      "default": "MANAGED_GATEWAY_NETWORK_INTERFACE_TYPE_UNSPECIFIED"
    },
    "v3ManagedGatewaySystemStatus": {
      "type": "object",
      "properties": {
        "cpu_temperature": {
          "type": "number",
          "format": "float",
          "description": "CPU temperature (Celsius)."
        }
      }
    },
    "v3ManagedGatewayWiFiAccessPoint": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string"
        },
        "bssid": {
          "type": "string",
          "format": "string",
          "example": "EC656E000100"
        },
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "authentication_mode": {
          "type": "string"
        },
        "rssi": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v3ManagedGatewayWiFiAccessPoints": {
      "type": "object",
      "properties": {
        "access_points": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ManagedGatewayWiFiAccessPoint"
          }
        }
      }
    },
    "v3ManagedGatewayWiFiBackhaul": {
      "type": "object",
      "properties": {
        "network_interface": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceInfo"
        },
        "ssid": {
          "type": "string"
        },
        "bssid": {
          "type": "string",
          "format": "string",
          "example": "EC656E000100"
        },
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "authentication_mode": {
          "type": "string"
        },
        "rssi": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v3ManagedGatewayWiFiProfile": {
      "type": "object",
      "properties": {
        "profile_id": {
          "type": "string"
        },
        "profile_name": {
          "type": "string"
        },
        "shared": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "network_interface_addresses": {
          "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceAddresses"
        }
      }
    },
    "v3ManagedGatewayWiFiProfileConfigurationServiceCreateBody": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "$ref": "#/definitions/v3OrganizationIdentifiers"
            },
            "user_ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            }
          },
          "description": "OrganizationOrUserIdentifiers contains either organization or user identifiers."
        }
      }
    },
    "v3ManagedGatewayWiFiProfileConfigurationServiceUpdateBody": {
      "type": "object",
      "properties": {
        "profile": {
          "type": "object",
          "properties": {
            "profile_name": {
              "type": "string"
            },
            "shared": {
              "type": "boolean"
            },
            "ssid": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "network_interface_addresses": {
              "$ref": "#/definitions/v3ManagedGatewayNetworkInterfaceAddresses"
            }
          }
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "$ref": "#/definitions/v3OrganizationIdentifiers"
            },
            "user_ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            }
          },
          "description": "OrganizationOrUserIdentifiers contains either organization or user identifiers."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the gateway fields that should be updated."
        }
      }
    },
    "v3ManagedGatewayWiFiProfiles": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ManagedGatewayWiFiProfile"
          }
        }
      }
    },
    "v3MessagePayloadDecoder": {
      "type": "object",
      "properties": {
        "formatter": {
          "$ref": "#/definitions/v3PayloadFormatter",
          "description": "Payload formatter type."
        },
        "formatter_parameter": {
          "type": "string",
          "description": "Parameter for the formatter, must be set together."
        },
        "codec_id": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MessagePayloadDecoderExample"
          }
        }
      }
    },
    "v3MessagePayloadDecoderExample": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "input": {
          "$ref": "#/definitions/v3EncodedMessagePayload"
        },
        "output": {
          "$ref": "#/definitions/v3DecodedMessagePayload"
        }
      }
    },
    "v3MessagePayloadEncoder": {
      "type": "object",
      "properties": {
        "formatter": {
          "$ref": "#/definitions/v3PayloadFormatter",
          "description": "Payload formatter type."
        },
        "formatter_parameter": {
          "type": "string",
          "description": "Parameter for the formatter, must be set together."
        },
        "codec_id": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3MessagePayloadEncoderExample"
          }
        }
      }
    },
    "v3MessagePayloadEncoderExample": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "input": {
          "$ref": "#/definitions/v3DecodedMessagePayload"
        },
        "output": {
          "$ref": "#/definitions/v3EncodedMessagePayload"
        }
      }
    },
    "v3MessagePayloadFormatters": {
      "type": "object",
      "properties": {
        "up_formatter": {
          "$ref": "#/definitions/v3PayloadFormatter",
          "description": "Payload formatter for uplink messages, must be set together with its parameter."
        },
        "up_formatter_parameter": {
          "type": "string",
          "description": "Parameter for the up_formatter, must be set together. The API enforces a maximum length of 16KB, but the size may be restricted further by deployment configuration."
        },
        "down_formatter": {
          "$ref": "#/definitions/v3PayloadFormatter",
          "description": "Payload formatter for downlink messages, must be set together with its parameter."
        },
        "down_formatter_parameter": {
          "type": "string",
          "description": "Parameter for the down_formatter, must be set together. The API enforces a maximum length of 16KB, but the size may be restricted further by deployment configuration."
        }
      }
    },
    "v3Minor": {
      "type": "string",
      "enum": [
        "MINOR_RFU_0",
        "MINOR_1",
        "MINOR_RFU_2",
        "MINOR_RFU_3",
        "MINOR_RFU_4",
        "MINOR_RFU_5",
        "MINOR_RFU_6",
        "MINOR_RFU_7",
        "MINOR_RFU_8",
        "MINOR_RFU_9",
        "MINOR_RFU_10",
        "MINOR_RFU_11",
        "MINOR_RFU_12",
        "MINOR_RFU_13",
        "MINOR_RFU_14",
        "MINOR_RFU_15"
      ],
      "default": "MINOR_RFU_0"
    },
    "v3NetworkIdentifiers": {
      "type": "object",
      "properties": {
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013",
          "description": "LoRa Alliance NetID."
        },
        "ns_id": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD",
          "description": "LoRaWAN NSID (EUI-64) that uniquely identifies the Network Server instance."
        },
        "tenant_id": {
          "type": "string",
          "description": "Optional tenant identifier for multi-tenant deployments."
        },
        "cluster_id": {
          "type": "string",
          "description": "Cluster identifier of the Network Server."
        },
        "cluster_address": {
          "type": "string",
          "description": "Cluster address of the Network Server."
        },
        "tenant_address": {
          "type": "string",
          "description": "Optional tenant address for multi-tenant deployments."
        }
      },
      "description": "Identifies a Network Server."
    },
    "v3Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The immutable ID of the notification. Generated by the server."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the notification was triggered."
        },
        "entity_ids": {
          "$ref": "#/definitions/v3EntityIdentifiers",
          "description": "The entity this notification is about."
        },
        "notification_type": {
          "type": "string",
          "description": "The type of this notification."
        },
        "data": {
          "$ref": "#/definitions/protobufAny",
          "description": "The data related to the notification."
        },
        "sender_ids": {
          "$ref": "#/definitions/v3UserIdentifiers",
          "description": "If the notification was triggered by a user action, this contains the identifiers of the user that triggered the notification."
        },
        "receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3NotificationReceiver"
          },
          "description": "Relation of the notification receiver to the entity."
        },
        "email": {
          "type": "boolean",
          "description": "Whether an email was sent for the notification."
        },
        "status": {
          "$ref": "#/definitions/v3NotificationStatus",
          "description": "The status of the notification."
        },
        "status_updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the notification status was updated."
        }
      }
    },
    "v3NotificationReceiver": {
      "type": "string",
      "enum": [
        "NOTIFICATION_RECEIVER_UNKNOWN",
        "NOTIFICATION_RECEIVER_COLLABORATOR",
        "NOTIFICATION_RECEIVER_ADMINISTRATIVE_CONTACT",
        "NOTIFICATION_RECEIVER_TECHNICAL_CONTACT"
      ],
      "default": "NOTIFICATION_RECEIVER_UNKNOWN",
      "description": " - NOTIFICATION_RECEIVER_COLLABORATOR: Notification is received by collaborators of the entity.\nIf the collaborator is an organization, the notification is received by organization members.\n - NOTIFICATION_RECEIVER_ADMINISTRATIVE_CONTACT: Notification is received by administrative contact of the entity.\nIf this is an organization, the notification is received by organization members.\n - NOTIFICATION_RECEIVER_TECHNICAL_CONTACT: Notification is received by technical contact of the entity.\nIf this is an organization, the notification is received by organization members."
    },
    "v3NotificationStatus": {
      "type": "string",
      "enum": [
        "NOTIFICATION_STATUS_UNSEEN",
        "NOTIFICATION_STATUS_SEEN",
        "NOTIFICATION_STATUS_ARCHIVED"
      ],
      "default": "NOTIFICATION_STATUS_UNSEEN"
    },
    "v3NsEndDeviceRegistrySetBody": {
      "type": "object",
      "properties": {
        "end_device": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "device_id": {
                  "type": "string"
                },
                "application_ids": {
                  "type": "object"
                },
                "dev_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN DevEUI."
                },
                "join_eui": {
                  "type": "string",
                  "format": "string",
                  "example": "70B3D57ED000ABCD",
                  "description": "The LoRaWAN JoinEUI (AppEUI until LoRaWAN 1.0.3 end devices)."
                },
                "dev_addr": {
                  "type": "string",
                  "format": "string",
                  "example": "2600ABCD",
                  "description": "The LoRaWAN DevAddr."
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Friendly name of the device. Stored in Entity Registry."
            },
            "description": {
              "type": "string",
              "description": "Description of the device. Stored in Entity Registry."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this end device. Typically used for organizing end devices or for storing integration-specific data. Stored in Entity Registry."
            },
            "version_ids": {
              "$ref": "#/definitions/v3EndDeviceVersionIdentifiers",
              "description": "Version Identifiers. Stored in Entity Registry, Network Server and Application Server."
            },
            "service_profile_id": {
              "type": "string",
              "description": "Default service profile. Stored in Entity Registry."
            },
            "network_server_address": {
              "type": "string",
              "description": "The address of the Network Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "network_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Network Server to use for wrapping network session keys.\nStored in Join Server."
            },
            "application_server_address": {
              "type": "string",
              "description": "The address of the Application Server where this device is supposed to be registered.\nStored in Entity Registry and Join Server.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "application_server_kek_label": {
              "type": "string",
              "description": "The KEK label of the Application Server to use for wrapping the application session key.\nStored in Join Server."
            },
            "application_server_id": {
              "type": "string",
              "description": "The AS-ID of the Application Server to use.\nStored in Join Server."
            },
            "join_server_address": {
              "type": "string",
              "description": "The address of the Join Server where this device is supposed to be registered.\nStored in Entity Registry.\nThe typical format of the address is \"host:port\". If the port is omitted,\nthe normal port inference (with DNS lookup, otherwise defaults) is used.\nThe connection shall be established with transport layer security (TLS).\nCustom certificate authorities may be configured out-of-band."
            },
            "locations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/lorawanv3Location"
              },
              "description": "Location of the device. Stored in Entity Registry."
            },
            "picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "Stored in Entity Registry."
            },
            "supports_class_b": {
              "type": "boolean",
              "description": "Whether the device supports class B.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_class_c": {
              "type": "boolean",
              "description": "Whether the device supports class C.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_version": {
              "$ref": "#/definitions/v3MACVersion",
              "description": "LoRaWAN MAC version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "lorawan_phy_version": {
              "$ref": "#/definitions/v3PHYVersion",
              "description": "LoRaWAN PHY version. Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "frequency_plan_id": {
              "type": "string",
              "description": "ID of the frequency plan used by this device.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "min_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Minimum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "max_frequency": {
              "type": "string",
              "format": "uint64",
              "description": "Maximum frequency the device is capable of using (Hz). Stored in Network Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "supports_join": {
              "type": "boolean",
              "description": "The device supports join (it's OTAA).\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "resets_join_nonces": {
              "type": "boolean",
              "description": "Whether the device resets the join and dev nonces (not LoRaWAN compliant). Stored in Join Server.\nCopied on creation from template identified by version_ids, if any or from the home Network Server device profile, if any."
            },
            "root_keys": {
              "$ref": "#/definitions/v3RootKeys",
              "description": "Device root keys. Stored in Join Server."
            },
            "net_id": {
              "type": "string",
              "format": "string",
              "example": "000013",
              "description": "Home NetID. Stored in Join Server."
            },
            "mac_settings": {
              "$ref": "#/definitions/v3MACSettings",
              "description": "Settings for how the Network Server handles MAC layer for this device. Stored in Network Server."
            },
            "mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "MAC state of the device. Stored in Network Server."
            },
            "pending_mac_state": {
              "$ref": "#/definitions/v3MACState",
              "description": "Pending MAC state of the device. Stored in Network Server."
            },
            "session": {
              "$ref": "#/definitions/v3Session",
              "description": "Current session of the device. Stored in Network Server and Application Server."
            },
            "pending_session": {
              "$ref": "#/definitions/v3Session",
              "description": "Pending session. Stored in Network Server and Application Server until RekeyInd is received."
            },
            "last_dev_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last DevNonce used.\nThis field is only used for devices using LoRaWAN version 1.1 and later.\nStored in Join Server."
            },
            "used_dev_nonces": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Used DevNonces sorted in ascending order.\nThis field is only used for devices using LoRaWAN versions preceding 1.1.\nStored in Join Server."
            },
            "last_join_nonce": {
              "type": "integer",
              "format": "int64",
              "description": "Last JoinNonce/AppNonce(for devices using LoRaWAN versions preceding 1.1) used.\nStored in Join Server."
            },
            "last_rj_count_0": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 0/2).\nStored in Join Server."
            },
            "last_rj_count_1": {
              "type": "integer",
              "format": "int64",
              "description": "Last Rejoin counter value used (type 1).\nStored in Join Server."
            },
            "last_dev_status_received_at": {
              "type": "string",
              "format": "date-time",
              "description": "Time when last DevStatus MAC command was received.\nStored in Network Server."
            },
            "power_state": {
              "$ref": "#/definitions/v3PowerState",
              "description": "The power state of the device; whether it is battery-powered or connected to an external power source.\nReceived via the DevStatus MAC command at status_received_at.\nStored in Network Server."
            },
            "battery_percentage": {
              "type": "number",
              "format": "float",
              "description": "Latest-known battery percentage of the device.\nReceived via the DevStatus MAC command at last_dev_status_received_at or earlier.\nStored in Network Server."
            },
            "downlink_margin": {
              "type": "integer",
              "format": "int32",
              "description": "Demodulation signal-to-noise ratio (dB).\nReceived via the DevStatus MAC command at last_dev_status_received_at.\nStored in Network Server."
            },
            "queued_application_downlinks": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ApplicationDownlink"
              },
              "description": "Queued Application downlink messages. Stored in Application Server,\nwhich sets them on the Network Server.\nThis field is deprecated and is always set equal to session.queued_application_downlinks."
            },
            "formatters": {
              "$ref": "#/definitions/v3MessagePayloadFormatters",
              "description": "The payload formatters for this end device. Stored in Application Server.\nCopied on creation from template identified by version_ids."
            },
            "provisioner_id": {
              "type": "string",
              "description": "ID of the provisioner. Stored in Join Server."
            },
            "provisioning_data": {
              "type": "object",
              "description": "Vendor-specific provisioning data. Stored in Join Server."
            },
            "multicast": {
              "type": "boolean",
              "description": "Indicates whether this device represents a multicast group."
            },
            "claim_authentication_code": {
              "$ref": "#/definitions/v3EndDeviceAuthenticationCode",
              "description": "Authentication code to claim ownership of the end device.\nFrom TTS v3.21.0 this field is stored in the Identity Server.\nFor TTS versions \u003c 3.21.0, this field is stored in the Join Server.\nThe value stored on the Identity Server takes precedence."
            },
            "skip_payload_crypto": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field is deprecated, use skip_payload_crypto_override instead."
            },
            "skip_payload_crypto_override": {
              "type": "boolean",
              "description": "Skip decryption of uplink payloads and encryption of downlink payloads.\nThis field overrides the application-level setting."
            },
            "activated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the device has been activated. Stored in the Entity Registry.\nThis field is set by the Application Server when an end device sends\nits first uplink.\nThe Application Server will use the field in order to avoid repeated\ncalls to the Entity Registry.\nThe field cannot be unset once set."
            },
            "last_seen_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when a device uplink has been last observed.\nThis field is set by the Application Server and stored in the Identity Server."
            },
            "serial_number": {
              "type": "string"
            },
            "lora_alliance_profile_ids": {
              "$ref": "#/definitions/v3LoRaAllianceProfileIdentifiers"
            }
          },
          "description": "Defines an End Device registration and its state on the network.\nThe persistence of the EndDevice is divided between the Network Server, Application Server and Join Server.\nSDKs are responsible for combining (if desired) the three."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the end device fields that should be updated.\nSee the API reference for which fields can be set on the different services."
        }
      }
    },
    "v3NwkSKeysResponse": {
      "type": "object",
      "properties": {
        "f_nwk_s_int_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Forwarding Network Session Integrity Key (or Network Session Key in 1.0 compatibility mode)."
        },
        "s_nwk_s_int_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Serving Network Session Integrity Key."
        },
        "nwk_s_enc_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Network Session Encryption Key."
        }
      }
    },
    "v3OAuthAccessToken": {
      "type": "object",
      "properties": {
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        },
        "user_session_id": {
          "type": "string"
        },
        "client_ids": {
          "$ref": "#/definitions/v3ClientIdentifiers"
        },
        "id": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3OAuthAccessTokens": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3OAuthAccessToken"
          }
        }
      }
    },
    "v3OAuthClientAuthorization": {
      "type": "object",
      "properties": {
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        },
        "client_ids": {
          "$ref": "#/definitions/v3ClientIdentifiers"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3OAuthClientAuthorizations": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3OAuthClientAuthorization"
          }
        }
      }
    },
    "v3Organization": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3OrganizationIdentifiers",
          "description": "The identifiers of the organization. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the organization was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the organization was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the organization was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the organization. This information is public and can be seen by any authenticated user in the network."
        },
        "description": {
          "type": "string",
          "description": "A description for the organization."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this organization. Typically used for organizing organizations or for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this organization. Typically used to indicate who to contact with security/billing questions about the organization.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "fanout_notifications": {
          "type": "boolean",
          "description": "Determines if a notification will be sent to the collaborators. If false it, notifications will be sent only to the\nadministrative or technical contact."
        }
      }
    },
    "v3OrganizationAccessCreateAPIKeyBody": {
      "type": "object",
      "properties": {
        "organization_ids": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3OrganizationAccessSetCollaboratorBody": {
      "type": "object",
      "properties": {
        "organization_ids": {
          "type": "object"
        },
        "collaborator": {
          "$ref": "#/definitions/v3Collaborator"
        }
      }
    },
    "v3OrganizationAccessUpdateAPIKeyBody": {
      "type": "object",
      "properties": {
        "organization_ids": {
          "type": "object"
        },
        "api_key": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Immutable and unique secret value of the API key.\nGenerated by the Access Server."
            },
            "name": {
              "type": "string",
              "description": "User-defined (friendly) name for the API key."
            },
            "rights": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3Right"
              },
              "description": "Rights that are granted to this API key."
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "expires_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the api key fields that should be updated."
        }
      }
    },
    "v3OrganizationIdentifiers": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "This ID shares namespace with user IDs."
        }
      }
    },
    "v3OrganizationOrUserIdentifiers": {
      "type": "object",
      "properties": {
        "organization_ids": {
          "$ref": "#/definitions/v3OrganizationIdentifiers"
        },
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        }
      },
      "description": "OrganizationOrUserIdentifiers contains either organization or user identifiers."
    },
    "v3OrganizationRegistryCreateBody": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v3Organization"
        },
        "collaborator": {
          "type": "object",
          "properties": {
            "organization_ids": {
              "$ref": "#/definitions/v3OrganizationIdentifiers"
            },
            "user_ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              }
            }
          },
          "description": "Collaborator to grant all rights on the newly created application.\nNOTE: It is currently not possible to have organizations collaborating on\nother organizations.",
          "title": "Collaborator to grant all rights on the newly created application.\nNOTE: It is currently not possible to have organizations collaborating on\nother organizations."
        }
      }
    },
    "v3OrganizationRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "description": "The identifiers of the organization. These are public and can be seen by any authenticated user in the network.",
              "title": "The identifiers of the organization. These are public and can be seen by any authenticated user in the network."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the organization was created. This information is public and can be seen by any authenticated user in the network."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the organization was last updated. This information is public and can be seen by any authenticated user in the network."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the organization was deleted. This information is public and can be seen by any authenticated user in the network."
            },
            "name": {
              "type": "string",
              "description": "The name of the organization. This information is public and can be seen by any authenticated user in the network."
            },
            "description": {
              "type": "string",
              "description": "A description for the organization."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this organization. Typically used for organizing organizations or for storing integration-specific data."
            },
            "contact_info": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ContactInfo"
              },
              "description": "Contact information for this organization. Typically used to indicate who to contact with security/billing questions about the organization.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
            },
            "administrative_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "technical_contact": {
              "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
            },
            "fanout_notifications": {
              "type": "boolean",
              "description": "Determines if a notification will be sent to the collaborators. If false it, notifications will be sent only to the\nadministrative or technical contact."
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the organization fields that should be updated."
        }
      }
    },
    "v3Organizations": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3Organization"
          }
        }
      }
    },
    "v3PHYVersion": {
      "type": "string",
      "enum": [
        "PHY_UNKNOWN",
        "PHY_V1_0",
        "TS001_V1_0",
        "PHY_V1_0_1",
        "TS001_V1_0_1",
        "PHY_V1_0_2_REV_A",
        "RP001_V1_0_2",
        "PHY_V1_0_2_REV_B",
        "RP001_V1_0_2_REV_B",
        "PHY_V1_1_REV_A",
        "RP001_V1_1_REV_A",
        "PHY_V1_1_REV_B",
        "RP001_V1_1_REV_B",
        "PHY_V1_0_3_REV_A",
        "RP001_V1_0_3_REV_A",
        "RP002_V1_0_0",
        "RP002_V1_0_1",
        "RP002_V1_0_2",
        "RP002_V1_0_3",
        "RP002_V1_0_4"
      ],
      "default": "PHY_UNKNOWN"
    },
    "v3PacketBrokerDefaultGatewayVisibility": {
      "type": "object",
      "properties": {
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the policy got last updated."
        },
        "visibility": {
          "$ref": "#/definitions/v3PacketBrokerGatewayVisibility"
        }
      }
    },
    "v3PacketBrokerDefaultRoutingPolicy": {
      "type": "object",
      "properties": {
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the policy got last updated."
        },
        "uplink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyUplink",
          "description": "Uplink policy."
        },
        "downlink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyDownlink",
          "description": "Downlink policy."
        }
      }
    },
    "v3PacketBrokerDevAddrBlock": {
      "type": "object",
      "properties": {
        "dev_addr_prefix": {
          "$ref": "#/definitions/v3DevAddrPrefix"
        },
        "home_network_cluster_id": {
          "type": "string"
        }
      }
    },
    "v3PacketBrokerGateway": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3PacketBrokerGatewayGatewayIdentifiers"
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "This field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
        },
        "antennas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3GatewayAntenna"
          }
        },
        "status_public": {
          "type": "boolean"
        },
        "location_public": {
          "type": "boolean"
        },
        "frequency_plan_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "update_location_from_status": {
          "type": "boolean"
        },
        "online": {
          "type": "boolean"
        },
        "rx_rate": {
          "type": "number",
          "format": "float",
          "description": "Received packets rate (number of packets per hour).\nThis field gets updated when a value is set."
        },
        "tx_rate": {
          "type": "number",
          "format": "float",
          "description": "Transmitted packets rate (number of packets per hour).\nThis field gets updated when a value is set."
        }
      },
      "description": "Gateway respresentation for Packet Broker.\nThis is a subset and superset of the Gateway message using the same data types and field tags to achieve initial wire compatibility.\nThere is no (longer) wire compatibility needed; new fields may use any tag."
    },
    "v3PacketBrokerGatewayGatewayIdentifiers": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "type": "string"
        },
        "eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        }
      }
    },
    "v3PacketBrokerGatewayVisibility": {
      "type": "object",
      "properties": {
        "location": {
          "type": "boolean",
          "description": "Show location."
        },
        "antenna_placement": {
          "type": "boolean",
          "description": "Show antenna placement (indoor/outdoor)."
        },
        "antenna_count": {
          "type": "boolean",
          "description": "Show antenna count."
        },
        "fine_timestamps": {
          "type": "boolean",
          "description": "Show whether the gateway produces fine timestamps."
        },
        "contact_info": {
          "type": "boolean",
          "description": "Show contact information."
        },
        "status": {
          "type": "boolean",
          "description": "Show status (online/offline)."
        },
        "frequency_plan": {
          "type": "boolean",
          "description": "Show frequency plan."
        },
        "packet_rates": {
          "type": "boolean",
          "description": "Show receive and transmission packet rates."
        }
      }
    },
    "v3PacketBrokerInfo": {
      "type": "object",
      "properties": {
        "registration": {
          "$ref": "#/definitions/v3PacketBrokerNetwork",
          "description": "The current registration, unset if there isn't a registration."
        },
        "forwarder_enabled": {
          "type": "boolean",
          "description": "Whether the server is configured as Forwarder (with gateways)."
        },
        "home_network_enabled": {
          "type": "boolean",
          "description": "Whether the server is configured as Home Network (with end devices)."
        },
        "register_enabled": {
          "type": "boolean",
          "description": "Whether the registration can be changed."
        }
      }
    },
    "v3PacketBrokerNetwork": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/v3PacketBrokerNetworkIdentifier",
          "description": "Packet Broker network identifier."
        },
        "name": {
          "type": "string",
          "description": "Name of the network."
        },
        "dev_addr_blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3PacketBrokerDevAddrBlock"
          },
          "description": "DevAddr blocks that are assigned to this registration."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information.\nThis field is deprecated. Use administrative_contact and technical_contact instead."
        },
        "administrative_contact": {
          "$ref": "#/definitions/v3ContactInfo"
        },
        "technical_contact": {
          "$ref": "#/definitions/v3ContactInfo"
        },
        "listed": {
          "type": "boolean",
          "description": "Whether the network is listed so it can be viewed by other networks."
        }
      }
    },
    "v3PacketBrokerNetworkIdentifier": {
      "type": "object",
      "properties": {
        "net_id": {
          "type": "integer",
          "format": "int64",
          "description": "LoRa Alliance NetID."
        },
        "tenant_id": {
          "type": "string",
          "description": "Tenant identifier if the registration leases DevAddr blocks from a NetID."
        }
      }
    },
    "v3PacketBrokerNetworks": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3PacketBrokerNetwork"
          }
        }
      }
    },
    "v3PacketBrokerRegisterRequest": {
      "type": "object",
      "properties": {
        "listed": {
          "type": "boolean",
          "description": "Whether the network should be listed in Packet Broker.\nIf unset, the value is taken from the registration settings."
        }
      }
    },
    "v3PacketBrokerRouteHop": {
      "type": "object",
      "properties": {
        "received_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the service received the message."
        },
        "sender_name": {
          "type": "string",
          "description": "Sender of the message, typically the authorized client identifier."
        },
        "sender_address": {
          "type": "string",
          "description": "Sender IP address or host name."
        },
        "receiver_name": {
          "type": "string",
          "description": "Receiver of the message."
        },
        "receiver_agent": {
          "type": "string",
          "description": "Receiver agent."
        }
      }
    },
    "v3PacketBrokerRoutingPolicies": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3PacketBrokerRoutingPolicy"
          }
        }
      }
    },
    "v3PacketBrokerRoutingPolicy": {
      "type": "object",
      "properties": {
        "forwarder_id": {
          "$ref": "#/definitions/v3PacketBrokerNetworkIdentifier",
          "description": "Packet Broker identifier of the Forwarder."
        },
        "home_network_id": {
          "$ref": "#/definitions/v3PacketBrokerNetworkIdentifier",
          "description": "Packet Broker identifier of the Home Network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the policy got last updated."
        },
        "uplink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyUplink",
          "description": "Uplink policy."
        },
        "downlink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyDownlink",
          "description": "Downlink policy."
        }
      }
    },
    "v3PacketBrokerRoutingPolicyDownlink": {
      "type": "object",
      "properties": {
        "join_accept": {
          "type": "boolean",
          "description": "Allow join-accept messages."
        },
        "mac_data": {
          "type": "boolean",
          "description": "Allow downlink messages with FPort of 0."
        },
        "application_data": {
          "type": "boolean",
          "description": "Allow downlink messages with FPort between 1 and 255."
        }
      }
    },
    "v3PacketBrokerRoutingPolicyUplink": {
      "type": "object",
      "properties": {
        "join_request": {
          "type": "boolean",
          "description": "Forward join-request messages."
        },
        "mac_data": {
          "type": "boolean",
          "description": "Forward uplink messages with FPort of 0."
        },
        "application_data": {
          "type": "boolean",
          "description": "Forward uplink messages with FPort between 1 and 255."
        },
        "signal_quality": {
          "type": "boolean",
          "description": "Forward RSSI and SNR."
        },
        "localization": {
          "type": "boolean",
          "description": "Forward gateway location, RSSI, SNR and fine timestamp."
        }
      }
    },
    "v3ParseEndDeviceQRCodeRequest": {
      "type": "object",
      "properties": {
        "format_id": {
          "type": "string",
          "description": "QR code format identifier.\nEnumerate available formats with the rpc `ListFormats`.\nIf this field is not specified, the server will attempt to parse the data with each known format."
        },
        "qr_code": {
          "type": "string",
          "format": "byte",
          "description": "Raw QR code contents."
        }
      }
    },
    "v3ParseEndDeviceQRCodeResponse": {
      "type": "object",
      "properties": {
        "format_id": {
          "type": "string",
          "description": "Identifier of the format used to successfully parse the QR code data."
        },
        "end_device_template": {
          "$ref": "#/definitions/v3EndDeviceTemplate"
        }
      }
    },
    "v3PayloadFormatter": {
      "type": "string",
      "enum": [
        "FORMATTER_NONE",
        "FORMATTER_REPOSITORY",
        "FORMATTER_GRPC_SERVICE",
        "FORMATTER_JAVASCRIPT",
        "FORMATTER_CAYENNELPP"
      ],
      "default": "FORMATTER_NONE",
      "description": " - FORMATTER_NONE: No payload formatter to work with raw payload only.\n - FORMATTER_REPOSITORY: Use payload formatter for the end device type from a repository.\n - FORMATTER_GRPC_SERVICE: gRPC service payload formatter. The parameter is the host:port of the service.\n - FORMATTER_JAVASCRIPT: Custom payload formatter that executes Javascript code. The parameter is a JavaScript filename.\n - FORMATTER_CAYENNELPP: CayenneLPP payload formatter.\n\nMore payload formatters can be added."
    },
    "v3Picture": {
      "type": "object",
      "properties": {
        "embedded": {
          "$ref": "#/definitions/PictureEmbedded",
          "description": "Embedded picture.\nOmitted if there are external URLs available (in sizes)."
        },
        "sizes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "URLs of the picture for different sizes, if available on a CDN."
        }
      }
    },
    "v3PingSlotPeriod": {
      "type": "string",
      "enum": [
        "PING_EVERY_1S",
        "PING_EVERY_2S",
        "PING_EVERY_4S",
        "PING_EVERY_8S",
        "PING_EVERY_16S",
        "PING_EVERY_32S",
        "PING_EVERY_64S",
        "PING_EVERY_128S"
      ],
      "default": "PING_EVERY_1S",
      "description": " - PING_EVERY_1S: Every second.\n - PING_EVERY_2S: Every 2 seconds.\n - PING_EVERY_4S: Every 4 seconds.\n - PING_EVERY_8S: Every 8 seconds.\n - PING_EVERY_16S: Every 16 seconds.\n - PING_EVERY_32S: Every 32 seconds.\n - PING_EVERY_64S: Every 64 seconds.\n - PING_EVERY_128S: Every 128 seconds."
    },
    "v3PingSlotPeriodValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3PingSlotPeriod"
        }
      }
    },
    "v3PowerState": {
      "type": "string",
      "enum": [
        "POWER_UNKNOWN",
        "POWER_BATTERY",
        "POWER_EXTERNAL"
      ],
      "default": "POWER_UNKNOWN",
      "description": "Power state of the device."
    },
    "v3QRCodeFormat": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "field_mask": {
          "type": "string",
          "description": "The entity fields required to generate the QR code."
        }
      }
    },
    "v3QRCodeFormats": {
      "type": "object",
      "properties": {
        "formats": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v3QRCodeFormat"
          },
          "description": "Available formats. The map key is the format identifier."
        }
      }
    },
    "v3RejoinCountExponent": {
      "type": "string",
      "enum": [
        "REJOIN_COUNT_16",
        "REJOIN_COUNT_32",
        "REJOIN_COUNT_64",
        "REJOIN_COUNT_128",
        "REJOIN_COUNT_256",
        "REJOIN_COUNT_512",
        "REJOIN_COUNT_1024",
        "REJOIN_COUNT_2048",
        "REJOIN_COUNT_4096",
        "REJOIN_COUNT_8192",
        "REJOIN_COUNT_16384",
        "REJOIN_COUNT_32768",
        "REJOIN_COUNT_65536",
        "REJOIN_COUNT_131072",
        "REJOIN_COUNT_262144",
        "REJOIN_COUNT_524288"
      ],
      "default": "REJOIN_COUNT_16"
    },
    "v3RejoinPeriodExponent": {
      "type": "string",
      "enum": [
        "REJOIN_PERIOD_0",
        "REJOIN_PERIOD_1",
        "REJOIN_PERIOD_2",
        "REJOIN_PERIOD_3",
        "REJOIN_PERIOD_4",
        "REJOIN_PERIOD_5",
        "REJOIN_PERIOD_6",
        "REJOIN_PERIOD_7"
      ],
      "default": "REJOIN_PERIOD_0",
      "description": " - REJOIN_PERIOD_0: Every 32 to 64 seconds.\n - REJOIN_PERIOD_1: Every 64 to 96 seconds.\n - REJOIN_PERIOD_2: Every 128 to 160 seconds.\n - REJOIN_PERIOD_3: Every 256 to 288 seconds.\n - REJOIN_PERIOD_4: Every 512 to 544 seconds.\n - REJOIN_PERIOD_5: Every 1024 to 1056 seconds.\n - REJOIN_PERIOD_6: Every 2048 to 2080 seconds.\n - REJOIN_PERIOD_7: Every 4096 to 4128 seconds."
    },
    "v3RejoinRequestPayload": {
      "type": "object",
      "properties": {
        "rejoin_type": {
          "$ref": "#/definitions/v3RejoinRequestType"
        },
        "net_id": {
          "type": "string",
          "format": "string",
          "example": "000013"
        },
        "join_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "dev_eui": {
          "type": "string",
          "format": "string",
          "example": "70B3D57ED000ABCD"
        },
        "rejoin_cnt": {
          "type": "integer",
          "format": "int64",
          "description": "Contains RJCount0 or RJCount1 depending on rejoin_type."
        }
      }
    },
    "v3RejoinRequestType": {
      "type": "string",
      "enum": [
        "CONTEXT",
        "SESSION",
        "KEYS"
      ],
      "default": "CONTEXT",
      "description": " - CONTEXT: Resets DevAddr, Session Keys, Frame Counters, Radio Parameters.\n - SESSION: Equivalent to the initial JoinRequest.\n - KEYS: Resets DevAddr, Session Keys, Frame Counters, while keeping the Radio Parameters."
    },
    "v3RejoinTimeExponent": {
      "type": "string",
      "enum": [
        "REJOIN_TIME_0",
        "REJOIN_TIME_1",
        "REJOIN_TIME_2",
        "REJOIN_TIME_3",
        "REJOIN_TIME_4",
        "REJOIN_TIME_5",
        "REJOIN_TIME_6",
        "REJOIN_TIME_7",
        "REJOIN_TIME_8",
        "REJOIN_TIME_9",
        "REJOIN_TIME_10",
        "REJOIN_TIME_11",
        "REJOIN_TIME_12",
        "REJOIN_TIME_13",
        "REJOIN_TIME_14",
        "REJOIN_TIME_15"
      ],
      "default": "REJOIN_TIME_0",
      "description": " - REJOIN_TIME_0: Every ~17.1 minutes.\n - REJOIN_TIME_1: Every ~34.1 minutes.\n - REJOIN_TIME_2: Every ~1.1 hours.\n - REJOIN_TIME_3: Every ~2.3 hours.\n - REJOIN_TIME_4: Every ~4.6 hours.\n - REJOIN_TIME_5: Every ~9.1 hours.\n - REJOIN_TIME_6: Every ~18.2 hours.\n - REJOIN_TIME_7: Every ~1.5 days.\n - REJOIN_TIME_8: Every ~3.0 days.\n - REJOIN_TIME_9: Every ~6.1 days.\n - REJOIN_TIME_10: Every ~12.1 days.\n - REJOIN_TIME_11: Every ~3.5 weeks.\n - REJOIN_TIME_12: Every ~1.6 months.\n - REJOIN_TIME_13: Every ~3.2 months.\n - REJOIN_TIME_14: Every ~6.4 months.\n - REJOIN_TIME_15: Every ~1.1 year."
    },
    "v3RelayCADPeriodicity": {
      "type": "string",
      "enum": [
        "RELAY_CAD_PERIODICITY_1_SECOND",
        "RELAY_CAD_PERIODICITY_500_MILLISECONDS",
        "RELAY_CAD_PERIODICITY_250_MILLISECONDS",
        "RELAY_CAD_PERIODICITY_100_MILLISECONDS",
        "RELAY_CAD_PERIODICITY_50_MILLISECONDS",
        "RELAY_CAD_PERIODICITY_20_MILLISECONDS"
      ],
      "default": "RELAY_CAD_PERIODICITY_1_SECOND",
      "title": "- RELAY_CAD_PERIODICITY_20_MILLISECONDS: sic"
    },
    "v3RelayCtrlUplinkListAction": {
      "type": "string",
      "enum": [
        "RELAY_CTRL_UPLINK_LIST_ACTION_READ_W_F_CNT",
        "RELAY_CTRL_UPLINK_LIST_ACTION_REMOVE_TRUSTED_END_DEVICE"
      ],
      "default": "RELAY_CTRL_UPLINK_LIST_ACTION_READ_W_F_CNT"
    },
    "v3RelayEndDeviceAlwaysMode": {
      "type": "object"
    },
    "v3RelayEndDeviceControlledMode": {
      "type": "object"
    },
    "v3RelayEndDeviceDynamicMode": {
      "type": "object",
      "properties": {
        "smart_enable_level": {
          "$ref": "#/definitions/v3RelaySmartEnableLevel",
          "description": "The number of consecutive uplinks without a valid downlink before the end device attempts\nto use the relay mode to transmit messages."
        }
      }
    },
    "v3RelayForwardDownlinkReq": {
      "type": "object",
      "properties": {
        "raw_payload": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v3RelayForwardLimits": {
      "type": "object",
      "properties": {
        "bucket_size": {
          "$ref": "#/definitions/v3RelayLimitBucketSize",
          "description": "The multiplier used to compute the total bucket size for the limits.\nThe multiplier is multiplied by the reload rate in order to compute the total bucket size."
        },
        "reload_rate": {
          "type": "integer",
          "format": "int64",
          "description": "The number of tokens which are replenished in the bucket every hour."
        }
      }
    },
    "v3RelayLimitBucketSize": {
      "type": "string",
      "enum": [
        "RELAY_LIMIT_BUCKET_SIZE_1",
        "RELAY_LIMIT_BUCKET_SIZE_2",
        "RELAY_LIMIT_BUCKET_SIZE_4",
        "RELAY_LIMIT_BUCKET_SIZE_12"
      ],
      "default": "RELAY_LIMIT_BUCKET_SIZE_1",
      "title": "- RELAY_LIMIT_BUCKET_SIZE_12: sic"
    },
    "v3RelayResetLimitCounter": {
      "type": "string",
      "enum": [
        "RELAY_RESET_LIMIT_COUNTER_ZERO",
        "RELAY_RESET_LIMIT_COUNTER_RELOAD_RATE",
        "RELAY_RESET_LIMIT_COUNTER_MAX_VALUE",
        "RELAY_RESET_LIMIT_COUNTER_NO_RESET"
      ],
      "default": "RELAY_RESET_LIMIT_COUNTER_ZERO"
    },
    "v3RelaySecondChAckOffset": {
      "type": "string",
      "enum": [
        "RELAY_SECOND_CH_ACK_OFFSET_0",
        "RELAY_SECOND_CH_ACK_OFFSET_200",
        "RELAY_SECOND_CH_ACK_OFFSET_400",
        "RELAY_SECOND_CH_ACK_OFFSET_800",
        "RELAY_SECOND_CH_ACK_OFFSET_1600",
        "RELAY_SECOND_CH_ACK_OFFSET_3200"
      ],
      "default": "RELAY_SECOND_CH_ACK_OFFSET_0",
      "title": "- RELAY_SECOND_CH_ACK_OFFSET_0: 0 kHz\n - RELAY_SECOND_CH_ACK_OFFSET_200: 200 kHz\n - RELAY_SECOND_CH_ACK_OFFSET_400: 400 kHz\n - RELAY_SECOND_CH_ACK_OFFSET_800: 800 kHz\n - RELAY_SECOND_CH_ACK_OFFSET_1600: 1.6 MHz\n - RELAY_SECOND_CH_ACK_OFFSET_3200: 3.2 MHz"
    },
    "v3RelaySecondChannel": {
      "type": "object",
      "properties": {
        "ack_offset": {
          "$ref": "#/definitions/v3RelaySecondChAckOffset",
          "description": "The frequency (Hz) offset used for the WOR acknowledgement."
        },
        "data_rate_index": {
          "$ref": "#/definitions/v3DataRateIndex",
          "description": "The data rate index used by the WOR and WOR acknowledgement."
        },
        "frequency": {
          "type": "string",
          "format": "uint64",
          "description": "The frequency (Hz) used by the wake on radio message."
        }
      }
    },
    "v3RelaySettings": {
      "type": "object",
      "properties": {
        "serving": {
          "$ref": "#/definitions/v3ServingRelaySettings"
        },
        "served": {
          "$ref": "#/definitions/v3ServedRelaySettings"
        }
      },
      "description": "RelaySettings represent the settings of a relay.\nThis is used internally by the Network Server."
    },
    "v3RelaySmartEnableLevel": {
      "type": "string",
      "enum": [
        "RELAY_SMART_ENABLE_LEVEL_8",
        "RELAY_SMART_ENABLE_LEVEL_16",
        "RELAY_SMART_ENABLE_LEVEL_32",
        "RELAY_SMART_ENABLE_LEVEL_64"
      ],
      "default": "RELAY_SMART_ENABLE_LEVEL_8"
    },
    "v3RelayUplinkForwardLimits": {
      "type": "object",
      "properties": {
        "bucket_size": {
          "$ref": "#/definitions/v3RelayLimitBucketSize",
          "description": "The multiplier used to compute the total bucket size for the limits.\nThe multiplier is multiplied by the reload rate in order to compute the total bucket size."
        },
        "reload_rate": {
          "type": "integer",
          "format": "int64",
          "description": "The number of tokens which are replenished in the bucket every hour."
        }
      }
    },
    "v3RelayUplinkForwardingRule": {
      "type": "object",
      "properties": {
        "limits": {
          "$ref": "#/definitions/v3RelayUplinkForwardLimits",
          "description": "Bucket configuration for the served end device.\nIf unset, no individual limits will apply to the end device, but the relay global limitations will apply."
        },
        "last_w_f_cnt": {
          "type": "integer",
          "format": "int64",
          "description": "Last wake on radio frame counter used by the served end device."
        },
        "device_id": {
          "type": "string",
          "description": "End device identifier of the served end device."
        },
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Session key ID of the session keys used to derive the root relay session key."
        }
      }
    },
    "v3Right": {
      "type": "string",
      "enum": [
        "right_invalid",
        "RIGHT_USER_INFO",
        "RIGHT_USER_SETTINGS_BASIC",
        "RIGHT_USER_SETTINGS_API_KEYS",
        "RIGHT_USER_DELETE",
        "RIGHT_USER_AUTHORIZED_CLIENTS",
        "RIGHT_USER_APPLICATIONS_LIST",
        "RIGHT_USER_APPLICATIONS_CREATE",
        "RIGHT_USER_GATEWAYS_LIST",
        "RIGHT_USER_GATEWAYS_CREATE",
        "RIGHT_USER_CLIENTS_LIST",
        "RIGHT_USER_CLIENTS_CREATE",
        "RIGHT_USER_ORGANIZATIONS_LIST",
        "RIGHT_USER_ORGANIZATIONS_CREATE",
        "RIGHT_USER_NOTIFICATIONS_READ",
        "RIGHT_USER_ALL",
        "RIGHT_APPLICATION_INFO",
        "RIGHT_APPLICATION_SETTINGS_BASIC",
        "RIGHT_APPLICATION_SETTINGS_API_KEYS",
        "RIGHT_APPLICATION_SETTINGS_COLLABORATORS",
        "RIGHT_APPLICATION_SETTINGS_PACKAGES",
        "RIGHT_APPLICATION_DELETE",
        "RIGHT_APPLICATION_DEVICES_READ",
        "RIGHT_APPLICATION_DEVICES_WRITE",
        "RIGHT_APPLICATION_DEVICES_READ_KEYS",
        "RIGHT_APPLICATION_DEVICES_WRITE_KEYS",
        "RIGHT_APPLICATION_TRAFFIC_READ",
        "RIGHT_APPLICATION_TRAFFIC_UP_WRITE",
        "RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE",
        "RIGHT_APPLICATION_LINK",
        "RIGHT_APPLICATION_ALL",
        "RIGHT_CLIENT_ALL",
        "RIGHT_CLIENT_INFO",
        "RIGHT_CLIENT_SETTINGS_BASIC",
        "RIGHT_CLIENT_SETTINGS_COLLABORATORS",
        "RIGHT_CLIENT_DELETE",
        "RIGHT_GATEWAY_INFO",
        "RIGHT_GATEWAY_SETTINGS_BASIC",
        "RIGHT_GATEWAY_SETTINGS_API_KEYS",
        "RIGHT_GATEWAY_SETTINGS_COLLABORATORS",
        "RIGHT_GATEWAY_DELETE",
        "RIGHT_GATEWAY_TRAFFIC_READ",
        "RIGHT_GATEWAY_TRAFFIC_DOWN_WRITE",
        "RIGHT_GATEWAY_LINK",
        "RIGHT_GATEWAY_STATUS_READ",
        "RIGHT_GATEWAY_LOCATION_READ",
        "RIGHT_GATEWAY_WRITE_SECRETS",
        "RIGHT_GATEWAY_READ_SECRETS",
        "RIGHT_GATEWAY_ALL",
        "RIGHT_ORGANIZATION_INFO",
        "RIGHT_ORGANIZATION_SETTINGS_BASIC",
        "RIGHT_ORGANIZATION_SETTINGS_API_KEYS",
        "RIGHT_ORGANIZATION_SETTINGS_MEMBERS",
        "RIGHT_ORGANIZATION_DELETE",
        "RIGHT_ORGANIZATION_APPLICATIONS_LIST",
        "RIGHT_ORGANIZATION_APPLICATIONS_CREATE",
        "RIGHT_ORGANIZATION_GATEWAYS_LIST",
        "RIGHT_ORGANIZATION_GATEWAYS_CREATE",
        "RIGHT_ORGANIZATION_CLIENTS_LIST",
        "RIGHT_ORGANIZATION_CLIENTS_CREATE",
        "RIGHT_ORGANIZATION_ADD_AS_COLLABORATOR",
        "RIGHT_ORGANIZATION_ALL",
        "RIGHT_SEND_INVITES",
        "RIGHT_ALL"
      ],
      "default": "right_invalid",
      "description": "Right is the enum that defines all the different rights to do something in the network.\n\n - RIGHT_USER_INFO: The right to view user information.\n - RIGHT_USER_SETTINGS_BASIC: The right to edit basic user settings.\n - RIGHT_USER_SETTINGS_API_KEYS: The right to view and edit user API keys.\n - RIGHT_USER_DELETE: The right to delete user account.\n - RIGHT_USER_AUTHORIZED_CLIENTS: The right to view and edit authorized OAuth clients of the user.\n - RIGHT_USER_APPLICATIONS_LIST: The right to list applications the user is a collaborator of.\n - RIGHT_USER_APPLICATIONS_CREATE: The right to create an application under the user account.\n - RIGHT_USER_GATEWAYS_LIST: The right to list gateways the user is a collaborator of.\n - RIGHT_USER_GATEWAYS_CREATE: The right to create a gateway under the account of the user.\n - RIGHT_USER_CLIENTS_LIST: The right to list OAuth clients the user is a collaborator of.\n - RIGHT_USER_CLIENTS_CREATE: The right to create an OAuth client under the account of the user.\n - RIGHT_USER_ORGANIZATIONS_LIST: The right to list organizations the user is a member of.\n - RIGHT_USER_ORGANIZATIONS_CREATE: The right to create an organization under the user account.\n - RIGHT_USER_NOTIFICATIONS_READ: The right to read notifications sent to the user.\n - RIGHT_USER_ALL: The pseudo-right for all (current and future) user rights.\n - RIGHT_APPLICATION_INFO: The right to view application information.\n - RIGHT_APPLICATION_SETTINGS_BASIC: The right to edit basic application settings.\n - RIGHT_APPLICATION_SETTINGS_API_KEYS: The right to view and edit application API keys.\n - RIGHT_APPLICATION_SETTINGS_COLLABORATORS: The right to view and edit application collaborators.\n - RIGHT_APPLICATION_SETTINGS_PACKAGES: The right to view and edit application packages and associations.\n - RIGHT_APPLICATION_DELETE: The right to delete application.\n - RIGHT_APPLICATION_DEVICES_READ: The right to view devices in application.\n - RIGHT_APPLICATION_DEVICES_WRITE: The right to create devices in application.\n - RIGHT_APPLICATION_DEVICES_READ_KEYS: The right to view device keys in application.\nNote that keys may not be stored in a way that supports viewing them.\n - RIGHT_APPLICATION_DEVICES_WRITE_KEYS: The right to edit device keys in application.\n - RIGHT_APPLICATION_TRAFFIC_READ: The right to read application traffic (uplink and downlink).\n - RIGHT_APPLICATION_TRAFFIC_UP_WRITE: The right to write uplink application traffic.\n - RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE: The right to write downlink application traffic.\n - RIGHT_APPLICATION_LINK: The right to link as Application to a Network Server for traffic exchange,\ni.e. read uplink and write downlink (API keys only).\nThis right is typically only given to an Application Server.\nThis right implies RIGHT_APPLICATION_INFO, RIGHT_APPLICATION_TRAFFIC_READ,\nand RIGHT_APPLICATION_TRAFFIC_DOWN_WRITE.\n - RIGHT_APPLICATION_ALL: The pseudo-right for all (current and future) application rights.\n - RIGHT_CLIENT_ALL: The pseudo-right for all (current and future) OAuth client rights.\n - RIGHT_CLIENT_INFO: The right to read client information.\n - RIGHT_CLIENT_SETTINGS_BASIC: The right to edit basic client settings.\n - RIGHT_CLIENT_SETTINGS_COLLABORATORS: The right to view and edit client collaborators.\n - RIGHT_CLIENT_DELETE: The right to delete a client.\n - RIGHT_GATEWAY_INFO: The right to view gateway information.\n - RIGHT_GATEWAY_SETTINGS_BASIC: The right to edit basic gateway settings.\n - RIGHT_GATEWAY_SETTINGS_API_KEYS: The right to view and edit gateway API keys.\n - RIGHT_GATEWAY_SETTINGS_COLLABORATORS: The right to view and edit gateway collaborators.\n - RIGHT_GATEWAY_DELETE: The right to delete gateway.\n - RIGHT_GATEWAY_TRAFFIC_READ: The right to read gateway traffic.\n - RIGHT_GATEWAY_TRAFFIC_DOWN_WRITE: The right to write downlink gateway traffic.\n - RIGHT_GATEWAY_LINK: The right to link as Gateway to a Gateway Server for traffic exchange,\ni.e. write uplink and read downlink (API keys only)\nThis right is typically only given to a gateway.\nThis right implies RIGHT_GATEWAY_INFO.\n - RIGHT_GATEWAY_STATUS_READ: The right to view gateway status.\n - RIGHT_GATEWAY_LOCATION_READ: The right to view view gateway location.\n - RIGHT_GATEWAY_WRITE_SECRETS: The right to store secrets associated with this gateway.\n - RIGHT_GATEWAY_READ_SECRETS: The right to retrieve secrets associated with this gateway.\n - RIGHT_GATEWAY_ALL: The pseudo-right for all (current and future) gateway rights.\n - RIGHT_ORGANIZATION_INFO: The right to view organization information.\n - RIGHT_ORGANIZATION_SETTINGS_BASIC: The right to edit basic organization settings.\n - RIGHT_ORGANIZATION_SETTINGS_API_KEYS: The right to view and edit organization API keys.\n - RIGHT_ORGANIZATION_SETTINGS_MEMBERS: The right to view and edit organization members.\n - RIGHT_ORGANIZATION_DELETE: The right to delete organization.\n - RIGHT_ORGANIZATION_APPLICATIONS_LIST: The right to list the applications the organization is a collaborator of.\n - RIGHT_ORGANIZATION_APPLICATIONS_CREATE: The right to create an application under the organization.\n - RIGHT_ORGANIZATION_GATEWAYS_LIST: The right to list the gateways the organization is a collaborator of.\n - RIGHT_ORGANIZATION_GATEWAYS_CREATE: The right to create a gateway under the organization.\n - RIGHT_ORGANIZATION_CLIENTS_LIST: The right to list the OAuth clients the organization is a collaborator of.\n - RIGHT_ORGANIZATION_CLIENTS_CREATE: The right to create an OAuth client under the organization.\n - RIGHT_ORGANIZATION_ADD_AS_COLLABORATOR: The right to add the organization as a collaborator on an existing entity.\n - RIGHT_ORGANIZATION_ALL: The pseudo-right for all (current and future) organization rights.\n - RIGHT_SEND_INVITES: The right to send invites to new users.\nNote that this is not prefixed with \"USER_\"; it is not a right on the user entity.\n - RIGHT_ALL: The pseudo-right for all (current and future) possible rights."
    },
    "v3Rights": {
      "type": "object",
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        }
      }
    },
    "v3RootKeys": {
      "type": "object",
      "properties": {
        "root_key_id": {
          "type": "string",
          "description": "Join Server issued identifier for the root keys."
        },
        "app_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Application Key."
        },
        "nwk_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Network Key."
        }
      },
      "description": "Root keys for a LoRaWAN device.\nThese are stored on the Join Server."
    },
    "v3RxDelay": {
      "type": "string",
      "enum": [
        "RX_DELAY_0",
        "RX_DELAY_1",
        "RX_DELAY_2",
        "RX_DELAY_3",
        "RX_DELAY_4",
        "RX_DELAY_5",
        "RX_DELAY_6",
        "RX_DELAY_7",
        "RX_DELAY_8",
        "RX_DELAY_9",
        "RX_DELAY_10",
        "RX_DELAY_11",
        "RX_DELAY_12",
        "RX_DELAY_13",
        "RX_DELAY_14",
        "RX_DELAY_15"
      ],
      "default": "RX_DELAY_0",
      "description": " - RX_DELAY_0: 1 second.\n - RX_DELAY_1: 1 second.\n - RX_DELAY_2: 2 seconds.\n - RX_DELAY_3: 3 seconds.\n - RX_DELAY_4: 4 seconds.\n - RX_DELAY_5: 5 seconds.\n - RX_DELAY_6: 6 seconds.\n - RX_DELAY_7: 7 seconds.\n - RX_DELAY_8: 8 seconds.\n - RX_DELAY_9: 9 seconds.\n - RX_DELAY_10: 10 seconds.\n - RX_DELAY_11: 11 seconds.\n - RX_DELAY_12: 12 seconds.\n - RX_DELAY_13: 13 seconds.\n - RX_DELAY_14: 14 seconds.\n - RX_DELAY_15: 15 seconds."
    },
    "v3RxDelayValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/v3RxDelay"
        }
      }
    },
    "v3ScheduleDownlinkResponse": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "string",
          "description": "The amount of time between the message has been scheduled and it will be transmitted by the gateway."
        },
        "downlink_path": {
          "$ref": "#/definitions/v3DownlinkPath",
          "description": "Downlink path chosen by the Gateway Server."
        },
        "rx1": {
          "type": "boolean",
          "description": "Whether RX1 has been chosen for the downlink message.\nBoth RX1 and RX2 can be used for transmitting the same message by the same gateway."
        },
        "rx2": {
          "type": "boolean",
          "description": "Whether RX2 has been chosen for the downlink message.\nBoth RX1 and RX2 can be used for transmitting the same message by the same gateway."
        }
      }
    },
    "v3SearchAccountsResponse": {
      "type": "object",
      "properties": {
        "account_ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3OrganizationOrUserIdentifiers"
          }
        }
      }
    },
    "v3Secret": {
      "type": "object",
      "properties": {
        "key_id": {
          "type": "string",
          "description": "ID of the Key used to encrypt the secret."
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Secret contains a secret value. It also contains the ID of the Encryption key used to encrypt it."
    },
    "v3SendInvitationRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "v3ServedRelayParameters": {
      "type": "object",
      "properties": {
        "always": {
          "$ref": "#/definitions/v3RelayEndDeviceAlwaysMode",
          "description": "The end device will always attempt to use the relay mode in order to send uplink messages."
        },
        "dynamic": {
          "$ref": "#/definitions/v3RelayEndDeviceDynamicMode",
          "description": "The end device will attempt to use relay mode only after a number of uplink messages have been sent without\nreceiving a valid a downlink message."
        },
        "end_device_controlled": {
          "$ref": "#/definitions/v3RelayEndDeviceControlledMode",
          "description": "The end device will control when it uses the relay mode. This is the default mode."
        },
        "backoff": {
          "type": "integer",
          "format": "int64",
          "description": "Number of wake on radio frames to be sent without an acknowledgement before sending the uplink message directly."
        },
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel",
          "description": "Second wake on radio channel configuration."
        },
        "serving_device_id": {
          "type": "string",
          "description": "End device identifier of the serving end device."
        }
      }
    },
    "v3ServedRelaySettings": {
      "type": "object",
      "properties": {
        "always": {
          "$ref": "#/definitions/v3RelayEndDeviceAlwaysMode",
          "description": "The end device will always attempt to use the relay mode in order to send uplink messages."
        },
        "dynamic": {
          "$ref": "#/definitions/v3RelayEndDeviceDynamicMode",
          "description": "The end device will attempt to use relay mode only after a number of uplink messages have been sent without\nreceiving a valid a downlink message."
        },
        "end_device_controlled": {
          "$ref": "#/definitions/v3RelayEndDeviceControlledMode",
          "description": "The end device will control when it uses the relay mode. This is the default mode."
        },
        "backoff": {
          "type": "integer",
          "format": "int64",
          "description": "Number of wake on radio frames to be sent without an acknowledgement before sending the uplink message directly.\nIf unset, the default value from Network Server configuration will be used."
        },
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel",
          "description": "Second wake on radio channel configuration."
        },
        "serving_device_id": {
          "type": "string",
          "description": "End device identifier of the serving end device."
        }
      }
    },
    "v3ServingRelayForwardingLimits": {
      "type": "object",
      "properties": {
        "reset_behavior": {
          "$ref": "#/definitions/v3RelayResetLimitCounter",
          "description": "Reset behavior of the buckets upon limit update."
        },
        "join_requests": {
          "$ref": "#/definitions/v3RelayForwardLimits",
          "description": "Bucket configuration for join requests.\nIf unset, no individual limits will apply to join requests, but the relay overall limitations will apply."
        },
        "notifications": {
          "$ref": "#/definitions/v3RelayForwardLimits",
          "description": "Bucket configuration for unknown device notifications.\nIf unset, no individual limits will apply to unknown end device notifications, but the relay overall\nlimitations will still apply."
        },
        "uplink_messages": {
          "$ref": "#/definitions/v3RelayForwardLimits",
          "description": "Bucket configuration for uplink messages across all served end devices.\nIf unset, no individual limits will apply to uplink messages across all served end devices, but the relay\noverall limitations will still apply."
        },
        "overall": {
          "$ref": "#/definitions/v3RelayForwardLimits",
          "description": "Bucket configuration for all relay messages.\nIf unset, no overall limits will apply to the relay, but individual limitations will still apply."
        }
      }
    },
    "v3ServingRelayParameters": {
      "type": "object",
      "properties": {
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel",
          "description": "Second wake on radio channel configuration."
        },
        "default_channel_index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the default wake on radio channel."
        },
        "cad_periodicity": {
          "$ref": "#/definitions/v3RelayCADPeriodicity",
          "description": "Channel activity detection periodicity."
        },
        "uplink_forwarding_rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3RelayUplinkForwardingRule"
          },
          "description": "Configured uplink forwarding rules."
        },
        "limits": {
          "$ref": "#/definitions/v3ServingRelayForwardingLimits",
          "description": "Configured forwarding limits.\nIf unset, the default value from Network Server configuration will be used."
        }
      }
    },
    "v3ServingRelaySettings": {
      "type": "object",
      "properties": {
        "second_channel": {
          "$ref": "#/definitions/v3RelaySecondChannel",
          "description": "Second wake on radio channel configuration."
        },
        "default_channel_index": {
          "type": "integer",
          "format": "int64",
          "description": "Index of the default wake on radio channel.\nIf unset, the default value from Network Server configuration will be used."
        },
        "cad_periodicity": {
          "$ref": "#/definitions/v3RelayCADPeriodicity",
          "description": "Channel activity detection periodicity."
        },
        "uplink_forwarding_rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3RelayUplinkForwardingRule"
          },
          "description": "Configured uplink forwarding rules."
        },
        "limits": {
          "$ref": "#/definitions/v3ServingRelayForwardingLimits",
          "description": "Configured forwarding limits.\nIf unset, the default value from Network Server configuration will be used."
        }
      }
    },
    "v3Session": {
      "type": "object",
      "properties": {
        "dev_addr": {
          "type": "string",
          "format": "string",
          "example": "2600ABCD",
          "description": "Device Address, issued by the Network Server or chosen by device manufacturer in case of testing range (beginning with 00-03).\nKnown by Network Server, Application Server and Join Server. Owned by Network Server."
        },
        "keys": {
          "$ref": "#/definitions/v3SessionKeys"
        },
        "last_f_cnt_up": {
          "type": "integer",
          "format": "int64",
          "description": "Last uplink frame counter value used. Network Server only. Application Server assumes the Network Server checked it."
        },
        "last_n_f_cnt_down": {
          "type": "integer",
          "format": "int64",
          "description": "Last network downlink frame counter value used. Network Server only."
        },
        "last_a_f_cnt_down": {
          "type": "integer",
          "format": "int64",
          "description": "Last application downlink frame counter value used. Application Server only."
        },
        "last_conf_f_cnt_down": {
          "type": "integer",
          "format": "int64",
          "description": "Frame counter of the last confirmed downlink message sent. Network Server only."
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the session started. Network Server only."
        },
        "queued_application_downlinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ApplicationDownlink"
          },
          "description": "Queued Application downlink messages. Stored in Application Server and Network Server."
        }
      }
    },
    "v3SessionKeys": {
      "type": "object",
      "properties": {
        "session_key_id": {
          "type": "string",
          "format": "byte",
          "description": "Join Server issued identifier for the session keys.\nThis ID can be used to request the keys from the Join Server in case the are lost."
        },
        "f_nwk_s_int_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Forwarding Network Session Integrity Key (or Network Session Key in 1.0 compatibility mode).\nThis key is stored by the (forwarding) Network Server."
        },
        "s_nwk_s_int_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Serving Network Session Integrity Key.\nThis key is stored by the (serving) Network Server."
        },
        "nwk_s_enc_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Network Session Encryption Key.\nThis key is stored by the (serving) Network Server."
        },
        "app_s_key": {
          "$ref": "#/definitions/v3KeyEnvelope",
          "description": "The (encrypted) Application Session Key.\nThis key is stored by the Application Server."
        }
      },
      "description": "Session keys for a LoRaWAN session.\nOnly the components for which the keys were meant, will have the key-encryption-key (KEK) to decrypt the individual keys."
    },
    "v3SetPacketBrokerDefaultGatewayVisibilityRequest": {
      "type": "object",
      "properties": {
        "visibility": {
          "$ref": "#/definitions/v3PacketBrokerGatewayVisibility"
        }
      }
    },
    "v3SetPacketBrokerDefaultRoutingPolicyRequest": {
      "type": "object",
      "properties": {
        "uplink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyUplink",
          "description": "Uplink policy."
        },
        "downlink": {
          "$ref": "#/definitions/v3PacketBrokerRoutingPolicyDownlink",
          "description": "Downlink policy."
        }
      }
    },
    "v3State": {
      "type": "string",
      "enum": [
        "STATE_REQUESTED",
        "STATE_APPROVED",
        "STATE_REJECTED",
        "STATE_FLAGGED",
        "STATE_SUSPENDED"
      ],
      "default": "STATE_REQUESTED",
      "description": "State enum defines states that an entity can be in.\n\n - STATE_REQUESTED: Denotes that the entity has been requested and is pending review by an admin.\n - STATE_APPROVED: Denotes that the entity has been reviewed and approved by an admin.\n - STATE_REJECTED: Denotes that the entity has been reviewed and rejected by an admin.\n - STATE_FLAGGED: Denotes that the entity has been flagged and is pending review by an admin.\n - STATE_SUSPENDED: Denotes that the entity has been reviewed and suspended by an admin."
    },
    "v3StreamEventsRequest": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3EntityIdentifiers"
          }
        },
        "tail": {
          "type": "integer",
          "format": "int64",
          "description": "If greater than zero, this will return historical events, up to this maximum when the stream starts.\nIf used in combination with \"after\", the limit that is reached first, is used.\nThe availability of historical events depends on server support and retention policy."
        },
        "after": {
          "type": "string",
          "format": "date-time",
          "description": "If not empty, this will return historical events after the given time when the stream starts.\nIf used in combination with \"tail\", the limit that is reached first, is used.\nThe availability of historical events depends on server support and retention policy."
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If provided, this will filter events, so that only events with the given names are returned.\nNames can be provided as either exact event names (e.g. 'gs.up.receive'),\nor as regular expressions (e.g. '/^gs\\..+/')."
        }
      }
    },
    "v3TxAcknowledgment": {
      "type": "object",
      "properties": {
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Correlation IDs for the downlink message.\nSet automatically by the UDP and LBS frontends.\nFor gRPC and the MQTT v3 frontends, the correlation IDs must match the ones of the downlink message the Tx acknowledgment message refers to."
        },
        "result": {
          "$ref": "#/definitions/TxAcknowledgmentResult"
        },
        "downlink_message": {
          "$ref": "#/definitions/lorawanv3DownlinkMessage",
          "description": "The acknowledged downlink message. Set by the Gateway Server."
        }
      }
    },
    "v3TxRequest": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/v3Class"
        },
        "downlink_paths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3DownlinkPath"
          },
          "description": "Downlink paths used to select a gateway for downlink.\nIn class A, the downlink paths are required to only contain uplink tokens.\nIn class B and C, the downlink paths may contain uplink tokens and fixed gateways antenna identifiers."
        },
        "rx1_delay": {
          "$ref": "#/definitions/v3RxDelay",
          "description": "Rx1 delay (Rx2 delay is Rx1 delay + 1 second)."
        },
        "rx1_data_rate": {
          "$ref": "#/definitions/v3DataRate",
          "description": "LoRaWAN data rate for Rx1."
        },
        "rx1_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz) for Rx1."
        },
        "rx2_data_rate": {
          "$ref": "#/definitions/v3DataRate",
          "description": "LoRaWAN data rate for Rx2."
        },
        "rx2_frequency": {
          "type": "string",
          "format": "uint64",
          "description": "Frequency (Hz) for Rx2."
        },
        "priority": {
          "$ref": "#/definitions/v3TxSchedulePriority",
          "description": "Priority for scheduling.\nRequests with a higher priority are allocated more channel time than messages with a lower priority, in duty-cycle limited regions.\nA priority of HIGH or higher sets the HiPriorityFlag in the DLMetadata Object."
        },
        "absolute_time": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the downlink message should be transmitted.\nThis value is only valid for class C downlink; class A downlink uses uplink tokens and class B downlink is scheduled on ping slots.\nThis requires the gateway to have GPS time sychronization.\nIf the absolute time is not set, the first available time will be used that does not conflict or violate regional limitations."
        },
        "frequency_plan_id": {
          "type": "string",
          "description": "Frequency plan ID from which the frequencies in this message are retrieved."
        },
        "advanced": {
          "type": "object",
          "title": "Advanced metadata fields\n- can be used for advanced information or experimental features that are not yet formally defined in the API\n- field names are written in snake_case"
        }
      },
      "description": "TxRequest is a request for transmission.\nIf sent to a roaming partner, this request is used to generate the DLMetadata Object (see Backend Interfaces 1.0, Table 22).\nIf the gateway has a scheduler, this request is sent to the gateway, in the order of gateway_ids.\nOtherwise, the Gateway Server attempts to schedule the request and creates the TxSettings."
    },
    "v3TxSchedulePriority": {
      "type": "string",
      "enum": [
        "LOWEST",
        "LOW",
        "BELOW_NORMAL",
        "NORMAL",
        "ABOVE_NORMAL",
        "HIGH",
        "HIGHEST"
      ],
      "default": "LOWEST"
    },
    "v3UpdatePacketBrokerGatewayResponse": {
      "type": "object",
      "properties": {
        "online_ttl": {
          "type": "string",
          "description": "Time to live of the online status."
        }
      }
    },
    "v3UpdateRelayResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/v3RelaySettings",
          "description": "Relay configuration."
        }
      }
    },
    "v3UpdateRelayUplinkForwardingRuleResponse": {
      "type": "object",
      "properties": {
        "rule": {
          "$ref": "#/definitions/v3RelayUplinkForwardingRule",
          "description": "Uplink forwarding rule."
        }
      }
    },
    "v3User": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/v3UserIdentifiers",
          "description": "The identifiers of the user. These are public and can be seen by any authenticated user in the network."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was created. This information is public and can be seen by any authenticated user in the network."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was last updated. This information is public and can be seen by any authenticated user in the network."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the user was deleted. This information is public and can be seen by any authenticated user in the network."
        },
        "name": {
          "type": "string",
          "description": "The name of the user. This information is public and can be seen by any authenticated user in the network."
        },
        "description": {
          "type": "string",
          "description": "A description for the user. This information is public and can be seen by any authenticated user in the network."
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value attributes for this users. Typically used for storing integration-specific data."
        },
        "contact_info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3ContactInfo"
          },
          "description": "Contact information for this user. Typically used to indicate who to contact with security/billing questions about the user.\nThis field is deprecated."
        },
        "primary_email_address": {
          "type": "string",
          "description": "Primary email address that can be used for logging in.\nThis address is not public, use contact_info for that."
        },
        "primary_email_address_validated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the primary email address was validated. Note that email address validation is not required on all networks."
        },
        "password": {
          "type": "string",
          "description": "The password field is only considered when creating a user.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the UpdatePassword method of the UserRegistry service for more information."
        },
        "password_updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "require_password_update": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/v3State",
          "description": "The reviewing state of the user.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
        },
        "state_description": {
          "type": "string",
          "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
        },
        "admin": {
          "type": "boolean",
          "description": "This user is an admin.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by other admins."
        },
        "temporary_password": {
          "type": "string",
          "description": "The temporary password can only be used to update a user's password; never returned on API calls.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the CreateTemporaryPassword method of the UserRegistry service for more information."
        },
        "temporary_password_created_at": {
          "type": "string",
          "format": "date-time"
        },
        "temporary_password_expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "profile_picture": {
          "$ref": "#/definitions/v3Picture",
          "description": "A profile picture for the user.\nThis information is public and can be seen by any authenticated user in the network."
        },
        "console_preferences": {
          "$ref": "#/definitions/v3UserConsolePreferences",
          "description": "Console preferences contains the user's preferences regarding the behavior of the Console."
        }
      },
      "description": "User is the message that defines a user on the network."
    },
    "v3UserAccessCreateAPIKeyBody": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "name": {
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3Right"
          }
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3UserAccessUpdateAPIKeyBody": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "api_key": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Immutable and unique secret value of the API key.\nGenerated by the Access Server."
            },
            "name": {
              "type": "string",
              "description": "User-defined (friendly) name for the API key."
            },
            "rights": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/v3Right"
              },
              "description": "Rights that are granted to this API key."
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "expires_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the api key fields that should be updated."
        }
      }
    },
    "v3UserBookmark": {
      "type": "object",
      "properties": {
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        },
        "entity_ids": {
          "$ref": "#/definitions/v3EntityIdentifiers"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v3UserBookmarkRegistryCreateBody": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Secondary identifier, which can only be used in specific requests."
            }
          }
        },
        "entity_ids": {
          "$ref": "#/definitions/v3EntityIdentifiers"
        }
      }
    },
    "v3UserBookmarks": {
      "type": "object",
      "properties": {
        "bookmarks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3UserBookmark"
          }
        }
      }
    },
    "v3UserConsolePreferences": {
      "type": "object",
      "properties": {
        "console_theme": {
          "$ref": "#/definitions/v3ConsoleTheme"
        },
        "dashboard_layouts": {
          "$ref": "#/definitions/UserConsolePreferencesDashboardLayouts"
        },
        "sort_by": {
          "$ref": "#/definitions/UserConsolePreferencesSortBy"
        }
      },
      "description": "UserConsolePreferences is the message that defines the user preferences for the Console."
    },
    "v3UserIdentifiers": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "This ID shares namespace with organization IDs."
        },
        "email": {
          "type": "string",
          "description": "Secondary identifier, which can only be used in specific requests."
        }
      }
    },
    "v3UserRegistryUpdateBody": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "ids": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Secondary identifier, which can only be used in specific requests."
                }
              },
              "description": "The identifiers of the user. These are public and can be seen by any authenticated user in the network.",
              "title": "The identifiers of the user. These are public and can be seen by any authenticated user in the network."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the user was created. This information is public and can be seen by any authenticated user in the network."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the user was last updated. This information is public and can be seen by any authenticated user in the network."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the user was deleted. This information is public and can be seen by any authenticated user in the network."
            },
            "name": {
              "type": "string",
              "description": "The name of the user. This information is public and can be seen by any authenticated user in the network."
            },
            "description": {
              "type": "string",
              "description": "A description for the user. This information is public and can be seen by any authenticated user in the network."
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value attributes for this users. Typically used for storing integration-specific data."
            },
            "contact_info": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v3ContactInfo"
              },
              "description": "Contact information for this user. Typically used to indicate who to contact with security/billing questions about the user.\nThis field is deprecated."
            },
            "primary_email_address": {
              "type": "string",
              "description": "Primary email address that can be used for logging in.\nThis address is not public, use contact_info for that."
            },
            "primary_email_address_validated_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the primary email address was validated. Note that email address validation is not required on all networks."
            },
            "password": {
              "type": "string",
              "description": "The password field is only considered when creating a user.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the UpdatePassword method of the UserRegistry service for more information."
            },
            "password_updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "require_password_update": {
              "type": "boolean"
            },
            "state": {
              "$ref": "#/definitions/v3State",
              "description": "The reviewing state of the user.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by admins."
            },
            "state_description": {
              "type": "string",
              "description": "A description for the state field.\nThis field can only be modified by admins, and should typically only be updated\nwhen also updating `state`."
            },
            "admin": {
              "type": "boolean",
              "description": "This user is an admin.\nThis information is public and can be seen by any authenticated user in the network.\nThis field can only be modified by other admins."
            },
            "temporary_password": {
              "type": "string",
              "description": "The temporary password can only be used to update a user's password; never returned on API calls.\nIt is not returned on API calls, and can not be updated by updating the User.\nSee the CreateTemporaryPassword method of the UserRegistry service for more information."
            },
            "temporary_password_created_at": {
              "type": "string",
              "format": "date-time"
            },
            "temporary_password_expires_at": {
              "type": "string",
              "format": "date-time"
            },
            "profile_picture": {
              "$ref": "#/definitions/v3Picture",
              "description": "A profile picture for the user.\nThis information is public and can be seen by any authenticated user in the network."
            },
            "console_preferences": {
              "$ref": "#/definitions/v3UserConsolePreferences",
              "description": "Console preferences contains the user's preferences regarding the behavior of the Console."
            }
          },
          "description": "User is the message that defines a user on the network."
        },
        "field_mask": {
          "type": "string",
          "description": "The names of the user fields that should be updated."
        }
      }
    },
    "v3UserSession": {
      "type": "object",
      "properties": {
        "user_ids": {
          "$ref": "#/definitions/v3UserIdentifiers"
        },
        "session_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "session_secret": {
          "type": "string",
          "description": "The session secret is used to compose an authorization key and is never returned."
        }
      }
    },
    "v3UserSessions": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3UserSession"
          }
        }
      }
    },
    "v3Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v3User"
          }
        }
      }
    },
    "v3ValidateEmailRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v3ZeroableFrequencyValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "uint64"
        }
      }
    }
  }
}
